{"mappings":"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","sources":["node_modules/cropperjs/dist/cropper.js","src/js/Calendar.js","src/assets/Montserrat/MontserratGlyphs.js","src/assets/Montserrat/MP/months_cyr.js","src/assets/Montserrat/MP/months.js","src/assets/Montserrat/MP/years.js","src/assets/Montserrat/MP/digits.js","src/assets/Montserrat/MP/secondaryDigits.js","src/assets/Montserrat/MP/weekDays_cyr.js","src/assets/Montserrat/MP/weekDays.js","src/assets/Montserrat/SP/digits.js","src/assets/Montserrat/SP/secondaryDigits.js","src/assets/Montserrat/SP/months.js","src/assets/Montserrat/SP/months_cyr.js","src/assets/Montserrat/SP/weekDays.js","src/assets/Montserrat/SP/weekDays_cyr.js","src/assets/Montserrat/SP/years.js","src/js/SinglePageCalendar.js","src/js/MultiPageCalendar.js","src/js/script.js"],"sourcesContent":["/*!\n * Cropper.js v1.5.13\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2022-11-20T05:30:46.114Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Cropper = factory());\n})(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  }\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper';\n\n  // Actions\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw';\n\n  // Classes\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\");\n\n  // Data keys\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\");\n\n  // Drag modes\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none';\n\n  // Events\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom';\n\n  // Mime types\n  var MIME_TYPE_JPEG = 'image/jpeg';\n\n  // RegExps\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i;\n\n  // Misc\n  // Inspired by the default width and height of a canvas element.\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: MIN_CONTAINER_WIDTH,\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\n        toArray(data).forEach(function (value, key) {\n          callback.call(data, value, key, data);\n        });\n      } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n      style[property] = value;\n    });\n  }\n\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n    var className = element.className.trim();\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    }\n\n    // IE10-11 doesn't support the second parameter of `classList.toggle`\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n  var onceSupported = function () {\n    var supported = false;\n    if (IS_BROWSER) {\n      var once = false;\n      var listener = function listener() {};\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n    return supported;\n  }();\n\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n      element.removeEventListener(event, handler, options);\n    });\n  }\n\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n          listener.apply(element, args);\n        };\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n      element.addEventListener(event, _handler, options);\n    });\n  }\n\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n  function dispatchEvent(element, type, data) {\n    var event;\n\n    // Event and CustomEvent on IE9-11 are global objects, not constructors\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n    return element.dispatchEvent(event);\n  }\n\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n    var values = [];\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    }\n\n    // Rotate should come first before scale to match orientation transform\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n    var maxRatio = 0;\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\n          maxRatio = ratio;\n        }\n      });\n    });\n    return maxRatio;\n  }\n\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n        startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n  function getAdjustedSizes(_ref4) {\n    var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n\n    // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n\n    // Chunk Typed Array for better performance (#435)\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation;\n\n    // Ignores range error when the image does not have correct Exif information\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart;\n\n      // Only handle JPEG image (start by 0xFFD8)\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n          offset += 1;\n        }\n      }\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n          if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n        var _offset;\n        var i;\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n            // 8 is the offset of the current tag's value\n            _offset += 8;\n\n            // Get the original orientation value\n            orientation = dataView.getUint16(_offset, littleEndian);\n\n            // Override the orientation with its default value\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n    return orientation;\n  }\n\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n\n      // Rotate left 180°\n      case 3:\n        rotate = -180;\n        break;\n\n      // Flip vertical\n      case 4:\n        scaleY = -1;\n        break;\n\n      // Flip vertical and rotate right 90°\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n\n      // Rotate right 90°\n      case 6:\n        rotate = 90;\n        break;\n\n      // Flip horizontal and rotate right 90°\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n\n      // Rotate left 90°\n      case 8:\n        rotate = -90;\n        break;\n    }\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n      var minWidth = Number(options.minContainerWidth);\n      var minHeight = Number(options.minContainerHeight);\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n        height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n        imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      canvasData.left = (containerData.width - canvasData.width) / 2;\n      canvasData.top = (containerData.height - canvasData.height) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n        imageData = this.imageData;\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n            width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n            height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n            degree: imageData.rotate || 0\n          }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n        imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n        canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true);\n\n      // Initialize auto crop area\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n      // The width/height of auto crop area must large than \"minWidth/Height\"\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height;\n\n        // The min/maxCropBoxWidth/Height must be less than container's width/height\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        }\n\n        // The minWidth/Height must be less than maxWidth/Height\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n        crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n      if (!preview) {\n        return;\n      }\n      var previews = preview;\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img');\n\n        // Save the original size for recover\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n        img.src = url;\n        img.alt = alt;\n\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n        height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n      var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n      var ratioX = container.offsetWidth / containerData.width;\n      var ratioY = container.offsetHeight / containerData.height;\n      var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY;\n\n      // Resize when width changed or height changed\n      if (ratio !== 1) {\n        var canvasData;\n        var cropBoxData;\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n        this.render();\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n      if (this.disabled) {\n        return;\n      }\n      event.preventDefault();\n\n      // Limit wheel speed to prevent zoom too fast (#21)\n      if (this.wheeling) {\n        return;\n      }\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n        button = event.button;\n      if (this.disabled\n\n      // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && (\n      // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0\n\n      // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n      var options = this.options,\n        pointers = this.pointers;\n      var action;\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      // This line is required for preventing page zooming in iOS browsers\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n      if (this.disabled || !action) {\n        return;\n      }\n      var pointers = this.pointers;\n      event.preventDefault();\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n      var action = this.action,\n        pointers = this.pointers;\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n      if (!action) {\n        return;\n      }\n      event.preventDefault();\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset;\n\n      // Locking aspect ratio in \"free mode\" by holding shift key\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n            break;\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n            break;\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n            break;\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n            break;\n        }\n      };\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n\n        // Resize crop box\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_EAST);\n          width += range.x;\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n          break;\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n          break;\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n          break;\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_SOUTH);\n          height += range.y;\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n          break;\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n          break;\n\n        // Move canvas\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n\n        // Zoom canvas\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n\n        // Create crop box\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n          if (range.y < 0) {\n            top -= height;\n          }\n\n          // Show the crop box if is hidden\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n          break;\n      }\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      }\n\n      // Override\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true);\n\n        // Render canvas after crop box rendered\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n      return this;\n    },\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n      return this;\n    },\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n      element[NAMESPACE] = undefined;\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n      this.uncreate();\n      return this;\n    },\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n        left = _this$canvasData.left,\n        top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n      return this;\n    },\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n        canvasData = this.canvasData;\n      var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          };\n\n          // Zoom from the triggering point of the event\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n      return this;\n    },\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n      return this;\n    },\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n      return this;\n    },\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var data;\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n      return data;\n    },\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n      var cropBoxData = {};\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n        var ratio = imageData.width / imageData.naturalWidth;\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n        this.setCropBoxData(cropBoxData);\n      }\n      return this;\n    },\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n      return data;\n    },\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n        this.renderCanvas(true);\n      }\n      return this;\n    },\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n      return data || {};\n    },\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n        this.renderCropBox();\n      }\n      return this;\n    },\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n\n      // Returns the source canvas if it is not cropped.\n      if (!this.cropped) {\n        return source;\n      }\n      var _this$getData = this.getData(),\n        initialX = _this$getData.x,\n        initialY = _this$getData.y,\n        initialWidth = _this$getData.width,\n        initialHeight = _this$getData.height;\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n      var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: options.width || (ratio !== 1 ? source.width : initialWidth),\n          height: options.height || (ratio !== 1 ? source.height : initialHeight)\n        }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      }\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n      var sourceWidth = source.width;\n      var sourceHeight = source.height;\n\n      // Source canvas parameters\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight;\n\n      // Destination canvas parameters\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n      var params = [srcX, srcY, srcWidth, srcHeight];\n\n      // Avoid \"IndexSizeError\"\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      }\n\n      // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n        if (this.ready) {\n          this.initCropBox();\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n      return this;\n    },\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      _classCallCheck(this, Cropper);\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n        if (element[NAMESPACE]) {\n          return;\n        }\n        element[NAMESPACE] = this;\n        if (tagName === 'img') {\n          this.isImg = true;\n\n          // e.g.: \"img/picture.jpg\"\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url;\n\n          // Stop when it's a blank image\n          if (!url) {\n            return;\n          }\n\n          // e.g.: \"https://example.com/img/picture.jpg\"\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n        if (!url) {\n          return;\n        }\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n          options = this.options;\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        }\n\n        // Only IE10+ supports Typed Arrays\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        }\n\n        // Detect the mime type of the image directly if it is a Data URL\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n          return;\n        }\n\n        // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr;\n\n        // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        };\n\n        // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        // The third parameter is required for avoiding side-effect (#682)\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n          imageData = this.imageData;\n\n        // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n          var _parseOrientation = parseOrientation(orientation);\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n          url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          }\n\n          // Bust cache when there is not a \"crossOrigin\" property (#519)\n          crossOriginUrl = addTimestamp(url);\n        }\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true;\n\n        // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.initialImageData = assign({}, _this2.imageData);\n          _this2.sizing = false;\n          _this2.sized = true;\n          _this2.build();\n        };\n\n        // Most modern browsers (excepts iOS WebKit)\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n        sizingImage.src = image.src;\n\n        // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n        var element = this.element,\n          options = this.options,\n          image = this.image;\n\n        // Create cropper elements\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image);\n\n        // Hide the original image\n        addClass(element, CLASS_HIDDEN);\n\n        // Inserts the cropper after to the current image\n        container.insertBefore(cropper, element.nextSibling);\n\n        // Show the hidden image\n        removeClass(image, CLASS_HIDE);\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n        if (options.autoCrop) {\n          this.crop();\n        }\n        this.setData(options.data);\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        var parentNode = this.cropper.parentNode;\n        if (parentNode) {\n          parentNode.removeChild(this.cropper);\n        }\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n    return Cropper;\n  }();\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n","// import Cropper from \"../../node_modules/cropperjs/dist/cropper.esm.js\";\r\nimport Cropper from 'cropperjs';\r\n\r\nexport class Calendar {\r\n  constructor(\r\n    firstMonthIndex,\r\n    year,\r\n    parentContainer,\r\n    controlsContainer,\r\n    cropControlsContainer,\r\n    lang,\r\n    type\r\n  ) {\r\n    this.firstMonthIndex = firstMonthIndex;\r\n    this.year = year;\r\n    this.parentContainer = parentContainer;\r\n    this.controlsContainer = controlsContainer;\r\n    this.cropControlsContainer = cropControlsContainer;\r\n    this.lang = lang;\r\n    this.type = type;\r\n\r\n    // Dimensions of document (px)\r\n    this.outputDimensions = {\r\n      A5: { width: 1748, height: 2480 },\r\n      A4: { width: 2480, height: 3508 },\r\n      A3: { width: 3508, height: 4961 },\r\n    };\r\n    this.currentSize = \"A4\";\r\n    this.currentMonth = 0;\r\n\r\n    // Month counters\r\n    this.monthCounter = this.firstMonthIndex;\r\n\r\n    this.firstMonth = this.firstMonthIndex;\r\n    this.startYear = this.year;\r\n    this.lastMonth;\r\n    this.endYear;\r\n  }\r\n  // DOM insertion section\r\n  initBasicControls() {\r\n    this.controlsContainer.innerHTML = `\r\n      <button id=\"pdf-download-current\">\r\n        <img src='./assets/icons/pdf-single.svg'/>\r\n      </button>\r\n     \r\n      <button id=\"jpg-download\">\r\n        <img src='./assets/icons/jpg.svg'/>\r\n      </button>\r\n  \r\n        <select id=\"format-select\">\r\n\r\n       </select>\r\n\r\n    <button id=\"crop-btn\">\r\n      <img src='./assets/icons/crop.svg'/>\r\n    </button>\r\n\r\n    <input\r\n      type=\"file\"\r\n      id=\"upload-input\"\r\n      accept=\"image/jpeg, image/png, image/jpg\"\r\n      hidden\r\n      onclick=\"this.value=null;\"/>\r\n          \r\n      <label for=\"upload-input\" id=\"upload-btn\" class=\"upload-btn\">\r\n        <img src='./assets/icons/upload.svg'/>\r\n      </label>\r\n    `;\r\n\r\n    // Set formats\r\n    this.formatSelectInput =\r\n      this.controlsContainer.querySelector(\"#format-select\");\r\n\r\n    const formats = Object.keys(this.outputDimensions);\r\n\r\n    for (const format of formats) {\r\n      const optionEl = document.createElement('option');\r\n      optionEl.setAttribute('value', format);\r\n      optionEl.textContent = format;\r\n\r\n      if (format === this.currentSize) optionEl.selected = true;\r\n      this.formatSelectInput.append(optionEl)\r\n    }\r\n\r\n    this.currentPDFDownloadBtn = this.controlsContainer.querySelector(\r\n      \"#pdf-download-current\"\r\n    );\r\n    this.jpgDownloadBtn = this.controlsContainer.querySelector(\"#jpg-download\");\r\n    this.uploadImgBtn = this.controlsContainer.querySelector(\"#upload-btn\");\r\n\r\n    this.cropBtn = this.controlsContainer.querySelector(\"#crop-btn\");\r\n    this.uploadImgInput = this.controlsContainer.querySelector(\"#upload-input\");\r\n  }\r\n\r\n  initBasicControlsEvents() {\r\n\r\n    this.currentPDFDownloadBtn.addEventListener(\"click\", () => {\r\n      if (this.cropper) {\r\n        this.removeCropper();\r\n      }\r\n\r\n      this.downloadPDF(\"current\");\r\n    });\r\n\r\n    this.jpgDownloadBtn.addEventListener(\"click\", () => {\r\n      if (this.cropper) {\r\n        this.removeCropper();\r\n      }\r\n\r\n      this.downloadCurrentJPG();\r\n    });\r\n\r\n    this.cropBtn.addEventListener(\"click\", () => {\r\n      if (this.cropper) return;\r\n\r\n      const currentImageElement = this.getCurrentMockup('image');\r\n\r\n      if (currentImageElement) {\r\n        this.loading('show');\r\n        this.initCropper(currentImageElement);\r\n        this.cropControlsContainer.classList.remove(\"hide\");\r\n      }\r\n    });\r\n\r\n    this.uploadImgInput.addEventListener(\"input\", (e) => {\r\n      if (this.cropper) {\r\n        this.removeCropper();\r\n      }\r\n\r\n      this.uploadImg(e);\r\n    });\r\n\r\n    this.formatSelectInput.addEventListener(\"input\", (e) => {\r\n      this.currentSize = e.target.value;\r\n    });\r\n  }\r\n\r\n  // Upload/download section\r\n  uploadImg(e) {\r\n    if (!e.target.files[0]) return;\r\n    const imageFile = e.target.files[0];\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (e) => {\r\n      const imageGroup = this.getCurrentMockup('#image-group');\r\n\r\n      const imageEl = document.createElementNS(\r\n        \"http://www.w3.org/2000/svg\",\r\n        \"image\"\r\n      );\r\n\r\n      imageEl.setAttribute(\"height\", this.imagePlaceholderHeight);\r\n      imageEl.setAttribute(\"width\", this.imagePlaceholderWidth);\r\n      imageEl.setAttribute(\"x\", this.imagePlaceholderX);\r\n      imageEl.setAttribute(\"y\", this.imagePlaceholderY);\r\n\r\n      // Image optimization\r\n      const reduced = this.reduceImageSize(\r\n        e.target.result,\r\n        this.imagePlaceholderWidth * this.reduceRate,\r\n        this.imagePlaceholderHeight * this.reduceRate\r\n      );\r\n\r\n      reduced.then(reducedImage => {\r\n        const resultImage = reducedImage ? reducedImage : e.target.result;\r\n        imageEl.setAttributeNS(\r\n          \"http://www.w3.org/1999/xlink\",\r\n          \"href\",\r\n          resultImage\r\n        );\r\n        imageGroup.innerHTML = \"\";\r\n        imageGroup.appendChild(imageEl);\r\n        this.loading('hide');\r\n        // Save image to IDB\r\n        this.saveToIDB(resultImage);\r\n      })\r\n    };\r\n    this.loading('show');\r\n    reader.readAsDataURL(imageFile);\r\n  }\r\n\r\n  // Reduce image file size & resolution\r\n  async reduceImageSize(base64Str, maxWidth, maxHeight) {\r\n    let resized_base64 = await new Promise((resolve) => {\r\n\r\n      let img = new Image()\r\n      img.src = base64Str\r\n      img.onload = () => {\r\n        let width = img.width\r\n        let height = img.height\r\n\r\n        if (width <= maxWidth || height <= maxHeight) {\r\n          // If resolution of image is less than actual placeholder size\r\n          resolve();\r\n        }\r\n\r\n        let canvas = document.createElement('canvas')\r\n        if (width > height) {\r\n          if (width > maxWidth) {\r\n            height *= maxWidth / width;\r\n            width = maxWidth;\r\n          }\r\n        } else {\r\n          if (height > maxHeight) {\r\n            width *= maxHeight / height;\r\n            height = maxHeight;\r\n          }\r\n        }\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.drawImage(img, 0, 0, width, height);\r\n        // Return reduced image\r\n        resolve(canvas.toDataURL(\"image/jpeg\"))\r\n      }\r\n    });\r\n    return resized_base64;\r\n  }\r\n\r\n  downloadCurrentJPG() {\r\n    const svg = this.getCurrentMockup('svg');\r\n    const svgData = new XMLSerializer().serializeToString(svg);\r\n\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = this.outputDimensions[this.currentSize].width;\r\n    canvas.height = this.outputDimensions[this.currentSize].height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    // SVG attributes fix for proper rasterization\r\n    let properAttributes;\r\n    if (this.type === 'multi-page') {\r\n      properAttributes =\r\n        svgData.replace(`viewBox=\"0 0 210 297\"`, `width=\"210\" height=\"297\" version=\"1.1\"`);\r\n    } else if (this.type === 'single-page') {\r\n      properAttributes =\r\n        svgData.replace(`viewBox=\"0 0 2100 2970\"`, `width=\"2100\" height=\"2970\" version=\"1.1\"`);\r\n    }\r\n\r\n    const img = new Image();\r\n    img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + btoa(properAttributes));\r\n\r\n    img.onload = () => {\r\n\r\n      // Draw svg-to-img on canvas\r\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n      const dataURL = canvas.toDataURL(\"image/jpeg\");\r\n      const fileName = this.getFileName();\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.download = fileName;\r\n      a.href = dataURL;\r\n      a.click();\r\n      a.remove();\r\n\r\n    };\r\n  }\r\n\r\n  downloadPDF(amount) {\r\n    this.loading('show');\r\n    let pagesArray = [];\r\n\r\n    const doc = new PDFDocument({ size: this.currentSize });\r\n    const stream = doc.pipe(blobStream());\r\n\r\n    if (amount === \"current\") {\r\n      pagesArray.push(this.getCurrentMockup('svg'));\r\n      doc.info[\"Title\"] = this.getFileName();\r\n    }\r\n\r\n    if (amount === \"all\") {\r\n      pagesArray = this.pagesArray;\r\n      doc.info[\"Title\"] = this.getFileName(true);\r\n    }\r\n\r\n    pagesArray.forEach((page, i) => {\r\n      SVGtoPDF(doc, page, 0, 0);\r\n\r\n      if (i !== pagesArray.length - 1) doc.addPage();\r\n    });\r\n\r\n    doc.end();\r\n\r\n    stream.on(\"finish\", () => {\r\n      this.loading('hide');\r\n      const url = stream.toBlobURL(\"application/pdf\");\r\n\r\n      const a = document.createElement(\"a\");\r\n      const my_evt = new MouseEvent(\"click\");\r\n      a.download = doc.info[\"Title\"];\r\n      a.href = url;\r\n      a.dispatchEvent(my_evt);\r\n\r\n    });\r\n  }\r\n\r\n  // Generate file name for file to save\r\n  getFileName(span) {\r\n    if (span || this.type === 'single-page') {\r\n      const firstMonth = this.firstMonth;\r\n      const firstMonthYear = this.startYear;\r\n\r\n      const date1 = new Date(+firstMonthYear, +firstMonth);\r\n      const firstMonthName = date1.toLocaleString(\"default\", { month: \"long\" });\r\n\r\n      const lastMonth = this.lastMonth;\r\n      const lastMonthYear = this.endYear;\r\n\r\n      const date2 = new Date(+lastMonthYear, +lastMonth);\r\n      const lastMonthName = date2.toLocaleString(\"default\", {\r\n        month: \"long\",\r\n      });\r\n\r\n      return `${firstMonthName}_${firstMonthYear}-${lastMonthName}_${lastMonthYear}`;\r\n    }\r\n\r\n    const currentMonthContainer = this.getCurrentMockup()\r\n\r\n    const year = currentMonthContainer.dataset.year;\r\n    const month = currentMonthContainer.dataset.month;\r\n\r\n    const date = new Date(+year, +month);\r\n    const monthName = date.toLocaleString(\"default\", { month: \"long\" });\r\n\r\n    return `${monthName}_${year}`;\r\n  }\r\n\r\n  // Crop functionality section\r\n  initCropper(currentImageElement) {\r\n    const imageFile = currentImageElement.getAttribute(\"href\");\r\n\r\n    fetch(imageFile)\r\n      .then((res) => res.blob())\r\n      .then((imageFile) => {\r\n        this.cropperOuter = document.createElement(\"div\");\r\n        this.cropperOuter.classList.add(\"cropper-outer-container\");\r\n\r\n        this.updateCropperPosition(currentImageElement);\r\n\r\n        const imageElement = document.createElement(\"img\");\r\n        imageElement.classList.add(\"image-element\");\r\n        imageElement.src = URL.createObjectURL(imageFile);\r\n\r\n        this.cropperOuter.appendChild(imageElement);\r\n\r\n        document.body.append(this.cropperOuter);\r\n        // currentImageElement.style.display = \"none\";\r\n\r\n        this.cropper = new Cropper(imageElement, {\r\n          viewMode: 0,\r\n          dragMode: \"none\",\r\n          modal: false,\r\n          background: false,\r\n          autoCropArea: 1,\r\n          ready: () => {\r\n            this.initCropperControls();\r\n\r\n            this.applyCropBtn.addEventListener(\"click\", () => {\r\n              this.applyCrop(currentImageElement);\r\n            });\r\n\r\n            this.cropper.initialZoomRatio = this.cropper.getCanvasData().width / this.cropper.getCanvasData().naturalWidth;\r\n\r\n            window.onresize = () => {\r\n              this.updateCropperPosition(currentImageElement);\r\n            }\r\n            this.loading('hide');\r\n          },\r\n\r\n          zoom: (e) => {\r\n            this.cropper.setAspectRatio(0);\r\n            this.cropper.crop()\r\n\r\n            // Reset cropbox if zoomed out\r\n            if (e.detail.ratio < e.detail.oldRatio) {\r\n              if (\r\n                this.cropper.canvasData.width - 10 <\r\n                this.cropper.initialCanvasData.width\r\n              ) {\r\n                this.cropper.reset();\r\n              }\r\n            }\r\n\r\n            this.cropper.zoomRatio = this.cropper.getCanvasData().width / this.cropper.getCanvasData().naturalWidth;\r\n\r\n            if ((this.cropper.zoomRatio.toFixed(5)) > (this.cropper.initialZoomRatio).toFixed(5)) {\r\n              this.cropper.setDragMode(\"move\");\r\n              this.cropper.options.viewMode = 3;\r\n            } else {\r\n              this.cropper.setDragMode(\"none\");\r\n              this.cropper.options.viewMode = 0;\r\n            }\r\n          },\r\n        });\r\n      });\r\n  }\r\n\r\n  updateCropperPosition(currentImageElement) {\r\n    if (this.cropperOuter) {\r\n      this.cropperOuter.style.position = \"absolute\";\r\n      this.cropperOuter.style.left = `${currentImageElement.getBoundingClientRect().left\r\n        }px`;\r\n      this.cropperOuter.style.top = `${currentImageElement.getBoundingClientRect().top\r\n        }px`;\r\n      this.cropperOuter.style.width = `${currentImageElement.getBoundingClientRect().width\r\n        }px`;\r\n      this.cropperOuter.style.height = `${currentImageElement.getBoundingClientRect().height\r\n        }px`;\r\n    }\r\n  }\r\n\r\n  applyCrop(currentImageElement) {\r\n    const canvas = this.cropper.getCroppedCanvas({\r\n      minWidth: 256,\r\n      minHeight: 256,\r\n      maxWidth: 4096,\r\n      maxHeight: 4096,\r\n      fillColor: 'white'\r\n    });\r\n\r\n    const ctx = canvas.getContext(\"2d\", {\r\n      willReadFrequently: true,\r\n    });\r\n    ctx.drawImage(canvas, 0, 0);\r\n\r\n    const resultURL = canvas.toDataURL(\"image/jpeg\");\r\n\r\n    currentImageElement.setAttributeNS(\r\n      \"http://www.w3.org/1999/xlink\",\r\n      \"href\",\r\n      resultURL\r\n    );\r\n    // Save cropped image to IDB\r\n    this.saveToIDB(resultURL);\r\n    // Get rit pf cropper\r\n    this.removeCropper();\r\n  }\r\n\r\n  removeCropper() {\r\n    const currentImageElement = this.getCurrentMockup('image');\r\n\r\n    currentImageElement.style.display = \"block\";\r\n    this.cropper.destroy();\r\n    this.cropper = undefined;\r\n    this.cropperOuter.remove();\r\n    this.cropperOuter = undefined;\r\n\r\n    this.cropControlsContainer.innerHTML = \"\";\r\n\r\n  }\r\n\r\n  // Init crop buttons\r\n  initCropperControls() {\r\n    this.cropControlsContainer.innerHTML = `\r\n      <button id=\"apply-crop\">\r\n        <img src='./assets/icons/done.svg'/>\r\n    </button>\r\n      <button id=\"cancel-crop\">\r\n        <img src='./assets/icons/cancel.svg'/>\r\n      </button>\r\n    `;\r\n\r\n    this.applyCropBtn = this.cropControlsContainer.querySelector(\"#apply-crop\");\r\n    this.cancelCropBtn =\r\n      this.cropControlsContainer.querySelector(\"#cancel-crop\");\r\n\r\n    this.cancelCropBtn.addEventListener(\"click\", () => {\r\n      this.removeCropper();\r\n    });\r\n  }\r\n\r\n  // Get mockup to manipulate\r\n  getCurrentMockup(element = '') {\r\n    if (this.type === 'multi-page') {\r\n      return this.calendarInner.querySelector(\r\n        `#month-${this.currentMonth}-container ${element}`\r\n      );\r\n    } else if (this.type === 'single-page') {\r\n      return this.calendarInner.querySelector(`#mockup-container ${element}`);\r\n    }\r\n  }\r\n\r\n  // Calendar grid generate section\r\n  createMonthGrid(monthGrid, startIndex, totalDays, prevMonthDaysNumber, initialX, initialY, glyphsSet, cellStyles) {\r\n    let x = initialX;\r\n    let y = initialY;\r\n\r\n    let currentDayIndex = startIndex;\r\n    let prevMonthDaysCount = prevMonthDaysNumber;\r\n\r\n    // Set empty grid\r\n    for (let i = 1; i < 43; i++) {\r\n      if (i % 7 !== 0) {\r\n        monthGrid.appendChild(this.createDayCell(x, y, i, cellStyles));\r\n        x += this.dayCellWidth;\r\n      } else {\r\n        monthGrid.appendChild(this.createDayCell(x, y, i, cellStyles));\r\n        x = initialX;\r\n        y += this.dayCellHeight;\r\n      }\r\n    }\r\n\r\n    // All text elements in generated cells\r\n    const cellsTextFields = monthGrid.querySelectorAll(\"g .cell-digit\");\r\n\r\n    // Set days digits in cells\r\n    for (let i = 1; i < totalDays + 1; i++) {\r\n      cellsTextFields[currentDayIndex].innerHTML = glyphsSet.digits[i - 1];\r\n      currentDayIndex++;\r\n    }\r\n\r\n    // Prepend previous month\r\n    if (startIndex !== 0) {\r\n      for (let i = startIndex - 1; i >= 0; i--) {\r\n        cellsTextFields[i].innerHTML =\r\n          glyphsSet.secondaryDigits[prevMonthDaysCount - 1];\r\n        prevMonthDaysCount--;\r\n      }\r\n    }\r\n\r\n    // Extend on next month\r\n    if (currentDayIndex <= 42) {\r\n      for (let i = 1; currentDayIndex < 42; currentDayIndex++) {\r\n        cellsTextFields[currentDayIndex].innerHTML =\r\n          glyphsSet.secondaryDigits[i - 1];\r\n        i++;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Create individual cell\r\n  createDayCell(x, y, cellNumber, cellStyles) {\r\n    let dayGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n\r\n    dayGroup.setAttribute(\"width\", this.dayCellWidth);\r\n    dayGroup.setAttribute(\"height\", this.dayCellHeight);\r\n    dayGroup.setAttribute(\"id\", `day-${cellNumber}-cell`);\r\n\r\n    dayGroup.innerHTML = `\r\n      <rect y=\"${y}\" x=\"${x}\" \r\n      width=\"${this.dayCellWidth}\" \r\n      height=\"${this.dayCellHeight}\"\r\n      style=\"${cellStyles}\"/></rect>\r\n              \r\n        <g class=\"cell-digit\"\r\n        transform=\"translate(${x} ${y})\">\r\n      </g>;\r\n    `;\r\n    return dayGroup;\r\n  }\r\n\r\n  // Date functions section\r\n  daysInMonth(month, year) {\r\n    return new Date(year, month, 0).getDate();\r\n  }\r\n\r\n  getFirstDay(month, year) {\r\n    let index = new Date(year, month, 1);\r\n    if (index.getDay() === 0) {\r\n      return 7;\r\n    }\r\n    return index.getDay();\r\n  }\r\n\r\n  // Loader section\r\n  createLoader() {\r\n    this.loadingScreen = document.createElement(\"div\");\r\n    this.loadingScreen.classList.add(\"loading-screen\");\r\n    this.loadingScreen.classList.add(\"hide\");\r\n\r\n    this.loadingScreen.innerHTML = `\r\n    <img src=\"./assets/loader.gif\"/>`\r\n\r\n    this.parentContainer.insertAdjacentElement(\"beforebegin\", this.loadingScreen);\r\n  }\r\n\r\n  loading(action) {\r\n    if (action === \"hide\") {\r\n      this.loadingScreen.classList.add(\"hide\");\r\n      this.controlsContainer.style.pointerEvents = \"auto\";\r\n    } else if (action === \"show\") {\r\n      this.loadingScreen.classList.remove(\"hide\");\r\n      this.controlsContainer.style.pointerEvents = \"none\";\r\n    }\r\n  }\r\n\r\n  // Save image to IDB\r\n  saveToIDB(imageFile, id = this.currentMonth) {\r\n    const indexedDB =\r\n      window.indexedDB ||\r\n      window.mozIndexedDB ||\r\n      window.webkitIndexedDB ||\r\n      window.msIndexedDB ||\r\n      window.shimIndexedDB;\r\n\r\n    const request = indexedDB.open(\"Photo Calendar Project\", 1);\r\n\r\n    request.onsuccess = () => {\r\n      const db = request.result;\r\n      const transaction = db.transaction(\"current_project_images\", \"readwrite\");\r\n      const store = transaction.objectStore(\"current_project_images\");\r\n\r\n      store.put({\r\n        id: id,\r\n        image: imageFile,\r\n      });\r\n\r\n      transaction.oncomplete = function () {\r\n        db.close();\r\n      };\r\n    };\r\n  }\r\n}","// MultiPage glyphs set\r\nimport monthsMP from \"./MP/months.js\";\r\nimport yearsMP from \"./MP/years.js\";\r\nimport digitsMP from \"./MP/digits.js\";\r\nimport secondaryDigitsMP from \"./MP/secondaryDigits.js\";\r\nimport weekDaysMP from \"./MP/weekDays.js\";\r\n\r\nimport monthsCyrMP from \"./MP/months_cyr.js\";\r\nimport weekDaysCyrMP from \"./MP/weekDays_cyr.js\";\r\n\r\n// SinglePage glyphs set\r\nimport digitsSP from \"./SP/digits.js\";\r\nimport secondaryDigitsSP from \"./SP/secondaryDigits.js\";\r\nimport monthsSP from \"./SP/months.js\";\r\nimport weekDaysSP from \"./SP/weekDays.js\";\r\nimport yearsSP from \"./SP/years.js\";\r\n\r\nimport weekDaysCyrSP from \"./SP/weekDays_cyr.js\";\r\nimport monhsCyrSP from \"./SP/months_cyr.js\";\r\n\r\nconst glyphsMP = {\r\n  monthsRu: monthsCyrMP,\r\n  monthsEn: monthsMP,\r\n  years: yearsMP,\r\n  digits: digitsMP,\r\n  secondaryDigits: secondaryDigitsMP,\r\n  weekDaysRu: weekDaysCyrMP,\r\n  weekDaysEn: weekDaysMP\r\n};\r\n\r\nconst glyphsSP = {\r\n  digits: digitsSP,\r\n  secondaryDigits: secondaryDigitsSP,\r\n  monthsEn: monthsSP,\r\n  monthsRu: monhsCyrSP,\r\n  weekDaysEn: weekDaysSP,\r\n  weekDaysRu: weekDaysCyrSP,\r\n  years: yearsSP,\r\n};\r\n\r\nexport { glyphsMP, glyphsSP };\r\n","const monthsCyrMP = [\r\n     ` <path d=\"M16.91,0V19.6H12.43V14.39H8.29L4.82,19.6H0l4.09-5.91a6.42,6.42,0,0,1-3.06-2.45A7,7,0,0,1,0,7.31,7.15,7.15,0,0,1,1,3.4,6.74,6.74,0,0,1,4,.88,10.53,10.53,0,0,1,8.46,0ZM5.61,4.59a3.36,3.36,0,0,0-1,2.66,3.44,3.44,0,0,0,1,2.63,4.07,4.07,0,0,0,2.89.93h4V3.7H8.57A4.35,4.35,0,0,0,5.61,4.59Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M21.13,4.54h4.34v5.88H32V4.54h4.37V19.6H32V14H25.47V19.6H21.13Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M54.58,15.32A3.7,3.7,0,0,1,53,18.48a7.77,7.77,0,0,1-4.59,1.12h-8V4.54h7.7a8.14,8.14,0,0,1,4.42,1,3.22,3.22,0,0,1,1.6,2.87,3.48,3.48,0,0,1-.57,2,3.83,3.83,0,0,1-1.64,1.33A3.51,3.51,0,0,1,54.58,15.32Zm-10.17-4.6h3.31c1.53,0,2.29-.54,2.29-1.62s-.76-1.6-2.29-1.6H44.41ZM50.49,15a1.47,1.47,0,0,0-.56-1.27,3,3,0,0,0-1.76-.41H44.41v3.33h3.67C49.69,16.63,50.49,16.08,50.49,15Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M69.22,6a6.36,6.36,0,0,1,1.88,5v8.6H67V17.72q-1.23,2.1-4.59,2.1a7.15,7.15,0,0,1-3-.58,4.58,4.58,0,0,1-1.95-1.63,4.28,4.28,0,0,1-.67-2.35A3.92,3.92,0,0,1,58.37,12a8,8,0,0,1,4.89-1.21h3.47a2.8,2.8,0,0,0-.87-2.2,3.81,3.81,0,0,0-2.6-.77,7.73,7.73,0,0,0-2.37.38,6.22,6.22,0,0,0-2,1l-1.57-3a9.49,9.49,0,0,1,3-1.34,13,13,0,0,1,3.54-.48A7.83,7.83,0,0,1,69.22,6ZM65.5,16.37a2.85,2.85,0,0,0,1.23-1.53V13.3h-3c-1.8,0-2.69.59-2.69,1.76a1.56,1.56,0,0,0,.66,1.33,2.92,2.92,0,0,0,1.8.49A3.85,3.85,0,0,0,65.5,16.37Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M87.59,5.28A7,7,0,0,1,90.3,8a8.27,8.27,0,0,1,1,4.08,8.23,8.23,0,0,1-1,4.07,7,7,0,0,1-2.71,2.72,7.69,7.69,0,0,1-3.82,1A5.78,5.78,0,0,1,79.24,18v7H74.87V4.54H79V6.27a5.78,5.78,0,0,1,4.73-2A7.59,7.59,0,0,1,87.59,5.28Zm-1.82,9.83a4.23,4.23,0,0,0,1.08-3,4.23,4.23,0,0,0-1.08-3,3.92,3.92,0,0,0-5.51,0,4.23,4.23,0,0,0-1.08,3,4.23,4.23,0,0,0,1.08,3,3.92,3.92,0,0,0,5.51,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M107,10.68a4.51,4.51,0,0,1,1.57,3.68,4.65,4.65,0,0,1-1.75,3.88,7.69,7.69,0,0,1-4.91,1.39l-7.56,0V4.54h4.34V9.35h3.81A7,7,0,0,1,107,10.68ZM103.43,16a2.06,2.06,0,0,0,.67-1.68,1.89,1.89,0,0,0-.66-1.6,3.32,3.32,0,0,0-1.94-.53l-2.83,0v4.37h2.83A2.85,2.85,0,0,0,103.43,16Z\" style=\"fill: #231f20\"/>`,\r\n     ` <path d=\"M22.05,16.7c-1.76,1.49-4.3,2.31-7.6,2.48v2.13H10.28V19.15C7,19,4.41,18.13,2.65,16.64A7.48,7.48,0,0,1,0,10.58,7.45,7.45,0,0,1,2.65,4.52C4.41,3.06,7,2.22,10.28,2V0h4.17V2c3.3.18,5.84,1,7.6,2.52a7.55,7.55,0,0,1,2.65,6.07A7.57,7.57,0,0,1,22.05,16.7ZM10.28,15.62v-10a8,8,0,0,0-4.44,1.5A4.34,4.34,0,0,0,4.4,10.58Q4.4,15,10.28,15.62Zm8.59-1.52a4.41,4.41,0,0,0,1.46-3.55q0-4.47-5.88-5v10A7.79,7.79,0,0,0,18.87,14.1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M42.43,14.14H31a3.56,3.56,0,0,0,1.46,2.21,4.82,4.82,0,0,0,2.85.81,5.65,5.65,0,0,0,2.09-.35,5.11,5.11,0,0,0,1.7-1.1l2.32,2.52a7.82,7.82,0,0,1-6.22,2.43,9.88,9.88,0,0,1-4.51-1,7.28,7.28,0,0,1-3-2.76,7.57,7.57,0,0,1-1.06-4,7.67,7.67,0,0,1,1.05-4,7.4,7.4,0,0,1,2.88-2.78,9,9,0,0,1,8.11,0,7,7,0,0,1,2.81,2.73,8.16,8.16,0,0,1,1,4.13C42.51,13,42.48,13.41,42.43,14.14ZM32.21,9.29A3.62,3.62,0,0,0,31,11.59H38.4a3.62,3.62,0,0,0-1.23-2.28,3.71,3.71,0,0,0-2.47-.85A3.8,3.8,0,0,0,32.21,9.29Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M59.8,16.16a3.67,3.67,0,0,1-1.54,3.16,7.75,7.75,0,0,1-4.59,1.12h-8V5.38h7.7a8.21,8.21,0,0,1,4.43,1,3.23,3.23,0,0,1,1.59,2.87,3.48,3.48,0,0,1-.57,2,3.77,3.77,0,0,1-1.64,1.33A3.5,3.5,0,0,1,59.8,16.16Zm-10.16-4.6h3.3c1.53,0,2.3-.54,2.3-1.62s-.77-1.6-2.3-1.6h-3.3Zm6.07,4.26a1.47,1.47,0,0,0-.56-1.28,3.11,3.11,0,0,0-1.76-.4H49.64v3.33h3.67Q55.71,17.47,55.71,15.82Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M75.76,6.12a6.9,6.9,0,0,1,2.7,2.71,8.27,8.27,0,0,1,1,4.08,8.23,8.23,0,0,1-1,4.07,6.92,6.92,0,0,1-2.7,2.72,7.71,7.71,0,0,1-3.82,1,5.79,5.79,0,0,1-4.54-1.82v7H63V5.38h4.18V7.11a5.78,5.78,0,0,1,4.73-2A7.62,7.62,0,0,1,75.76,6.12ZM73.94,16a4.23,4.23,0,0,0,1.08-3,4.23,4.23,0,0,0-1.08-3,3.94,3.94,0,0,0-5.52,0,4.23,4.23,0,0,0-1.08,3,4.23,4.23,0,0,0,1.08,3,3.94,3.94,0,0,0,5.52,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M93.76,6.82a6.36,6.36,0,0,1,1.87,5v8.6H91.54V18.56q-1.23,2.1-4.59,2.1a7.15,7.15,0,0,1-3-.58A4.49,4.49,0,0,1,82,18.45a4.19,4.19,0,0,1-.67-2.35,3.93,3.93,0,0,1,1.58-3.31,8.06,8.06,0,0,1,4.88-1.2h3.47a2.83,2.83,0,0,0-.86-2.2,3.86,3.86,0,0,0-2.61-.77A7.62,7.62,0,0,0,85.43,9a6.17,6.17,0,0,0-2,1L81.88,7a9.59,9.59,0,0,1,3-1.34,13.14,13.14,0,0,1,3.54-.48A7.86,7.86,0,0,1,93.76,6.82ZM90,17.21a2.85,2.85,0,0,0,1.23-1.53V14.14h-3c-1.79,0-2.69.59-2.69,1.76a1.56,1.56,0,0,0,.66,1.33,2.94,2.94,0,0,0,1.8.49A3.85,3.85,0,0,0,90,17.21Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M114,5.38V20.44h-4.37V9h-4.76l-.14,2.66a26.79,26.79,0,0,1-.56,4.93,6.76,6.76,0,0,1-1.46,3.08,3.55,3.55,0,0,1-2.79,1.12,9.54,9.54,0,0,1-2.27-.34l.22-3.58a5,5,0,0,0,.65.05,1.65,1.65,0,0,0,1.46-.71,4.27,4.27,0,0,0,.66-1.82,25.72,25.72,0,0,0,.25-2.93l.23-6Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M130.7,11.52a4.51,4.51,0,0,1,1.57,3.68,4.67,4.67,0,0,1-1.75,3.88,7.72,7.72,0,0,1-4.92,1.39l-7.56,0V5.38h4.34v4.81h3.81A7,7,0,0,1,130.7,11.52Zm-3.56,5.31a2.06,2.06,0,0,0,.68-1.68,1.89,1.89,0,0,0-.66-1.6,3.28,3.28,0,0,0-2-.53l-2.83,0v4.37h2.83A2.83,2.83,0,0,0,127.14,16.83Z\" style=\"fill: #231f20\"/>`,\r\n     `  <path d=\"M17.84,19.6l0-11.73L12,17.53H10L4.26,8.09V19.6H0V0H3.75l7.34,12.18L18.31,0h3.75l0,19.6Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M37.69,6a6.36,6.36,0,0,1,1.87,5v8.6H35.47V17.72q-1.23,2.1-4.59,2.1a7.15,7.15,0,0,1-3-.58,4.49,4.49,0,0,1-1.94-1.63,4.2,4.2,0,0,1-.68-2.35A4,4,0,0,1,26.83,12a8.11,8.11,0,0,1,4.89-1.2h3.47a2.83,2.83,0,0,0-.86-2.2,3.86,3.86,0,0,0-2.61-.77,7.62,7.62,0,0,0-2.36.38,6.17,6.17,0,0,0-2,1l-1.57-3a9.49,9.49,0,0,1,3-1.34,13.14,13.14,0,0,1,3.54-.48A7.88,7.88,0,0,1,37.69,6ZM34,16.36a2.79,2.79,0,0,0,1.23-1.52V13.3h-3c-1.79,0-2.69.59-2.69,1.76a1.56,1.56,0,0,0,.66,1.33,2.94,2.94,0,0,0,1.8.49A3.76,3.76,0,0,0,34,16.36Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M56.06,5.28A7,7,0,0,1,58.76,8a8.27,8.27,0,0,1,1,4.08,8.23,8.23,0,0,1-1,4.07,7.06,7.06,0,0,1-2.7,2.72,7.75,7.75,0,0,1-3.83,1A5.78,5.78,0,0,1,47.7,18v7H43.33V4.54H47.5V6.27a5.78,5.78,0,0,1,4.73-2A7.65,7.65,0,0,1,56.06,5.28ZM54.24,15.1a4.23,4.23,0,0,0,1.07-3,4.27,4.27,0,0,0-1.07-3,3.94,3.94,0,0,0-5.52,0,4.23,4.23,0,0,0-1.08,3,4.19,4.19,0,0,0,1.08,3,3.91,3.91,0,0,0,5.52,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M75.54,8.12H70.45V19.6H66.11V8.12H61V4.54H75.54Z\" style=\"fill: #231f20\"/>`,\r\n     ` <path d=\"M15.48,15.4H6.38L4.65,19.6H0L8.74,0h4.48L22,19.6H17.22ZM14.06,12,11,4.45,7.84,12Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M39.17,4.54V19.6H34.8V8.12H28.53V19.6H24.19V4.54Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M55.91,5.28A7,7,0,0,1,58.62,8a8.27,8.27,0,0,1,1,4.08,8.23,8.23,0,0,1-1,4.07,7,7,0,0,1-2.71,2.72,7.69,7.69,0,0,1-3.82,1A5.78,5.78,0,0,1,47.56,18v7H43.19V4.54h4.17V6.27a5.78,5.78,0,0,1,4.73-2A7.59,7.59,0,0,1,55.91,5.28Zm-1.82,9.83a4.23,4.23,0,0,0,1.08-3,4.23,4.23,0,0,0-1.08-3,3.92,3.92,0,0,0-5.51,0,4.23,4.23,0,0,0-1.08,3,4.23,4.23,0,0,0,1.08,3,3.92,3.92,0,0,0,5.51,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M77.36,13.3H66a3.52,3.52,0,0,0,1.46,2.21,4.8,4.8,0,0,0,2.85.81A5.65,5.65,0,0,0,72.36,16a5.07,5.07,0,0,0,1.69-1.1l2.33,2.52a7.84,7.84,0,0,1-6.22,2.43,9.88,9.88,0,0,1-4.51-1,7.22,7.22,0,0,1-3-2.76,7.58,7.58,0,0,1-1.07-4,7.67,7.67,0,0,1,1-4A7.36,7.36,0,0,1,65.5,5.3a8.94,8.94,0,0,1,8.1,0A7,7,0,0,1,76.42,8a8.16,8.16,0,0,1,1,4.13C77.44,12.18,77.41,12.57,77.36,13.3ZM67.14,8.46a3.54,3.54,0,0,0-1.24,2.29h7.42a3.62,3.62,0,0,0-1.23-2.28,3.66,3.66,0,0,0-2.46-.85A3.75,3.75,0,0,0,67.14,8.46Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M95,4.54V19.6H90.63V8.12H85.88l-.14,2.66a27.58,27.58,0,0,1-.57,4.93,6.76,6.76,0,0,1-1.45,3.08,3.57,3.57,0,0,1-2.8,1.12,9.61,9.61,0,0,1-2.27-.34L78.88,16a4.84,4.84,0,0,0,.64,0A1.68,1.68,0,0,0,81,15.33a4.27,4.27,0,0,0,.66-1.82c.11-.74.19-1.71.25-2.93l.22-6Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M111.69,10.68a4.51,4.51,0,0,1,1.57,3.68,4.65,4.65,0,0,1-1.75,3.88,7.69,7.69,0,0,1-4.91,1.39L99,19.6V4.54h4.34V9.35h3.81A7,7,0,0,1,111.69,10.68ZM108.14,16a2.09,2.09,0,0,0,.67-1.68,1.89,1.89,0,0,0-.66-1.6,3.32,3.32,0,0,0-1.94-.53l-2.83,0v4.37h2.83A2.85,2.85,0,0,0,108.14,16Z\" style=\"fill: #231f20\"/>`,\r\n     `   <path d=\"M17.84,21l0-11.74L12,19H10L4.26,9.52V21H0V1.43H3.75l7.34,12.18L18.31,1.43h3.75l0,19.6Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M37.69,7.41a6.36,6.36,0,0,1,1.87,5V21H35.47V19.15q-1.23,2.1-4.59,2.1a7.15,7.15,0,0,1-3-.59A4.41,4.41,0,0,1,25.93,19a4.23,4.23,0,0,1-.68-2.35,4,4,0,0,1,1.58-3.31,8.11,8.11,0,0,1,4.89-1.2h3.47a2.81,2.81,0,0,0-.86-2.2,3.86,3.86,0,0,0-2.61-.77,7.62,7.62,0,0,0-2.36.38,6.17,6.17,0,0,0-2,1l-1.57-3a9.5,9.5,0,0,1,3-1.35,13.55,13.55,0,0,1,3.54-.47A7.83,7.83,0,0,1,37.69,7.41ZM34,17.79a2.79,2.79,0,0,0,1.23-1.52V14.73h-3c-1.79,0-2.69.58-2.69,1.76a1.57,1.57,0,0,0,.66,1.33,2.94,2.94,0,0,0,1.8.49A3.76,3.76,0,0,0,34,17.79Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M43.34,6h4.34v9L55,6h4V21H54.68v-9l-7.3,9h-4ZM46,0H48.8a2.24,2.24,0,0,0,.55,1.53,2,2,0,0,0,1.53.54,2.1,2.1,0,0,0,1.55-.54A2.11,2.11,0,0,0,53,0h2.91q0,4.34-5,4.34T46,0Z\" style=\"fill: #231f20\"/>`,\r\n     ` <path d=\"M0,0H4.51V12.77L13.86,0h4.26V19.6H13.64V6.86L4.28,19.6H0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M40.69,5.3a7.41,7.41,0,0,1,2.85,2.76,7.78,7.78,0,0,1,1,4,7.74,7.74,0,0,1-1,4,7.27,7.27,0,0,1-2.85,2.76,8.51,8.51,0,0,1-4.12,1,8.71,8.71,0,0,1-3.64-.74A7.22,7.22,0,0,1,30.19,17a7.14,7.14,0,0,1-1.46-3.12H26.66V19.6H22.32V4.54h4.34v5.54h2.1a7.24,7.24,0,0,1,2.74-4.2,8.21,8.21,0,0,1,5.07-1.57A8.51,8.51,0,0,1,40.69,5.3Zm-1.47,9.81a4.31,4.31,0,0,0,1.05-3A4.26,4.26,0,0,0,39.22,9,3.72,3.72,0,0,0,33.9,9a4.26,4.26,0,0,0-1,3.05,4.31,4.31,0,0,0,1,3,3.7,3.7,0,0,0,5.32,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M47.59,4.54h4.34v5.88h6.55V4.54h4.37V19.6H58.48V14H51.93V19.6H47.59Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M79.52,10.68a4.51,4.51,0,0,1,1.57,3.68,4.65,4.65,0,0,1-1.75,3.88,7.69,7.69,0,0,1-4.91,1.39l-7.56,0V4.54h4.34V9.35H75A7,7,0,0,1,79.52,10.68ZM76,16a2.06,2.06,0,0,0,.67-1.68,1.89,1.89,0,0,0-.66-1.6,3.36,3.36,0,0,0-2-.53l-2.82,0v4.37H74A2.86,2.86,0,0,0,76,16Z\" style=\"fill: #231f20\"/>`,\r\n     `  <path d=\"M0,0H4.51V12.77L13.86,0h4.26V19.6H13.64V6.86L4.28,19.6H0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M40.69,5.3a7.41,7.41,0,0,1,2.85,2.76,7.78,7.78,0,0,1,1,4,7.74,7.74,0,0,1-1,4,7.27,7.27,0,0,1-2.85,2.76,8.51,8.51,0,0,1-4.12,1,8.71,8.71,0,0,1-3.64-.74A7.22,7.22,0,0,1,30.19,17a7.14,7.14,0,0,1-1.46-3.12H26.66V19.6H22.32V4.54h4.34v5.54h2.1a7.24,7.24,0,0,1,2.74-4.2,8.21,8.21,0,0,1,5.07-1.57A8.51,8.51,0,0,1,40.69,5.3Zm-1.47,9.81a4.31,4.31,0,0,0,1.05-3A4.26,4.26,0,0,0,39.22,9,3.72,3.72,0,0,0,33.9,9a4.26,4.26,0,0,0-1,3.05,4.31,4.31,0,0,0,1,3,3.7,3.7,0,0,0,5.32,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M62.05,4.54V19.6H57.68V8.12H52.92l-.14,2.66a26.79,26.79,0,0,1-.56,4.93,6.86,6.86,0,0,1-1.45,3.08A3.58,3.58,0,0,1,48,19.91a9.61,9.61,0,0,1-2.27-.34L45.92,16a5.07,5.07,0,0,0,.65,0A1.68,1.68,0,0,0,48,15.33a4.55,4.55,0,0,0,.66-1.82c.11-.74.19-1.71.25-2.93l.22-6Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M78.74,10.68a4.51,4.51,0,0,1,1.57,3.68,4.65,4.65,0,0,1-1.75,3.88,7.71,7.71,0,0,1-4.91,1.39l-7.57,0V4.54h4.35V9.35h3.8A7,7,0,0,1,78.74,10.68ZM75.19,16a2.09,2.09,0,0,0,.67-1.68,1.89,1.89,0,0,0-.66-1.6,3.36,3.36,0,0,0-2-.53l-2.82,0v4.37h2.82A2.88,2.88,0,0,0,75.19,16Z\" style=\"fill: #231f20\"/>`,\r\n     ` <path d=\"M15.48,15.4H6.38L4.65,19.6H0L8.74,0h4.48L22,19.6H17.22ZM14.06,12,11,4.45,7.84,12Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M38.35,15.32a3.67,3.67,0,0,1-1.54,3.16,7.73,7.73,0,0,1-4.59,1.12h-8V4.54h7.7a8.17,8.17,0,0,1,4.42,1,3.22,3.22,0,0,1,1.6,2.87,3.48,3.48,0,0,1-.58,2,3.8,3.8,0,0,1-1.63,1.33A3.51,3.51,0,0,1,38.35,15.32Zm-10.16-4.6H31.5c1.53,0,2.29-.54,2.29-1.62S33,7.5,31.5,7.5H28.19ZM34.27,15a1.47,1.47,0,0,0-.56-1.27,3.06,3.06,0,0,0-1.77-.41H28.19v3.33h3.67C33.46,16.63,34.27,16.08,34.27,15Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M53.67,8.12H45.94V19.6H41.6V4.54H53.67Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M72.05,4.54l-6.8,16a7.91,7.91,0,0,1-2.57,3.67A6.25,6.25,0,0,1,59,25.26a7.71,7.71,0,0,1-2.32-.37,5.1,5.1,0,0,1-1.88-1l1.6-3.1a3.86,3.86,0,0,0,1.16.7,3.79,3.79,0,0,0,1.3.25,2.33,2.33,0,0,0,1.46-.44,3.75,3.75,0,0,0,1-1.44l.05-.14L54.86,4.54h4.51l4.22,10.22L67.85,4.54Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M76.51,18.83a7.36,7.36,0,0,1-4.07-6.76A7.36,7.36,0,0,1,76.51,5.3a9.29,9.29,0,0,1,4.32-1A8.39,8.39,0,0,1,85,5.3a5.92,5.92,0,0,1,2.59,2.85L84.2,10A3.72,3.72,0,0,0,80.81,7.9,3.83,3.83,0,0,0,78,9a4.09,4.09,0,0,0-1.12,3.05,4.11,4.11,0,0,0,1.12,3,3.83,3.83,0,0,0,2.83,1.12,3.68,3.68,0,0,0,3.39-2.07L87.58,16A6,6,0,0,1,85,18.82a8.29,8.29,0,0,1-4.16,1A9.29,9.29,0,0,1,76.51,18.83Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M103.57,8.12h-5.1V19.6H94.13V8.12H89V4.54h14.53Z\" style=\"fill: #231f20\"/>`,\r\n     `      <path d=\"M5.19,20.87a9.64,9.64,0,0,1-3.8-3.61A9.9,9.9,0,0,1,0,12,9.9,9.9,0,0,1,1.39,6.82a9.64,9.64,0,0,1,3.8-3.61A11.32,11.32,0,0,1,10.64,1.9a11.42,11.42,0,0,1,4.61.9A9.23,9.23,0,0,1,18.7,5.38L15.79,8.06a6.25,6.25,0,0,0-4.93-2.29,6.43,6.43,0,0,0-3.24.8A5.6,5.6,0,0,0,5.39,8.79,6.58,6.58,0,0,0,4.59,12a6.58,6.58,0,0,0,.8,3.25,5.6,5.6,0,0,0,2.23,2.22,6.54,6.54,0,0,0,3.24.8A6.22,6.22,0,0,0,15.79,16l2.91,2.69a9.16,9.16,0,0,1-3.47,2.6,11.47,11.47,0,0,1-4.62.9A11.26,11.26,0,0,1,5.19,20.87Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M35.76,15.54H24.37a3.54,3.54,0,0,0,1.45,2.21,4.85,4.85,0,0,0,2.86.81,5.69,5.69,0,0,0,2.09-.35,5.07,5.07,0,0,0,1.69-1.1l2.32,2.52a7.8,7.8,0,0,1-6.21,2.43,9.88,9.88,0,0,1-4.51-1,7.22,7.22,0,0,1-3-2.76,7.58,7.58,0,0,1-1.07-4,7.67,7.67,0,0,1,1.05-4,7.36,7.36,0,0,1,2.89-2.78,8.94,8.94,0,0,1,8.1,0,7.05,7.05,0,0,1,2.82,2.73,8.16,8.16,0,0,1,1,4.13C35.85,14.42,35.82,14.81,35.76,15.54ZM25.54,10.7A3.57,3.57,0,0,0,24.31,13h7.42a3.62,3.62,0,0,0-1.23-2.28A3.66,3.66,0,0,0,28,9.86,3.8,3.8,0,0,0,25.54,10.7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M39,6.78h4.34v5.88h6.55V6.78h4.37V21.84H49.86V16.21H43.31v5.63H39Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M71,10.36h-5.1V21.84H61.53V10.36H56.44V6.78H71Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M87,6.78V21.84H83.08V17.53H79.86L77,21.84H72.35l3.44-4.93a5.12,5.12,0,0,1-2.39-1.78,4.71,4.71,0,0,1-.82-2.81,4.82,4.82,0,0,1,1.91-4.1,8.62,8.62,0,0,1,5.28-1.44Zm-9.23,4.06A1.84,1.84,0,0,0,77,12.46a1.94,1.94,0,0,0,.68,1.64,3.51,3.51,0,0,0,2.09.52h3.28V10.33H79.86A3.64,3.64,0,0,0,77.74,10.84Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M103.67,8.69a6.18,6.18,0,0,1,2.51,2.48,7.53,7.53,0,0,1,.88,3.7,6.88,6.88,0,0,1-4,6.4,9.73,9.73,0,0,1-4.26.91,7.87,7.87,0,0,1-6.2-2.54q-2.25-2.54-2.25-7.43a12,12,0,0,1,2-7.24,9.54,9.54,0,0,1,6.06-3.54L105.58,0l.59,3.75L99.84,5A7.67,7.67,0,0,0,96,6.69,5.16,5.16,0,0,0,94.55,10,6.49,6.49,0,0,1,96.9,8.39a7.54,7.54,0,0,1,3-.58A7.86,7.86,0,0,1,103.67,8.69Zm-2.11,9a3.92,3.92,0,0,0,1-2.78,3.64,3.64,0,0,0-1-2.71,3.68,3.68,0,0,0-2.7-1,3.76,3.76,0,0,0-2.74,1,3.58,3.58,0,0,0-1,2.71,3.8,3.8,0,0,0,1.06,2.79,3.66,3.66,0,0,0,2.72,1.08A3.55,3.55,0,0,0,101.56,17.7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M122.69,7.52a7,7,0,0,1,2.7,2.71,8.27,8.27,0,0,1,1,4.08,8.23,8.23,0,0,1-1,4.07,7.06,7.06,0,0,1-2.7,2.72,7.71,7.71,0,0,1-3.82,1,5.79,5.79,0,0,1-4.54-1.82v7H110V6.78h4.17V8.51a5.82,5.82,0,0,1,4.74-2A7.62,7.62,0,0,1,122.69,7.52Zm-1.82,9.83a4.23,4.23,0,0,0,1.08-3,4.23,4.23,0,0,0-1.08-3,3.94,3.94,0,0,0-5.52,0,4.23,4.23,0,0,0-1.08,3,4.23,4.23,0,0,0,1.08,3,3.94,3.94,0,0,0,5.52,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M142.08,12.92a4.54,4.54,0,0,1,1.56,3.68,4.65,4.65,0,0,1-1.75,3.88A7.67,7.67,0,0,1,137,21.87l-7.56,0V6.78h4.34v4.81h3.81A7,7,0,0,1,142.08,12.92Zm-3.56,5.31a2.06,2.06,0,0,0,.67-1.68,1.91,1.91,0,0,0-.65-1.6,3.36,3.36,0,0,0-1.95-.53l-2.83,0v4.37h2.83A2.85,2.85,0,0,0,138.52,18.23Z\" style=\"fill: #231f20\"/>`,\r\n     `  <path d=\"M5.22,20.86A9.8,9.8,0,0,1,0,12,9.8,9.8,0,0,1,5.22,3.22a11.41,11.41,0,0,1,5.5-1.32,11.31,11.31,0,0,1,5.49,1.32A9.81,9.81,0,0,1,21.45,12a9.81,9.81,0,0,1-5.24,8.82,11.31,11.31,0,0,1-5.49,1.32A11.41,11.41,0,0,1,5.22,20.86Zm8.64-3.35a5.72,5.72,0,0,0,2.2-2.22,6.58,6.58,0,0,0,.8-3.25,6.58,6.58,0,0,0-.8-3.25,5.72,5.72,0,0,0-2.2-2.22,6.14,6.14,0,0,0-3.14-.8,6.13,6.13,0,0,0-3.13.8,5.66,5.66,0,0,0-2.2,2.22A6.58,6.58,0,0,0,4.59,12a6.58,6.58,0,0,0,.8,3.25,5.66,5.66,0,0,0,2.2,2.22,6.23,6.23,0,0,0,3.13.8A6.24,6.24,0,0,0,13.86,17.51Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M31.2,16.13H28.93v5.71H24.56V6.78h4.37v5.85h2.35l4.09-5.85H40L34.75,14l5.63,7.84H35.23Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M56,10.36h-5.1V21.84H46.51V10.36h-5.1V6.78H56Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M72,6.78V21.84h-3.9V17.53H64.83L62,21.84H57.33l3.44-4.93a5.12,5.12,0,0,1-2.39-1.78,4.72,4.72,0,0,1-.83-2.81,4.82,4.82,0,0,1,1.92-4.1,8.62,8.62,0,0,1,5.28-1.44Zm-9.23,4.06A1.82,1.82,0,0,0,62,12.46a1.92,1.92,0,0,0,.69,1.64,3.49,3.49,0,0,0,2.09.52h3.27V10.33H64.83A3.63,3.63,0,0,0,62.72,10.84Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M88.65,8.69a6.24,6.24,0,0,1,2.51,2.48,7.53,7.53,0,0,1,.88,3.7,6.87,6.87,0,0,1-4,6.4,9.71,9.71,0,0,1-4.25.91,7.87,7.87,0,0,1-6.2-2.54q-2.27-2.54-2.26-7.43a12,12,0,0,1,2-7.24,9.49,9.49,0,0,1,6.06-3.54L90.56,0l.58,3.75L84.82,5A7.76,7.76,0,0,0,81,6.69,5.16,5.16,0,0,0,79.52,10a6.62,6.62,0,0,1,2.36-1.63,7.52,7.52,0,0,1,3-.58A7.87,7.87,0,0,1,88.65,8.69Zm-2.11,9a3.92,3.92,0,0,0,1-2.78,3.64,3.64,0,0,0-1-2.71,3.68,3.68,0,0,0-2.7-1,3.79,3.79,0,0,0-2.75,1,3.61,3.61,0,0,0-1,2.71,3.8,3.8,0,0,0,1.06,2.79,3.65,3.65,0,0,0,2.72,1.08A3.55,3.55,0,0,0,86.54,17.7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M107.67,7.52a7,7,0,0,1,2.7,2.71,8.27,8.27,0,0,1,1,4.08,8.23,8.23,0,0,1-1,4.07,7.06,7.06,0,0,1-2.7,2.72,7.75,7.75,0,0,1-3.83,1,5.78,5.78,0,0,1-4.53-1.82v7H94.94V6.78h4.17V8.51a5.81,5.81,0,0,1,4.73-2A7.65,7.65,0,0,1,107.67,7.52Zm-1.82,9.83a4.27,4.27,0,0,0,1.07-3,4.27,4.27,0,0,0-1.07-3,3.94,3.94,0,0,0-5.52,0,4.23,4.23,0,0,0-1.08,3,4.23,4.23,0,0,0,1.08,3,3.94,3.94,0,0,0,5.52,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M127.05,12.92a4.51,4.51,0,0,1,1.57,3.68,4.65,4.65,0,0,1-1.75,3.88A7.69,7.69,0,0,1,122,21.87l-7.56,0V6.78h4.34v4.81h3.8A7,7,0,0,1,127.05,12.92Zm-3.55,5.31a2.06,2.06,0,0,0,.67-1.68,1.89,1.89,0,0,0-.66-1.6,3.36,3.36,0,0,0-2-.53l-2.82,0v4.37h2.82A2.88,2.88,0,0,0,123.5,18.23Z\" style=\"fill: #231f20\"/>`,\r\n     `<path d=\"M18,2.24v19.6H13.44v-8H4.54v8H0V2.24H4.54V10h8.9V2.24Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M25.16,21.07a7.37,7.37,0,0,1-3-2.76,7.57,7.57,0,0,1-1.06-4,7.61,7.61,0,0,1,1.06-4,7.51,7.51,0,0,1,3-2.76,9.05,9.05,0,0,1,4.27-1,9,9,0,0,1,4.25,1,7.52,7.52,0,0,1,2.94,2.76,7.61,7.61,0,0,1,1.07,4,7.58,7.58,0,0,1-1.07,4,7.38,7.38,0,0,1-2.94,2.76,9,9,0,0,1-4.25,1A9.05,9.05,0,0,1,25.16,21.07Zm7-3.72a4.23,4.23,0,0,0,1.08-3,4.23,4.23,0,0,0-1.08-3,3.61,3.61,0,0,0-2.75-1.13,3.69,3.69,0,0,0-2.78,1.13,4.24,4.24,0,0,0-1.09,3,4.24,4.24,0,0,0,1.09,3,3.72,3.72,0,0,0,2.78,1.13A3.64,3.64,0,0,0,32.18,17.35Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M54.12,6.78V21.84h-3.9V17.53H47l-2.85,4.31H39.5l3.44-4.93a5.12,5.12,0,0,1-2.39-1.78,4.72,4.72,0,0,1-.83-2.81,4.82,4.82,0,0,1,1.92-4.1,8.62,8.62,0,0,1,5.28-1.44Zm-9.23,4.06a1.82,1.82,0,0,0-.71,1.62,1.92,1.92,0,0,0,.68,1.64,3.49,3.49,0,0,0,2.09.52h3.27V10.33H47A3.63,3.63,0,0,0,44.89,10.84Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M70.82,8.69a6.24,6.24,0,0,1,2.51,2.48,7.53,7.53,0,0,1,.88,3.7,6.87,6.87,0,0,1-4,6.4,9.71,9.71,0,0,1-4.25.91,7.87,7.87,0,0,1-6.2-2.54q-2.27-2.54-2.26-7.43A12,12,0,0,1,59.5,5a9.49,9.49,0,0,1,6.06-3.54L72.73,0l.58,3.75L67,5a7.76,7.76,0,0,0-3.83,1.68A5.16,5.16,0,0,0,61.69,10a6.62,6.62,0,0,1,2.36-1.63,7.52,7.52,0,0,1,3-.58A7.87,7.87,0,0,1,70.82,8.69Zm-2.11,9a3.92,3.92,0,0,0,1-2.78,3.64,3.64,0,0,0-1-2.71,3.68,3.68,0,0,0-2.7-1,3.79,3.79,0,0,0-2.75,1,3.61,3.61,0,0,0-1,2.71,3.8,3.8,0,0,0,1.06,2.79A3.65,3.65,0,0,0,66,18.79,3.55,3.55,0,0,0,68.71,17.7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M89.83,7.52a7,7,0,0,1,2.71,2.71,8.27,8.27,0,0,1,1,4.08,8.23,8.23,0,0,1-1,4.07,7,7,0,0,1-2.71,2.72,7.69,7.69,0,0,1-3.82,1,5.78,5.78,0,0,1-4.53-1.82v7H77.11V6.78h4.17V8.51a5.81,5.81,0,0,1,4.73-2A7.59,7.59,0,0,1,89.83,7.52ZM88,17.35a4.23,4.23,0,0,0,1.08-3,4.23,4.23,0,0,0-1.08-3,3.92,3.92,0,0,0-5.51,0,4.23,4.23,0,0,0-1.08,3,4.23,4.23,0,0,0,1.08,3,3.92,3.92,0,0,0,5.51,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M109.22,12.92a4.51,4.51,0,0,1,1.57,3.68A4.65,4.65,0,0,1,109,20.48a7.69,7.69,0,0,1-4.91,1.39l-7.56,0V6.78h4.34v4.81h3.81A7,7,0,0,1,109.22,12.92Zm-3.55,5.31a2.06,2.06,0,0,0,.67-1.68,1.89,1.89,0,0,0-.66-1.6,3.32,3.32,0,0,0-1.94-.53l-2.83,0v4.37h2.83A2.85,2.85,0,0,0,105.67,18.23Z\" style=\"fill: #231f20\"/>`,\r\n     `<path d=\"M22.23,18.14V25.9H18V21.84H4.2V25.9H0l0-7.76H.81c1.18,0,2-.89,2.49-2.57a31,31,0,0,0,.9-7.2l.22-6.13H19.49v15.9ZM7.62,14.66a7.68,7.68,0,0,1-1.38,3.48H15V5.94H8.29L8.2,8.79A42,42,0,0,1,7.62,14.66Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M39.48,15.54H28.08a3.56,3.56,0,0,0,1.46,2.21,4.8,4.8,0,0,0,2.85.81,5.65,5.65,0,0,0,2.09-.35,5,5,0,0,0,1.69-1.1l2.33,2.52a7.82,7.82,0,0,1-6.22,2.43,9.88,9.88,0,0,1-4.51-1,7.28,7.28,0,0,1-3-2.76,7.57,7.57,0,0,1-1.06-4,7.67,7.67,0,0,1,1-4,7.4,7.4,0,0,1,2.88-2.78,9,9,0,0,1,8.11,0,7,7,0,0,1,2.81,2.73,8.16,8.16,0,0,1,1,4.13C39.56,14.42,39.53,14.81,39.48,15.54ZM29.26,10.7A3.49,3.49,0,0,0,28,13h7.42a3.59,3.59,0,0,0-1.24-2.28,3.66,3.66,0,0,0-2.46-.85A3.75,3.75,0,0,0,29.26,10.7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M49.32,16.13H47.05v5.71H42.68V6.78h4.37v5.85H49.4l4.09-5.85h4.65L52.88,14l5.62,7.84H53.35Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M71.65,8.22a6.36,6.36,0,0,1,1.87,5v8.6H69.44V20q-1.25,2.1-4.6,2.1a7.19,7.19,0,0,1-3-.58,4.55,4.55,0,0,1-1.94-1.63,4.19,4.19,0,0,1-.67-2.35,3.9,3.9,0,0,1,1.58-3.3A8,8,0,0,1,65.68,13h3.48a2.8,2.8,0,0,0-.87-2.2A3.86,3.86,0,0,0,65.68,10a7.62,7.62,0,0,0-2.36.38,6.27,6.27,0,0,0-2,1L59.78,8.37A9.43,9.43,0,0,1,62.73,7a13.14,13.14,0,0,1,3.54-.48A7.84,7.84,0,0,1,71.65,8.22ZM67.92,18.61a2.91,2.91,0,0,0,1.24-1.53V15.54h-3c-1.79,0-2.69.59-2.69,1.76a1.56,1.56,0,0,0,.66,1.33,3,3,0,0,0,1.81.49A3.82,3.82,0,0,0,67.92,18.61Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M89.76,8.69a6.18,6.18,0,0,1,2.51,2.48,7.53,7.53,0,0,1,.88,3.7,6.88,6.88,0,0,1-4,6.4,9.73,9.73,0,0,1-4.26.91,7.87,7.87,0,0,1-6.2-2.54c-1.5-1.69-2.26-4.17-2.26-7.43a12,12,0,0,1,2-7.24A9.51,9.51,0,0,1,84.5,1.43L91.67,0l.59,3.75L85.93,5a7.67,7.67,0,0,0-3.82,1.68A5.16,5.16,0,0,0,80.64,10,6.49,6.49,0,0,1,83,8.39a7.52,7.52,0,0,1,3-.58A7.87,7.87,0,0,1,89.76,8.69Zm-2.11,9a3.92,3.92,0,0,0,1-2.78,3.64,3.64,0,0,0-1-2.71,3.68,3.68,0,0,0-2.7-1,3.76,3.76,0,0,0-2.74,1,3.58,3.58,0,0,0-1,2.71,3.8,3.8,0,0,0,1.06,2.79A3.66,3.66,0,0,0,85,18.79,3.55,3.55,0,0,0,87.65,17.7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M108.78,7.52a7,7,0,0,1,2.7,2.71,8.27,8.27,0,0,1,1,4.08,8.23,8.23,0,0,1-1,4.07,7.06,7.06,0,0,1-2.7,2.72,7.71,7.71,0,0,1-3.82,1,5.79,5.79,0,0,1-4.54-1.82v7H96.05V6.78h4.17V8.51a5.82,5.82,0,0,1,4.74-2A7.62,7.62,0,0,1,108.78,7.52ZM107,17.35a4.23,4.23,0,0,0,1.08-3,4.23,4.23,0,0,0-1.08-3,3.94,3.94,0,0,0-5.52,0,4.23,4.23,0,0,0-1.08,3,4.23,4.23,0,0,0,1.08,3,3.94,3.94,0,0,0,5.52,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M128.17,12.92a4.54,4.54,0,0,1,1.56,3.68A4.65,4.65,0,0,1,128,20.48a7.67,7.67,0,0,1-4.91,1.39l-7.56,0V6.78h4.34v4.81h3.81A7,7,0,0,1,128.17,12.92Zm-3.56,5.31a2.06,2.06,0,0,0,.67-1.68,1.91,1.91,0,0,0-.65-1.6,3.36,3.36,0,0,0-1.95-.53l-2.83,0v4.37h2.83A2.85,2.85,0,0,0,124.61,18.23Z\" style=\"fill: #231f20\"/>`\r\n]\r\n\r\nexport default monthsCyrMP;\r\n","\r\nconst monthsMP = [\r\n  `<path d=\"M2.73,19.19A6.89,6.89,0,0,1,0,17.08l2.52-3a4.54,4.54,0,0,0,3.64,2.15q2.77,0,2.77-3.25V3.64H2V0h11.4V12.71a7.41,7.41,0,0,1-1.79,5.42,7.13,7.13,0,0,1-5.27,1.81A8.8,8.8,0,0,1,2.73,19.19Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M28.74,6a6.36,6.36,0,0,1,1.88,5v8.6H26.53V17.72c-.82,1.4-2.36,2.1-4.59,2.1a7.2,7.2,0,0,1-3-.58A4.61,4.61,0,0,1,17,17.61a4.19,4.19,0,0,1-.67-2.35A3.9,3.9,0,0,1,17.89,12a8,8,0,0,1,4.88-1.21h3.48a2.8,2.8,0,0,0-.87-2.2,3.86,3.86,0,0,0-2.61-.77,7.62,7.62,0,0,0-2.36.38,6.11,6.11,0,0,0-2,1l-1.57-3a9.43,9.43,0,0,1,2.95-1.34,13.14,13.14,0,0,1,3.54-.48A7.84,7.84,0,0,1,28.74,6ZM25,16.37a2.94,2.94,0,0,0,1.23-1.53V13.3h-3c-1.79,0-2.69.59-2.69,1.76a1.56,1.56,0,0,0,.66,1.33,3,3,0,0,0,1.81.49A3.88,3.88,0,0,0,25,16.37Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M47.86,6a6.66,6.66,0,0,1,1.72,5V19.6H45.22v-8A3.9,3.9,0,0,0,44.43,9a2.89,2.89,0,0,0-2.26-.88,3.5,3.5,0,0,0-2.64,1,4.27,4.27,0,0,0-1,3V19.6H34.19V4.54h4.17V6.3a5.88,5.88,0,0,1,2.15-1.47,7.43,7.43,0,0,1,2.83-.52A6.19,6.19,0,0,1,47.86,6Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M68.22,4.54V19.6H64.07V17.81A5.84,5.84,0,0,1,62,19.31a6.59,6.59,0,0,1-2.6.51,6.46,6.46,0,0,1-4.71-1.7A6.84,6.84,0,0,1,53,13.05V4.54h4.37V12.4c0,2.43,1,3.64,3.05,3.64a3.3,3.3,0,0,0,2.52-1,4.33,4.33,0,0,0,1-3V4.54Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M83.42,6a6.36,6.36,0,0,1,1.88,5v8.6H81.21V17.72q-1.23,2.1-4.59,2.1a7.15,7.15,0,0,1-3-.58,4.58,4.58,0,0,1-2-1.63A4.19,4.19,0,0,1,71,15.26,3.9,3.9,0,0,1,72.57,12a8,8,0,0,1,4.89-1.21h3.47a2.8,2.8,0,0,0-.87-2.2,3.84,3.84,0,0,0-2.6-.77,7.63,7.63,0,0,0-2.37.38,6.11,6.11,0,0,0-2,1l-1.57-3a9.43,9.43,0,0,1,3-1.34A13.14,13.14,0,0,1,78,4.31,7.84,7.84,0,0,1,83.42,6ZM79.7,16.37a2.89,2.89,0,0,0,1.23-1.53V13.3h-3c-1.79,0-2.69.59-2.69,1.76a1.56,1.56,0,0,0,.66,1.33,3,3,0,0,0,1.81.49A3.88,3.88,0,0,0,79.7,16.37Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M95.15,4.87a7.93,7.93,0,0,1,3.07-.56v4l-1-.05A4,4,0,0,0,94.3,9.34a4.24,4.24,0,0,0-1.07,3.15V19.6H88.87V4.54H93v2A4.91,4.91,0,0,1,95.15,4.87Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M116.45,4.54l-6.81,16a7.83,7.83,0,0,1-2.56,3.67,6.29,6.29,0,0,1-3.68,1.07,7.77,7.77,0,0,1-2.33-.37,5.06,5.06,0,0,1-1.87-1l1.59-3.1a4,4,0,0,0,1.17.7,3.75,3.75,0,0,0,1.3.25,2.3,2.3,0,0,0,1.45-.44,3.64,3.64,0,0,0,1-1.44l.06-.14L99.25,4.54h4.51L108,14.76l4.26-10.22Z\" style=\"fill: #231f20\"/>`,\r\n  `  <path d=\"M4.54,4.82V10h9.07v3.64H4.54v7.14H0V1.18H14.81V4.82Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M31.67,14.48H20.27a3.56,3.56,0,0,0,1.46,2.21,4.8,4.8,0,0,0,2.85.81,5.87,5.87,0,0,0,2.09-.35A4.86,4.86,0,0,0,28.36,16l2.33,2.52A7.8,7.8,0,0,1,24.47,21,9.88,9.88,0,0,1,20,20a7.41,7.41,0,0,1-3-2.76,7.61,7.61,0,0,1-1.06-4,7.72,7.72,0,0,1,1-4,7.38,7.38,0,0,1,2.88-2.77,9,9,0,0,1,8.11,0,6.9,6.9,0,0,1,2.81,2.73,8.16,8.16,0,0,1,1,4.13C31.75,13.36,31.72,13.75,31.67,14.48ZM21.45,9.63a3.55,3.55,0,0,0-1.23,2.3h7.42A3.59,3.59,0,0,0,26.4,9.65a3.67,3.67,0,0,0-2.46-.86A3.75,3.75,0,0,0,21.45,9.63Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M47.08,6.45a6.92,6.92,0,0,1,2.7,2.72,8.23,8.23,0,0,1,1,4.07,8.27,8.27,0,0,1-1,4.08A6.9,6.9,0,0,1,47.08,20a7.62,7.62,0,0,1-3.82,1,5.81,5.81,0,0,1-4.74-2v1.74H34.35V0h4.37V7.31a5.79,5.79,0,0,1,4.54-1.82A7.71,7.71,0,0,1,47.08,6.45Zm-1.82,9.83a4.22,4.22,0,0,0,1.08-3,4.19,4.19,0,0,0-1.08-3,3.91,3.91,0,0,0-5.52,0,4.19,4.19,0,0,0-1.07,3,4.21,4.21,0,0,0,1.07,3,3.91,3.91,0,0,0,5.52,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M59.75,6.05a7.7,7.7,0,0,1,3.06-.56v4c-.48,0-.81-.06-1-.06a4,4,0,0,0-2.94,1,4.24,4.24,0,0,0-1.06,3.15v7.12H53.46V5.71h4.17v2A4.85,4.85,0,0,1,59.75,6.05Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M80.16,5.71V20.78H76V19a5.68,5.68,0,0,1-2.07,1.5,7.14,7.14,0,0,1-7.31-1.19,6.84,6.84,0,0,1-1.73-5.07V5.71h4.37v7.87c0,2.43,1,3.64,3,3.64a3.3,3.3,0,0,0,2.52-1,4.34,4.34,0,0,0,1-3V5.71Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M95.36,7.15a6.38,6.38,0,0,1,1.87,5v8.6H93.15V18.9c-.82,1.4-2.36,2.1-4.6,2.1a7.18,7.18,0,0,1-3-.59,4.46,4.46,0,0,1-1.94-1.62,4.22,4.22,0,0,1-.67-2.35,3.92,3.92,0,0,1,1.58-3.31,8.06,8.06,0,0,1,4.88-1.2h3.48A2.78,2.78,0,0,0,92,9.73,3.86,3.86,0,0,0,89.39,9,7.62,7.62,0,0,0,87,9.34a6.27,6.27,0,0,0-2,1l-1.56-3a9.44,9.44,0,0,1,3-1.35A13.55,13.55,0,0,1,90,5.49,7.84,7.84,0,0,1,95.36,7.15ZM91.63,17.54A2.85,2.85,0,0,0,92.87,16V14.48h-3c-1.79,0-2.69.58-2.69,1.76a1.57,1.57,0,0,0,.66,1.33,3,3,0,0,0,1.81.49A3.73,3.73,0,0,0,91.63,17.54Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M107.09,6.05a7.75,7.75,0,0,1,3.07-.56v4l-1-.06a4,4,0,0,0-2.94,1,4.24,4.24,0,0,0-1.07,3.15v7.12H100.8V5.71H105v2A4.77,4.77,0,0,1,107.09,6.05Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M128.38,5.71l-6.8,16A7.83,7.83,0,0,1,119,25.37a6.28,6.28,0,0,1-3.68,1.06,7.76,7.76,0,0,1-2.33-.36,5.06,5.06,0,0,1-1.87-1L112.73,22a3.91,3.91,0,0,0,1.16.7,3.62,3.62,0,0,0,1.31.25,2.29,2.29,0,0,0,1.45-.43,3.64,3.64,0,0,0,1-1.44l.06-.14L111.19,5.71h4.51l4.23,10.22,4.25-10.22Z\" style=\"fill: #231f20\"/>`,\r\n  `<path d=\"M17.84,20.78,17.81,9,12,18.7H10L4.26,9.27V20.78H0V1.18H3.75l7.34,12.18L18.31,1.18H22l.05,19.6Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M37.64,7.15a6.39,6.39,0,0,1,1.88,5v8.6H35.43V18.9Q34.2,21,30.84,21a7.15,7.15,0,0,1-3-.59,4.49,4.49,0,0,1-1.95-1.62,4.22,4.22,0,0,1-.67-2.35,3.92,3.92,0,0,1,1.58-3.31,8.07,8.07,0,0,1,4.89-1.2h3.47a2.78,2.78,0,0,0-.87-2.2A3.84,3.84,0,0,0,31.68,9a7.63,7.63,0,0,0-2.37.38,6.22,6.22,0,0,0-2,1l-1.57-3A9.44,9.44,0,0,1,28.72,6a13.55,13.55,0,0,1,3.54-.47A7.84,7.84,0,0,1,37.64,7.15ZM33.92,17.54A2.83,2.83,0,0,0,35.15,16V14.48h-3c-1.79,0-2.69.58-2.69,1.76a1.57,1.57,0,0,0,.66,1.33,3,3,0,0,0,1.81.49A3.79,3.79,0,0,0,33.92,17.54Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M49.37,6.05a7.75,7.75,0,0,1,3.07-.56v4c-.49,0-.81-.06-1-.06a4,4,0,0,0-2.94,1,4.24,4.24,0,0,0-1.07,3.15v7.12H43.09V5.71h4.17v2A4.77,4.77,0,0,1,49.37,6.05Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M57.72,20a7.39,7.39,0,0,1-4.08-6.77,7.52,7.52,0,0,1,1.08-4,7.41,7.41,0,0,1,3-2.76,9.29,9.29,0,0,1,4.32-1,8.39,8.39,0,0,1,4.16,1,5.86,5.86,0,0,1,2.59,2.84L65.4,11.14A3.69,3.69,0,0,0,62,9.07a3.85,3.85,0,0,0-2.83,1.12,4.12,4.12,0,0,0-1.12,3.05,4.13,4.13,0,0,0,1.12,3.06A3.85,3.85,0,0,0,62,17.42a3.64,3.64,0,0,0,3.38-2.08l3.39,1.85A6,6,0,0,1,66.2,20,8.29,8.29,0,0,1,62,21,9.29,9.29,0,0,1,57.72,20Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M84.81,7.17a6.65,6.65,0,0,1,1.72,5v8.63H82.16v-8a3.94,3.94,0,0,0-.78-2.67,2.87,2.87,0,0,0-2.27-.88,3.47,3.47,0,0,0-2.63,1,4.24,4.24,0,0,0-1,3v7.45H71.13V0H75.5V7.28A5.84,5.84,0,0,1,77.6,6a7.56,7.56,0,0,1,2.69-.46A6.19,6.19,0,0,1,84.81,7.17Z\" style=\"fill: #231f20\"/>`,\r\n  ` <path d=\"M15.48,17.84H6.38L4.65,22H0L8.74,2.44h4.48L22,22H17.22Zm-1.42-3.45L11,6.89l-3.11,7.5Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M36.43,7.71a6.92,6.92,0,0,1,2.7,2.72,8.25,8.25,0,0,1,1,4.07,8.27,8.27,0,0,1-1,4.08,6.83,6.83,0,0,1-2.7,2.71,7.62,7.62,0,0,1-3.82,1,5.83,5.83,0,0,1-4.54-1.82v7H23.7V7h4.17V8.71a5.8,5.8,0,0,1,4.74-2A7.71,7.71,0,0,1,36.43,7.71Zm-1.82,9.83a4.22,4.22,0,0,0,1.08-3,4.19,4.19,0,0,0-1.08-3,3.91,3.91,0,0,0-5.52,0,4.19,4.19,0,0,0-1.08,3,4.22,4.22,0,0,0,1.08,3,3.91,3.91,0,0,0,5.52,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M49.1,7.31a7.88,7.88,0,0,1,3.06-.56v4c-.48,0-.81-.06-1-.06a4,4,0,0,0-2.94,1,4.24,4.24,0,0,0-1.06,3.15V22H42.81V7H47V9A4.85,4.85,0,0,1,49.1,7.31Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M54.51,4.17a2.27,2.27,0,0,1-.76-1.73A2.3,2.3,0,0,1,54.51.7a2.75,2.75,0,0,1,2-.7,2.83,2.83,0,0,1,2,.67,2.18,2.18,0,0,1,.76,1.68,2.41,2.41,0,0,1-.76,1.81,3.08,3.08,0,0,1-3.92,0ZM54.29,7h4.36V22H54.29Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M62.35,1.26h4.36V22H62.35Z\" style=\"fill: #231f20\"/>`,\r\n  ` <path d=\"M17.84,19.6l0-11.76L12,17.53H10L4.26,8.09V19.6H0V0H3.75l7.34,12.18L18.31,0H22l.05,19.6Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M37.64,6a6.36,6.36,0,0,1,1.88,5v8.6H35.43V17.72q-1.23,2.1-4.59,2.1a7.15,7.15,0,0,1-3-.58,4.58,4.58,0,0,1-1.95-1.63,4.19,4.19,0,0,1-.67-2.35A3.9,3.9,0,0,1,26.79,12a8,8,0,0,1,4.89-1.21h3.47a2.8,2.8,0,0,0-.87-2.2,3.84,3.84,0,0,0-2.6-.77,7.63,7.63,0,0,0-2.37.38,6.22,6.22,0,0,0-2,1l-1.57-3a9.43,9.43,0,0,1,2.95-1.34,13.14,13.14,0,0,1,3.54-.48A7.84,7.84,0,0,1,37.64,6ZM33.92,16.37a2.89,2.89,0,0,0,1.23-1.53V13.3h-3c-1.79,0-2.69.59-2.69,1.76a1.56,1.56,0,0,0,.66,1.33,3,3,0,0,0,1.81.49A3.88,3.88,0,0,0,33.92,16.37Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M57.52,4.54l-6.8,16a7.91,7.91,0,0,1-2.57,3.67,6.25,6.25,0,0,1-3.68,1.07,7.71,7.71,0,0,1-2.32-.37,5.1,5.1,0,0,1-1.88-1l1.6-3.1a3.86,3.86,0,0,0,1.16.7,3.79,3.79,0,0,0,1.3.25,2.33,2.33,0,0,0,1.46-.44,3.75,3.75,0,0,0,1-1.44l.05-.14L40.33,4.54h4.51l4.22,10.22L53.32,4.54Z\" style=\"fill: #231f20\"/>`,\r\n  ` <path d=\"M2.73,19.19A7,7,0,0,1,0,17.08l2.52-3a4.54,4.54,0,0,0,3.64,2.15q2.77,0,2.77-3.25V3.64H2V0h11.4V12.71a7.41,7.41,0,0,1-1.79,5.42,7.13,7.13,0,0,1-5.27,1.81A8.8,8.8,0,0,1,2.73,19.19Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M32.52,4.54V19.6H28.38V17.81a5.87,5.87,0,0,1-2.08,1.5,6.59,6.59,0,0,1-2.6.51,6.42,6.42,0,0,1-4.7-1.7,6.81,6.81,0,0,1-1.74-5.07V4.54h4.37V12.4c0,2.43,1,3.64,3.05,3.64a3.3,3.3,0,0,0,2.52-1,4.33,4.33,0,0,0,.95-3V4.54Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M49.86,6a6.66,6.66,0,0,1,1.72,5V19.6H47.21v-8A4,4,0,0,0,46.43,9a2.9,2.9,0,0,0-2.27-.88,3.47,3.47,0,0,0-2.63,1,4.26,4.26,0,0,0-1,3V19.6H36.18V4.54h4.17V6.3a5.8,5.8,0,0,1,2.16-1.47,7.43,7.43,0,0,1,2.83-.52A6.21,6.21,0,0,1,49.86,6Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M69.88,13.3H58.48a3.56,3.56,0,0,0,1.46,2.21,4.8,4.8,0,0,0,2.85.81A5.65,5.65,0,0,0,64.88,16a5.07,5.07,0,0,0,1.69-1.1l2.33,2.52a7.82,7.82,0,0,1-6.22,2.43,9.88,9.88,0,0,1-4.51-1,7.28,7.28,0,0,1-3-2.76,7.58,7.58,0,0,1-1.07-4,7.67,7.67,0,0,1,1.05-4A7.33,7.33,0,0,1,58,5.31a8.9,8.9,0,0,1,8.1,0A7,7,0,0,1,68.94,8a8.19,8.19,0,0,1,1,4.13C70,12.18,69.93,12.57,69.88,13.3ZM59.66,8.46a3.54,3.54,0,0,0-1.24,2.29h7.42a3.62,3.62,0,0,0-1.23-2.28,3.66,3.66,0,0,0-2.46-.85A3.75,3.75,0,0,0,59.66,8.46Z\" style=\"fill: #231f20\"/>`,\r\n  ` <path d=\"M2.73,20.37A7,7,0,0,1,0,18.26l2.52-3a4.53,4.53,0,0,0,3.64,2.16q2.77,0,2.77-3.25V4.82H2V1.18h11.4V13.89a7.42,7.42,0,0,1-1.79,5.42,7.13,7.13,0,0,1-5.27,1.8A9,9,0,0,1,2.73,20.37Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M32.52,5.71V20.78H28.38V19a5.64,5.64,0,0,1-2.08,1.5,6.42,6.42,0,0,1-2.6.52A6.39,6.39,0,0,1,19,19.29a6.81,6.81,0,0,1-1.74-5.07V5.71h4.37v7.87c0,2.43,1,3.64,3.05,3.64a3.3,3.3,0,0,0,2.52-1,4.34,4.34,0,0,0,.95-3V5.71Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M36.17,0h4.37V20.78H36.17Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M59.42,5.71l-6.8,16a7.9,7.9,0,0,1-2.56,3.67,6.29,6.29,0,0,1-3.69,1.06,7.69,7.69,0,0,1-2.32-.36,5.1,5.1,0,0,1-1.88-1L43.77,22a3.67,3.67,0,0,0,1.16.7,3.57,3.57,0,0,0,1.3.25,2.3,2.3,0,0,0,1.46-.43,3.75,3.75,0,0,0,1-1.44l0-.14L42.23,5.71h4.51L51,15.93,55.22,5.71Z\" style=\"fill: #231f20\"/>`,\r\n  `<path d=\"M15.48,15.4H6.38L4.65,19.6H0L8.74,0h4.48L22,19.6H17.22ZM14.06,12,11,4.45,7.84,12Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M38.21,4.54V19.6H34.07V17.81A5.93,5.93,0,0,1,32,19.31a6.6,6.6,0,0,1-2.61.51,6.46,6.46,0,0,1-4.7-1.7A6.81,6.81,0,0,1,23,13.05V4.54h4.37V12.4q0,3.65,3.05,3.64a3.27,3.27,0,0,0,2.52-1,4.28,4.28,0,0,0,1-3V4.54Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M57.53,4.54V17.08c0,2.76-.72,4.82-2.16,6.16s-3.54,2-6.3,2a15.5,15.5,0,0,1-4.14-.54,8.85,8.85,0,0,1-3.25-1.54l1.74-3.13a7,7,0,0,0,2.4,1.24,9.58,9.58,0,0,0,2.92.47,4.67,4.67,0,0,0,3.34-1,4.06,4.06,0,0,0,1.08-3.09V17a6.12,6.12,0,0,1-4.76,1.87A7.92,7.92,0,0,1,44.61,18a6.87,6.87,0,0,1-2.73-2.56,7.09,7.09,0,0,1-1-3.81,7.09,7.09,0,0,1,1-3.81,6.94,6.94,0,0,1,2.73-2.56,8,8,0,0,1,3.79-.91,6,6,0,0,1,5,2.16V4.54Zm-5.42,9.73a3.49,3.49,0,0,0,1.11-2.68,3.46,3.46,0,0,0-1.11-2.67,4,4,0,0,0-2.84-1,4.09,4.09,0,0,0-2.86,1,3.46,3.46,0,0,0-1.12,2.67,3.5,3.5,0,0,0,1.12,2.68,4.09,4.09,0,0,0,2.86,1A4,4,0,0,0,52.11,14.27Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M76.37,4.54V19.6H72.23V17.81a5.93,5.93,0,0,1-2.07,1.5,6.64,6.64,0,0,1-2.61.51,6.44,6.44,0,0,1-4.7-1.7,6.81,6.81,0,0,1-1.74-5.07V4.54h4.37V12.4q0,3.65,3,3.64a3.27,3.27,0,0,0,2.52-1,4.28,4.28,0,0,0,1-3V4.54Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M81.72,19.36a9.53,9.53,0,0,1-2.86-1.16l1.46-3.14a9.08,9.08,0,0,0,2.43,1,10.31,10.31,0,0,0,2.8.41c1.85,0,2.78-.46,2.78-1.37a1,1,0,0,0-.76-.93,11.66,11.66,0,0,0-2.32-.47,21.85,21.85,0,0,1-3.06-.65,4.76,4.76,0,0,1-2.08-1.28,3.68,3.68,0,0,1-.88-2.64,4.12,4.12,0,0,1,.82-2.53,5.26,5.26,0,0,1,2.41-1.72,10.28,10.28,0,0,1,3.74-.62,15,15,0,0,1,3.18.35,9.08,9.08,0,0,1,2.61,1L90.54,8.74A8.66,8.66,0,0,0,86.2,7.62,4.4,4.4,0,0,0,84.1,8a1.15,1.15,0,0,0-.7,1,1,1,0,0,0,.75,1,14.44,14.44,0,0,0,2.41.53,23.93,23.93,0,0,1,3,.66,4.49,4.49,0,0,1,2,1.27A3.61,3.61,0,0,1,92.5,15a4,4,0,0,1-.84,2.49,5.35,5.35,0,0,1-2.45,1.69,11,11,0,0,1-3.82.6A14.48,14.48,0,0,1,81.72,19.36Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M105,18.87a4.51,4.51,0,0,1-1.58.72,8.52,8.52,0,0,1-2,.23,5.85,5.85,0,0,1-4.16-1.37,5.24,5.24,0,0,1-1.47-4V8.23H93.48V4.87H95.8V1.2h4.37V4.87h3.75V8.23h-3.75v6.13a2,2,0,0,0,.49,1.47,1.81,1.81,0,0,0,1.39.52,2.75,2.75,0,0,0,1.76-.56Z\" style=\"fill: #231f20\"/>`,\r\n  `  <path d=\"M3.49,20.48A10.4,10.4,0,0,1,0,18.84l1.54-3.41a10.5,10.5,0,0,0,3,1.48A11,11,0,0,0,8,17.47a5.53,5.53,0,0,0,2.85-.57,1.73,1.73,0,0,0,.93-1.53,1.45,1.45,0,0,0-.55-1.16,4.12,4.12,0,0,0-1.4-.74c-.57-.19-1.34-.39-2.31-.62a32.77,32.77,0,0,1-3.67-1.06,6.13,6.13,0,0,1-2.45-1.71,4.62,4.62,0,0,1-1-3.14,5.43,5.43,0,0,1,.93-3.09A6.19,6.19,0,0,1,4.1,1.65,11.4,11.4,0,0,1,8.65.84a15,15,0,0,1,3.67.45,11,11,0,0,1,3.14,1.29L14.06,6A10.92,10.92,0,0,0,8.62,4.48a5.09,5.09,0,0,0-2.81.62A1.87,1.87,0,0,0,4.9,6.72a1.6,1.6,0,0,0,1,1.5,16.51,16.51,0,0,0,3.21,1,31.68,31.68,0,0,1,3.66,1.07,5.92,5.92,0,0,1,2.45,1.68,4.46,4.46,0,0,1,1,3.11,5.37,5.37,0,0,1-.94,3.06,6.3,6.3,0,0,1-2.82,2.2A11.48,11.48,0,0,1,8,21.11,16,16,0,0,1,3.49,20.48Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M33.77,14.48H22.37a3.56,3.56,0,0,0,1.46,2.21,4.8,4.8,0,0,0,2.85.81,5.87,5.87,0,0,0,2.09-.35A4.86,4.86,0,0,0,30.46,16l2.33,2.52A7.8,7.8,0,0,1,26.57,21a9.88,9.88,0,0,1-4.51-1,7.41,7.41,0,0,1-3-2.76,7.61,7.61,0,0,1-1.06-4,7.72,7.72,0,0,1,1.05-4,7.45,7.45,0,0,1,2.88-2.77,9,9,0,0,1,8.11,0,7,7,0,0,1,2.81,2.73,8.16,8.16,0,0,1,1,4.13C33.85,13.36,33.82,13.75,33.77,14.48ZM23.55,9.63a3.55,3.55,0,0,0-1.23,2.3h7.42A3.59,3.59,0,0,0,28.5,9.65,3.67,3.67,0,0,0,26,8.79,3.75,3.75,0,0,0,23.55,9.63Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M49.18,6.45a6.92,6.92,0,0,1,2.7,2.72,8.25,8.25,0,0,1,1,4.07,8.27,8.27,0,0,1-1,4.08A6.83,6.83,0,0,1,49.18,20a7.62,7.62,0,0,1-3.82,1,5.83,5.83,0,0,1-4.54-1.82v7H36.45V5.71h4.17V7.45a5.8,5.8,0,0,1,4.74-2A7.71,7.71,0,0,1,49.18,6.45Zm-1.82,9.83a4.22,4.22,0,0,0,1.08-3,4.21,4.21,0,0,0-1.08-3,3.91,3.91,0,0,0-5.52,0,4.21,4.21,0,0,0-1.08,3,4.22,4.22,0,0,0,1.08,3,3.91,3.91,0,0,0,5.52,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M65.38,20.05a4.42,4.42,0,0,1-1.58.71,7.88,7.88,0,0,1-2,.24,5.89,5.89,0,0,1-4.16-1.37,5.26,5.26,0,0,1-1.47-4V9.41H53.88V6.05H56.2V2.38h4.37V6.05h3.75V9.41H60.57v6.13A2,2,0,0,0,61.06,17a1.79,1.79,0,0,0,1.38.52A2.86,2.86,0,0,0,64.21,17Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M82.06,14.48H70.66a3.56,3.56,0,0,0,1.46,2.21A4.82,4.82,0,0,0,75,17.5a5.87,5.87,0,0,0,2.09-.35A4.86,4.86,0,0,0,78.75,16l2.33,2.52A7.8,7.8,0,0,1,74.86,21a9.88,9.88,0,0,1-4.51-1,7.41,7.41,0,0,1-3-2.76,7.61,7.61,0,0,1-1.06-4,7.72,7.72,0,0,1,1-4A7.45,7.45,0,0,1,70.2,6.48a9,9,0,0,1,8.11,0,7,7,0,0,1,2.81,2.73,8.16,8.16,0,0,1,1,4.13C82.14,13.36,82.11,13.75,82.06,14.48ZM71.84,9.63a3.6,3.6,0,0,0-1.23,2.3H78a3.59,3.59,0,0,0-1.24-2.28,3.67,3.67,0,0,0-2.46-.86A3.75,3.75,0,0,0,71.84,9.63Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M108.53,7.15a6.81,6.81,0,0,1,1.67,5v8.63h-4.37v-8a4.11,4.11,0,0,0-.74-2.67A2.61,2.61,0,0,0,103,9.27a3.09,3.09,0,0,0-2.43,1,4.28,4.28,0,0,0-.9,3v7.56H95.27v-8q0-3.56-2.85-3.55a3.08,3.08,0,0,0-2.41,1,4.28,4.28,0,0,0-.9,3v7.56H84.74V5.71h4.18V7.45A5.49,5.49,0,0,1,91,6a7.1,7.1,0,0,1,2.68-.5,6.48,6.48,0,0,1,2.88.63A5.09,5.09,0,0,1,98.6,8a6.28,6.28,0,0,1,2.34-1.82,7.38,7.38,0,0,1,3.1-.64A6.07,6.07,0,0,1,108.53,7.15Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M126.48,6.45a6.92,6.92,0,0,1,2.7,2.72,8.25,8.25,0,0,1,1,4.07,8.27,8.27,0,0,1-1,4.08,6.83,6.83,0,0,1-2.7,2.71,7.62,7.62,0,0,1-3.82,1,5.8,5.8,0,0,1-4.74-2v1.74h-4.17V0h4.37V7.31a5.79,5.79,0,0,1,4.54-1.82A7.71,7.71,0,0,1,126.48,6.45Zm-1.82,9.83a4.22,4.22,0,0,0,1.08-3,4.21,4.21,0,0,0-1.08-3,3.91,3.91,0,0,0-5.52,0,4.21,4.21,0,0,0-1.08,3,4.22,4.22,0,0,0,1.08,3,3.91,3.91,0,0,0,5.52,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M147.63,14.48h-11.4a3.52,3.52,0,0,0,1.46,2.21,4.8,4.8,0,0,0,2.85.81,5.87,5.87,0,0,0,2.09-.35A5,5,0,0,0,144.32,16l2.33,2.52A7.81,7.81,0,0,1,140.43,21a9.88,9.88,0,0,1-4.51-1,7.35,7.35,0,0,1-3-2.76,7.61,7.61,0,0,1-1.07-4,7.72,7.72,0,0,1,1-4,7.41,7.41,0,0,1,2.89-2.77,8.94,8.94,0,0,1,8.1,0,7,7,0,0,1,2.82,2.73,8.16,8.16,0,0,1,1,4.13C147.71,13.36,147.68,13.75,147.63,14.48ZM137.41,9.63a3.56,3.56,0,0,0-1.24,2.3h7.42a3.62,3.62,0,0,0-1.23-2.28,3.67,3.67,0,0,0-2.46-.86A3.75,3.75,0,0,0,137.41,9.63Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M156.6,6.05a7.67,7.67,0,0,1,3.06-.56v4c-.48,0-.81-.06-1-.06a4,4,0,0,0-2.94,1,4.24,4.24,0,0,0-1.06,3.15v7.12h-4.37V5.71h4.17v2A4.8,4.8,0,0,1,156.6,6.05Z\" style=\"fill: #231f20\"/>`,\r\n  `  <path d=\"M5.22,19.8A9.8,9.8,0,0,1,0,11a9.85,9.85,0,0,1,1.39-5.2A9.68,9.68,0,0,1,5.22,2.16,11.44,11.44,0,0,1,10.72.84a11.31,11.31,0,0,1,5.49,1.32A9.78,9.78,0,0,1,21.45,11a9.81,9.81,0,0,1-5.24,8.82,11.42,11.42,0,0,1-5.49,1.31A11.55,11.55,0,0,1,5.22,19.8Zm8.64-3.35a5.68,5.68,0,0,0,2.2-2.23,6.54,6.54,0,0,0,.8-3.24,6.55,6.55,0,0,0-.8-3.25,5.75,5.75,0,0,0-2.2-2.23,6.24,6.24,0,0,0-3.14-.8,6.23,6.23,0,0,0-3.13.8,5.68,5.68,0,0,0-2.2,2.23A6.55,6.55,0,0,0,4.59,11a6.54,6.54,0,0,0,.8,3.24,5.62,5.62,0,0,0,2.2,2.23,6.23,6.23,0,0,0,3.13.8A6.24,6.24,0,0,0,13.86,16.45Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M27.46,20a7.41,7.41,0,0,1-4.07-6.77,7.41,7.41,0,0,1,4.07-6.76,9.3,9.3,0,0,1,4.33-1,8.42,8.42,0,0,1,4.16,1,6,6,0,0,1,2.59,2.84l-3.39,1.82a3.72,3.72,0,0,0-3.39-2.07,3.87,3.87,0,0,0-2.83,1.12,4.16,4.16,0,0,0-1.12,3.05,4.17,4.17,0,0,0,1.12,3.06,3.87,3.87,0,0,0,2.83,1.12,3.67,3.67,0,0,0,3.39-2.08l3.39,1.85A6,6,0,0,1,36,20a8.32,8.32,0,0,1-4.16,1A9.3,9.3,0,0,1,27.46,20Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M51.19,20.05a4.47,4.47,0,0,1-1.59.71,7.88,7.88,0,0,1-2,.24,5.89,5.89,0,0,1-4.16-1.37,5.26,5.26,0,0,1-1.47-4V9.41H39.68V6.05H42V2.38h4.37V6.05h3.75V9.41H46.37v6.13A2,2,0,0,0,46.86,17a1.81,1.81,0,0,0,1.39.52A2.83,2.83,0,0,0,50,17Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M56.09,20a7.51,7.51,0,0,1-3-2.76,7.61,7.61,0,0,1-1.06-4,7.59,7.59,0,0,1,1.06-4,7.44,7.44,0,0,1,3-2.76,9.66,9.66,0,0,1,8.52,0,7.45,7.45,0,0,1,2.94,2.76,7.6,7.6,0,0,1,1.07,4,7.61,7.61,0,0,1-1.07,4A7.52,7.52,0,0,1,64.61,20a9.66,9.66,0,0,1-8.52,0Zm7-3.73a4.22,4.22,0,0,0,1.08-3,4.21,4.21,0,0,0-1.08-3,3.6,3.6,0,0,0-2.75-1.14,3.69,3.69,0,0,0-2.78,1.14,4.21,4.21,0,0,0-1.09,3,4.22,4.22,0,0,0,1.09,3,3.69,3.69,0,0,0,2.78,1.14A3.6,3.6,0,0,0,63.11,16.28Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M84,6.45a6.92,6.92,0,0,1,2.7,2.72,8.15,8.15,0,0,1,1,4.07,8.16,8.16,0,0,1-1,4.08A6.83,6.83,0,0,1,84,20a7.62,7.62,0,0,1-3.82,1,5.78,5.78,0,0,1-4.73-2v1.74H71.26V0h4.36V7.31a5.82,5.82,0,0,1,4.54-1.82A7.71,7.71,0,0,1,84,6.45Zm-1.82,9.83a4.22,4.22,0,0,0,1.08-3,4.21,4.21,0,0,0-1.08-3,3.9,3.9,0,0,0-5.51,0,4.21,4.21,0,0,0-1.08,3,4.22,4.22,0,0,0,1.08,3,3.9,3.9,0,0,0,5.51,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M105.13,14.48H93.73a3.6,3.6,0,0,0,1.46,2.21,4.85,4.85,0,0,0,2.86.81,5.81,5.81,0,0,0,2.08-.35,5,5,0,0,0,1.7-1.11l2.32,2.52A7.79,7.79,0,0,1,97.94,21a9.85,9.85,0,0,1-4.51-1,7.38,7.38,0,0,1-3-2.76,7.61,7.61,0,0,1-1.06-4,7.72,7.72,0,0,1,1-4,7.45,7.45,0,0,1,2.88-2.77,9,9,0,0,1,8.11,0,7,7,0,0,1,2.81,2.73,8.16,8.16,0,0,1,1,4.13C105.21,13.36,105.19,13.75,105.13,14.48ZM94.91,9.63a3.6,3.6,0,0,0-1.23,2.3h7.42a3.62,3.62,0,0,0-1.23-2.28,4,4,0,0,0-5,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M114.1,6.05a7.75,7.75,0,0,1,3.07-.56v4c-.49,0-.81-.06-1-.06a4,4,0,0,0-2.94,1,4.24,4.24,0,0,0-1.07,3.15v7.12h-4.36V5.71H112v2A4.77,4.77,0,0,1,114.1,6.05Z\" style=\"fill: #231f20\"/>`,\r\n  ` <path d=\"M18,1.18v19.6H14.25L4.48,8.88v11.9H0V1.18H3.75l9.75,11.9V1.18Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M25,20a7.51,7.51,0,0,1-3-2.76,7.61,7.61,0,0,1-1.06-4,7.59,7.59,0,0,1,1.06-4,7.44,7.44,0,0,1,3-2.76,9.05,9.05,0,0,1,4.27-1,9,9,0,0,1,4.25,1,7.45,7.45,0,0,1,2.94,2.76,7.6,7.6,0,0,1,1.07,4,7.61,7.61,0,0,1-1.07,4A7.52,7.52,0,0,1,33.55,20a9,9,0,0,1-4.25,1A9.05,9.05,0,0,1,25,20Zm7-3.73a4.22,4.22,0,0,0,1.08-3,4.21,4.21,0,0,0-1.08-3A3.6,3.6,0,0,0,29.3,9.07a3.69,3.69,0,0,0-2.78,1.14,4.21,4.21,0,0,0-1.09,3,4.22,4.22,0,0,0,1.09,3,3.69,3.69,0,0,0,2.78,1.14A3.6,3.6,0,0,0,32.05,16.28Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M54.74,5.71,48.39,20.78H43.88L37.55,5.71h4.51L46.23,16,50.54,5.71Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M70.51,14.48H59.12a3.54,3.54,0,0,0,1.45,2.21,4.85,4.85,0,0,0,2.86.81,5.81,5.81,0,0,0,2.08-.35A4.89,4.89,0,0,0,67.21,16l2.32,2.52A7.79,7.79,0,0,1,63.32,21a9.85,9.85,0,0,1-4.51-1,7.38,7.38,0,0,1-3-2.76,7.61,7.61,0,0,1-1.06-4,7.72,7.72,0,0,1,1.05-4,7.45,7.45,0,0,1,2.88-2.77,9,9,0,0,1,8.11,0,7,7,0,0,1,2.81,2.73,8.16,8.16,0,0,1,1,4.13C70.6,13.36,70.57,13.75,70.51,14.48ZM60.29,9.63a3.6,3.6,0,0,0-1.23,2.3h7.42a3.62,3.62,0,0,0-1.23-2.28,3.7,3.7,0,0,0-2.47-.86A3.75,3.75,0,0,0,60.29,9.63Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M97,7.15a6.81,6.81,0,0,1,1.67,5v8.63H94.28v-8a4.11,4.11,0,0,0-.74-2.67,2.61,2.61,0,0,0-2.11-.88,3.13,3.13,0,0,0-2.44,1,4.28,4.28,0,0,0-.9,3v7.56H83.73v-8c0-2.37-1-3.55-2.86-3.55a3.09,3.09,0,0,0-2.41,1,4.28,4.28,0,0,0-.9,3v7.56H73.2V5.71h4.17V7.45A5.53,5.53,0,0,1,79.43,6a7,7,0,0,1,2.67-.5A6.49,6.49,0,0,1,85,6.12,5.22,5.22,0,0,1,87.06,8,6.13,6.13,0,0,1,89.4,6.13a7.34,7.34,0,0,1,3.09-.64A6.07,6.07,0,0,1,97,7.15Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M114.93,6.45a6.92,6.92,0,0,1,2.7,2.72,8.15,8.15,0,0,1,1,4.07,8.16,8.16,0,0,1-1,4.08,6.83,6.83,0,0,1-2.7,2.71,7.62,7.62,0,0,1-3.82,1,5.78,5.78,0,0,1-4.73-2v1.74h-4.17V0h4.36V7.31a5.81,5.81,0,0,1,4.54-1.82A7.71,7.71,0,0,1,114.93,6.45Zm-1.82,9.83a4.22,4.22,0,0,0,1.08-3,4.21,4.21,0,0,0-1.08-3,3.91,3.91,0,0,0-5.52,0,4.25,4.25,0,0,0-1.07,3,4.25,4.25,0,0,0,1.07,3,3.91,3.91,0,0,0,5.52,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M136.08,14.48h-11.4a3.56,3.56,0,0,0,1.46,2.21,4.83,4.83,0,0,0,2.86.81,5.85,5.85,0,0,0,2.08-.35A4.86,4.86,0,0,0,132.77,16l2.33,2.52A7.8,7.8,0,0,1,128.88,21a9.81,9.81,0,0,1-4.5-1,7.38,7.38,0,0,1-3-2.76,7.61,7.61,0,0,1-1.06-4,7.72,7.72,0,0,1,1-4,7.45,7.45,0,0,1,2.88-2.77,9,9,0,0,1,8.11,0,7,7,0,0,1,2.81,2.73,8.16,8.16,0,0,1,1,4.13C136.16,13.36,136.14,13.75,136.08,14.48ZM125.86,9.63a3.6,3.6,0,0,0-1.23,2.3h7.42a3.59,3.59,0,0,0-1.24-2.28,3.67,3.67,0,0,0-2.46-.86A3.75,3.75,0,0,0,125.86,9.63Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M145.05,6.05a7.75,7.75,0,0,1,3.07-.56v4l-1-.06a4,4,0,0,0-2.94,1,4.24,4.24,0,0,0-1.07,3.15v7.12h-4.37V5.71h4.18v2A4.77,4.77,0,0,1,145.05,6.05Z\" style=\"fill: #231f20\"/>`,\r\n  `<path d=\"M0,1.18H8.9a12.59,12.59,0,0,1,5.65,1.21,9.17,9.17,0,0,1,3.8,3.43A9.65,9.65,0,0,1,19.71,11a9.61,9.61,0,0,1-1.36,5.15,9.1,9.1,0,0,1-3.8,3.43A12.59,12.59,0,0,1,8.9,20.78H0ZM8.68,17.05a6.56,6.56,0,0,0,4.69-1.64A5.76,5.76,0,0,0,15.12,11a5.77,5.77,0,0,0-1.75-4.44A6.6,6.6,0,0,0,8.68,4.9H4.54V17.05Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M37.44,14.48H26.05a3.54,3.54,0,0,0,1.45,2.21,4.85,4.85,0,0,0,2.86.81,5.91,5.91,0,0,0,2.09-.35A5,5,0,0,0,34.14,16l2.32,2.52A7.79,7.79,0,0,1,30.25,21a9.88,9.88,0,0,1-4.51-1,7.29,7.29,0,0,1-3-2.76,7.61,7.61,0,0,1-1.07-4,7.72,7.72,0,0,1,1.05-4,7.41,7.41,0,0,1,2.89-2.77,8.94,8.94,0,0,1,8.1,0,7.05,7.05,0,0,1,2.82,2.73,8.16,8.16,0,0,1,1,4.13C37.53,13.36,37.5,13.75,37.44,14.48ZM27.22,9.63A3.6,3.6,0,0,0,26,11.93h7.42a3.62,3.62,0,0,0-1.23-2.28,3.67,3.67,0,0,0-2.46-.86A3.8,3.8,0,0,0,27.22,9.63Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M43.28,20a7.39,7.39,0,0,1-4.08-6.77,7.39,7.39,0,0,1,4.08-6.76,9.26,9.26,0,0,1,4.32-1,8.42,8.42,0,0,1,4.16,1,5.9,5.9,0,0,1,2.59,2.84L51,11.14a3.7,3.7,0,0,0-3.39-2.07,3.84,3.84,0,0,0-2.82,1.12,4.12,4.12,0,0,0-1.12,3.05,4.13,4.13,0,0,0,1.12,3.06,3.84,3.84,0,0,0,2.82,1.12A3.65,3.65,0,0,0,51,15.34l3.39,1.85A6,6,0,0,1,51.76,20a8.32,8.32,0,0,1-4.16,1A9.26,9.26,0,0,1,43.28,20Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M71.24,14.48H59.84a3.56,3.56,0,0,0,1.46,2.21,4.83,4.83,0,0,0,2.86.81,5.85,5.85,0,0,0,2.08-.35A5,5,0,0,0,67.94,16l2.32,2.52A7.8,7.8,0,0,1,64,21a9.81,9.81,0,0,1-4.5-1,7.38,7.38,0,0,1-3-2.76,7.61,7.61,0,0,1-1.06-4,7.72,7.72,0,0,1,1-4,7.45,7.45,0,0,1,2.88-2.77,9,9,0,0,1,8.11,0A7,7,0,0,1,70.3,9.17a8.16,8.16,0,0,1,1,4.13C71.32,13.36,71.3,13.75,71.24,14.48ZM61,9.63a3.6,3.6,0,0,0-1.23,2.3h7.42A3.62,3.62,0,0,0,66,9.65a4,4,0,0,0-5,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M97.71,7.15a6.81,6.81,0,0,1,1.67,5v8.63H95v-8a4.11,4.11,0,0,0-.74-2.67,2.61,2.61,0,0,0-2.12-.88,3.11,3.11,0,0,0-2.43,1,4.28,4.28,0,0,0-.9,3v7.56H84.45v-8q0-3.56-2.85-3.55a3.09,3.09,0,0,0-2.41,1,4.28,4.28,0,0,0-.9,3v7.56H73.92V5.71H78.1V7.45A5.49,5.49,0,0,1,80.15,6a7.1,7.1,0,0,1,2.68-.5,6.48,6.48,0,0,1,2.88.63A5.09,5.09,0,0,1,87.78,8a6.28,6.28,0,0,1,2.34-1.82,7.38,7.38,0,0,1,3.1-.64A6.07,6.07,0,0,1,97.71,7.15Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M115.66,6.45a6.92,6.92,0,0,1,2.7,2.72,8.25,8.25,0,0,1,1,4.07,8.27,8.27,0,0,1-1,4.08,6.83,6.83,0,0,1-2.7,2.71,7.62,7.62,0,0,1-3.82,1,5.8,5.8,0,0,1-4.74-2v1.74h-4.17V0h4.37V7.31a5.79,5.79,0,0,1,4.54-1.82A7.71,7.71,0,0,1,115.66,6.45Zm-1.82,9.83a4.22,4.22,0,0,0,1.08-3,4.21,4.21,0,0,0-1.08-3,3.91,3.91,0,0,0-5.52,0,4.21,4.21,0,0,0-1.08,3,4.22,4.22,0,0,0,1.08,3,3.91,3.91,0,0,0,5.52,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M136.81,14.48h-11.4a3.56,3.56,0,0,0,1.46,2.21,4.8,4.8,0,0,0,2.85.81,5.87,5.87,0,0,0,2.09-.35A4.86,4.86,0,0,0,133.5,16l2.33,2.52A7.8,7.8,0,0,1,129.61,21a9.88,9.88,0,0,1-4.51-1,7.41,7.41,0,0,1-3-2.76,7.61,7.61,0,0,1-1.07-4,7.72,7.72,0,0,1,1-4A7.47,7.47,0,0,1,125,6.48a8.94,8.94,0,0,1,8.1,0,7,7,0,0,1,2.82,2.73,8.16,8.16,0,0,1,1,4.13C136.89,13.36,136.86,13.75,136.81,14.48ZM126.59,9.63a3.56,3.56,0,0,0-1.24,2.3h7.42a3.58,3.58,0,0,0-1.23-2.28,3.67,3.67,0,0,0-2.46-.86A3.75,3.75,0,0,0,126.59,9.63Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M145.78,6.05a7.7,7.7,0,0,1,3.06-.56v4c-.48,0-.81-.06-1-.06a4,4,0,0,0-2.94,1,4.24,4.24,0,0,0-1.06,3.15v7.12h-4.37V5.71h4.17v2A4.85,4.85,0,0,1,145.78,6.05Z\" style=\"fill: #231f20\"/>`\r\n];\r\n\r\nexport default monthsMP;\r\n","const yearsMP = {\r\n     2023: `  <path d=\"M6.73,7V8.54H.38V7.28L3.63,4.22a3.44,3.44,0,0,0,.69-.84,1.55,1.55,0,0,0,.18-.7.93.93,0,0,0-.34-.78,1.59,1.59,0,0,0-1-.27,2.33,2.33,0,0,0-1,.21,1.87,1.87,0,0,0-.74.63L0,1.56A3.34,3.34,0,0,1,1.36.41a4.58,4.58,0,0,1,2-.41A3.92,3.92,0,0,1,5,.31a2.52,2.52,0,0,1,1.1.86,2.23,2.23,0,0,1,.39,1.31,3,3,0,0,1-.29,1.29A5.09,5.09,0,0,1,5.05,5.14L3.12,7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M9.25,8.17A3.48,3.48,0,0,1,8,6.68a5.55,5.55,0,0,1-.46-2.34A5.53,5.53,0,0,1,8,2,3.48,3.48,0,0,1,9.25.52,3.39,3.39,0,0,1,11.11,0,3.34,3.34,0,0,1,13,.52,3.42,3.42,0,0,1,14.25,2a5.38,5.38,0,0,1,.46,2.33,5.4,5.4,0,0,1-.46,2.34A3.42,3.42,0,0,1,13,8.17a3.34,3.34,0,0,1-1.86.52A3.39,3.39,0,0,1,9.25,8.17Zm3.07-1.79a3.77,3.77,0,0,0,.44-2,3.77,3.77,0,0,0-.44-2,1.42,1.42,0,0,0-2.4,0,3.77,3.77,0,0,0-.44,2,3.77,3.77,0,0,0,.44,2,1.42,1.42,0,0,0,2.4,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M21.86,7V8.54H15.52V7.28l3.24-3.06a3.44,3.44,0,0,0,.69-.84,1.55,1.55,0,0,0,.18-.7.93.93,0,0,0-.34-.78,1.59,1.59,0,0,0-1-.27,2.33,2.33,0,0,0-1,.21,1.94,1.94,0,0,0-.74.63l-1.42-.91A3.34,3.34,0,0,1,16.49.41a4.58,4.58,0,0,1,2-.41,4,4,0,0,1,1.64.31,2.54,2.54,0,0,1,1.09.86,2.23,2.23,0,0,1,.39,1.31,3,3,0,0,1-.29,1.29,4.9,4.9,0,0,1-1.12,1.37L18.25,7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M28.28,4.39A2.21,2.21,0,0,1,28.87,6a2.6,2.6,0,0,1-.38,1.35,2.75,2.75,0,0,1-1.17,1,4.64,4.64,0,0,1-1.93.37,6.41,6.41,0,0,1-1.74-.24,4.27,4.27,0,0,1-1.46-.66l.75-1.49a3.62,3.62,0,0,0,1.11.56,4.34,4.34,0,0,0,1.29.2,2.05,2.05,0,0,0,1.16-.29A.89.89,0,0,0,26.92,6c0-.69-.53-1-1.58-1h-.88V3.66l1.72-2H22.61V.14h5.88V1.4l-1.9,2.16A2.8,2.8,0,0,1,28.28,4.39Z\" style=\"fill: #231f20\"/>`,\r\n     2024: `  <path d=\"M6.73,7V8.54H.38V7.28L3.63,4.22a3.44,3.44,0,0,0,.69-.84,1.55,1.55,0,0,0,.18-.7.93.93,0,0,0-.34-.78,1.59,1.59,0,0,0-1-.27,2.33,2.33,0,0,0-1,.21,1.87,1.87,0,0,0-.74.63L0,1.56A3.34,3.34,0,0,1,1.36.41a4.58,4.58,0,0,1,2-.41A3.92,3.92,0,0,1,5,.31a2.52,2.52,0,0,1,1.1.86,2.23,2.23,0,0,1,.39,1.31,3,3,0,0,1-.29,1.29A5.09,5.09,0,0,1,5.05,5.14L3.12,7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M9.25,8.17A3.48,3.48,0,0,1,8,6.68a5.55,5.55,0,0,1-.46-2.34A5.53,5.53,0,0,1,8,2,3.48,3.48,0,0,1,9.25.52,3.39,3.39,0,0,1,11.11,0,3.34,3.34,0,0,1,13,.52,3.42,3.42,0,0,1,14.25,2a5.38,5.38,0,0,1,.46,2.33,5.4,5.4,0,0,1-.46,2.34A3.42,3.42,0,0,1,13,8.17a3.34,3.34,0,0,1-1.86.52A3.39,3.39,0,0,1,9.25,8.17Zm3.07-1.79a3.77,3.77,0,0,0,.44-2,3.77,3.77,0,0,0-.44-2,1.42,1.42,0,0,0-2.4,0,3.77,3.77,0,0,0-.44,2,3.77,3.77,0,0,0,.44,2,1.42,1.42,0,0,0,2.4,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M21.86,7V8.54H15.52V7.28l3.24-3.06a3.44,3.44,0,0,0,.69-.84,1.55,1.55,0,0,0,.18-.7.93.93,0,0,0-.34-.78,1.59,1.59,0,0,0-1-.27,2.33,2.33,0,0,0-1,.21,1.94,1.94,0,0,0-.74.63l-1.42-.91A3.34,3.34,0,0,1,16.49.41a4.58,4.58,0,0,1,2-.41,4,4,0,0,1,1.64.31,2.54,2.54,0,0,1,1.09.86,2.23,2.23,0,0,1,.39,1.31,3,3,0,0,1-.29,1.29,4.9,4.9,0,0,1-1.12,1.37L18.25,7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M30.24,6.78H28.87V8.54H27V6.78H22.45V5.47l4-5.33h2L24.78,5.2H27V3.62h1.83V5.2h1.37Z\" style=\"fill: #231f20\"/>`,\r\n     2025: `  <path d=\"M6.73,7V8.54H.38V7.28L3.63,4.22a3.44,3.44,0,0,0,.69-.84,1.55,1.55,0,0,0,.18-.7.93.93,0,0,0-.34-.78,1.59,1.59,0,0,0-1-.27,2.33,2.33,0,0,0-1,.21,1.87,1.87,0,0,0-.74.63L0,1.56A3.34,3.34,0,0,1,1.36.41a4.58,4.58,0,0,1,2-.41A3.92,3.92,0,0,1,5,.31a2.52,2.52,0,0,1,1.1.86,2.23,2.23,0,0,1,.39,1.31,3,3,0,0,1-.29,1.29A5.09,5.09,0,0,1,5.05,5.14L3.12,7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M9.25,8.17A3.48,3.48,0,0,1,8,6.68a5.55,5.55,0,0,1-.46-2.34A5.53,5.53,0,0,1,8,2,3.48,3.48,0,0,1,9.25.52,3.39,3.39,0,0,1,11.11,0,3.34,3.34,0,0,1,13,.52,3.42,3.42,0,0,1,14.25,2a5.38,5.38,0,0,1,.46,2.33,5.4,5.4,0,0,1-.46,2.34A3.42,3.42,0,0,1,13,8.17a3.34,3.34,0,0,1-1.86.52A3.39,3.39,0,0,1,9.25,8.17Zm3.07-1.79a3.77,3.77,0,0,0,.44-2,3.77,3.77,0,0,0-.44-2,1.42,1.42,0,0,0-2.4,0,3.77,3.77,0,0,0-.44,2,3.77,3.77,0,0,0,.44,2,1.42,1.42,0,0,0,2.4,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M21.86,7V8.54H15.52V7.28l3.24-3.06a3.44,3.44,0,0,0,.69-.84,1.55,1.55,0,0,0,.18-.7.93.93,0,0,0-.34-.78,1.59,1.59,0,0,0-1-.27,2.33,2.33,0,0,0-1,.21,1.94,1.94,0,0,0-.74.63l-1.42-.91A3.34,3.34,0,0,1,16.49.41a4.58,4.58,0,0,1,2-.41,4,4,0,0,1,1.64.31,2.54,2.54,0,0,1,1.09.86,2.23,2.23,0,0,1,.39,1.31,3,3,0,0,1-.29,1.29,4.9,4.9,0,0,1-1.12,1.37L18.25,7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M28.17,4A2.35,2.35,0,0,1,29,5.9a2.59,2.59,0,0,1-1.56,2.41,4.47,4.47,0,0,1-1.94.38,6.41,6.41,0,0,1-1.74-.24,4.36,4.36,0,0,1-1.46-.66l.77-1.49a3.68,3.68,0,0,0,1.1.56,4.34,4.34,0,0,0,1.29.2,2,2,0,0,0,1.15-.29A.92.92,0,0,0,27.05,6a.89.89,0,0,0-.44-.81,3,3,0,0,0-1.52-.28H22.94L23.38.14H28.5V1.7H25l-.14,1.6h.69A4,4,0,0,1,28.17,4Z\" style=\"fill: #231f20\"/>`,\r\n     2026: ` <path d=\"M6.73,7V8.54H.38V7.28L3.62,4.22a3.3,3.3,0,0,0,.7-.84,1.55,1.55,0,0,0,.18-.7.93.93,0,0,0-.34-.78,1.59,1.59,0,0,0-1-.27,2.33,2.33,0,0,0-1,.21,1.87,1.87,0,0,0-.74.63L0,1.56A3.34,3.34,0,0,1,1.36.41a4.58,4.58,0,0,1,2-.41A3.92,3.92,0,0,1,5,.31a2.52,2.52,0,0,1,1.1.86,2.23,2.23,0,0,1,.39,1.31,3,3,0,0,1-.29,1.29A5.09,5.09,0,0,1,5.05,5.14L3.12,7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M9.25,8.17A3.48,3.48,0,0,1,8,6.68a5.55,5.55,0,0,1-.46-2.34A5.53,5.53,0,0,1,8,2,3.48,3.48,0,0,1,9.25.52,3.39,3.39,0,0,1,11.11,0,3.34,3.34,0,0,1,13,.52,3.42,3.42,0,0,1,14.25,2a5.38,5.38,0,0,1,.46,2.33,5.4,5.4,0,0,1-.46,2.34A3.42,3.42,0,0,1,13,8.17a3.34,3.34,0,0,1-1.86.52A3.39,3.39,0,0,1,9.25,8.17Zm3.07-1.79a3.77,3.77,0,0,0,.44-2,3.77,3.77,0,0,0-.44-2,1.38,1.38,0,0,0-1.21-.66,1.36,1.36,0,0,0-1.19.66,3.77,3.77,0,0,0-.44,2,3.77,3.77,0,0,0,.44,2A1.36,1.36,0,0,0,11.11,7,1.38,1.38,0,0,0,12.32,6.38Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M21.86,7V8.54H15.52V7.28l3.24-3.06a3.44,3.44,0,0,0,.69-.84,1.55,1.55,0,0,0,.18-.7.93.93,0,0,0-.34-.78,1.59,1.59,0,0,0-1-.27,2.33,2.33,0,0,0-1,.21,1.94,1.94,0,0,0-.74.63l-1.42-.91A3.34,3.34,0,0,1,16.49.41a4.58,4.58,0,0,1,2-.41,4,4,0,0,1,1.64.31,2.54,2.54,0,0,1,1.09.86,2.23,2.23,0,0,1,.39,1.31,3,3,0,0,1-.29,1.29,4.9,4.9,0,0,1-1.12,1.37L18.25,7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M28.15,3.6a2.6,2.6,0,0,1,1.05.92,2.49,2.49,0,0,1,.38,1.37,2.64,2.64,0,0,1-.42,1.48,2.76,2.76,0,0,1-1.15,1,3.83,3.83,0,0,1-1.61.34,3.56,3.56,0,0,1-2.76-1.08,4.42,4.42,0,0,1-1-3.09,5.14,5.14,0,0,1,.54-2.44A3.7,3.7,0,0,1,24.69.53,4.61,4.61,0,0,1,26.93,0a5.43,5.43,0,0,1,1.29.15,3.35,3.35,0,0,1,1.05.43L28.55,2A2.76,2.76,0,0,0,27,1.58a2.29,2.29,0,0,0-1.7.63A2.62,2.62,0,0,0,24.61,4a2.8,2.8,0,0,1,2.08-.74A3.22,3.22,0,0,1,28.15,3.6Zm-.84,3.3A1.14,1.14,0,0,0,27.7,6a1.16,1.16,0,0,0-.39-.92,1.52,1.52,0,0,0-1-.34,1.58,1.58,0,0,0-1.05.35,1.16,1.16,0,0,0-.4.91,1.14,1.14,0,0,0,.39.9,1.61,1.61,0,0,0,1.08.35A1.53,1.53,0,0,0,27.31,6.9Z\" style=\"fill: #231f20\"/>`,\r\n     2027: `<path d=\"M6.73,7V8.54H.38V7.28L3.63,4.22a3.44,3.44,0,0,0,.69-.84,1.55,1.55,0,0,0,.18-.7.93.93,0,0,0-.34-.78,1.59,1.59,0,0,0-1-.27,2.33,2.33,0,0,0-1,.21,1.87,1.87,0,0,0-.74.63L0,1.56A3.34,3.34,0,0,1,1.36.41a4.58,4.58,0,0,1,2-.41A3.92,3.92,0,0,1,5,.31a2.52,2.52,0,0,1,1.1.86,2.23,2.23,0,0,1,.39,1.31,3,3,0,0,1-.29,1.29A5.09,5.09,0,0,1,5.05,5.14L3.12,7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M9.25,8.17A3.48,3.48,0,0,1,8,6.68a5.55,5.55,0,0,1-.46-2.34A5.53,5.53,0,0,1,8,2,3.48,3.48,0,0,1,9.25.52,3.39,3.39,0,0,1,11.11,0,3.34,3.34,0,0,1,13,.52,3.42,3.42,0,0,1,14.25,2a5.38,5.38,0,0,1,.46,2.33,5.4,5.4,0,0,1-.46,2.34A3.42,3.42,0,0,1,13,8.17a3.34,3.34,0,0,1-1.86.52A3.39,3.39,0,0,1,9.25,8.17Zm3.07-1.79a3.77,3.77,0,0,0,.44-2,3.77,3.77,0,0,0-.44-2,1.42,1.42,0,0,0-2.4,0,3.77,3.77,0,0,0-.44,2,3.77,3.77,0,0,0,.44,2,1.42,1.42,0,0,0,2.4,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M21.86,7V8.54H15.52V7.28l3.24-3.06a3.44,3.44,0,0,0,.69-.84,1.55,1.55,0,0,0,.18-.7.93.93,0,0,0-.34-.78,1.59,1.59,0,0,0-1-.27,2.33,2.33,0,0,0-1,.21,1.94,1.94,0,0,0-.74.63l-1.42-.91A3.34,3.34,0,0,1,16.49.41a4.58,4.58,0,0,1,2-.41,4,4,0,0,1,1.64.31,2.54,2.54,0,0,1,1.09.86,2.23,2.23,0,0,1,.39,1.31,3,3,0,0,1-.29,1.29,4.9,4.9,0,0,1-1.12,1.37L18.25,7Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M29.22.14V1.4L26.1,8.54H24l3-6.81H24.22V3.1H22.49v-3Z\" style=\"fill: #231f20\"/>`\r\n}\r\n\r\nexport default yearsMP;","const digitsMP = [\r\n     `          <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n          <path d=\"M13.29,5.1V10H12.16V6h-1V5.1Z\" style=\"fill: #231f20\"/>`,\r\n     `   <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M14.37,9.08V10h-3.7V9.26l1.89-1.78A2.09,2.09,0,0,0,13,7a.93.93,0,0,0,.11-.41.54.54,0,0,0-.2-.45A.92.92,0,0,0,12.28,6a1.37,1.37,0,0,0-.58.12,1,1,0,0,0-.43.37l-.83-.53a1.92,1.92,0,0,1,.79-.67A2.67,2.67,0,0,1,12.39,5a2.34,2.34,0,0,1,.95.17A1.43,1.43,0,0,1,14,5.7a1.29,1.29,0,0,1,.23.76,1.72,1.72,0,0,1-.17.75,2.81,2.81,0,0,1-.65.8L12.26,9.08Z\" style=\"fill: #231f20\"/>`,\r\n     `<rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M14,7.57a1.32,1.32,0,0,1,.34.93,1.45,1.45,0,0,1-.22.79,1.6,1.6,0,0,1-.69.58,2.67,2.67,0,0,1-1.12.21,3.91,3.91,0,0,1-1-.13,2.56,2.56,0,0,1-.85-.39l.44-.87a2.21,2.21,0,0,0,.65.33,2.72,2.72,0,0,0,.75.11A1.17,1.17,0,0,0,12.93,9a.53.53,0,0,0,.25-.47c0-.4-.31-.6-.92-.6h-.52V7.15l1-1.14H10.67V5.1H14.1v.73L13,7.09A1.66,1.66,0,0,1,14,7.57Z\" style=\"fill: #231f20\"/>`,\r\n     `  <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M14.65,9h-.8v1H12.74V9H10.11V8.21L12.42,5.1h1.19l-2.15,3h1.32V7.13h1.07v.92h.8Z\" style=\"fill: #231f20\"/>`,\r\n     `     <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M13.9,7.35a1.38,1.38,0,0,1,.49,1.11,1.47,1.47,0,0,1-.9,1.4,2.59,2.59,0,0,1-1.13.22,3.86,3.86,0,0,1-1-.13,2.47,2.47,0,0,1-.85-.39l.45-.87a2.15,2.15,0,0,0,.64.33,2.67,2.67,0,0,0,.75.11A1.11,1.11,0,0,0,13,9a.54.54,0,0,0,.25-.47A.52.52,0,0,0,13,8a1.75,1.75,0,0,0-.89-.16H10.85L11.1,5.1h3V6h-2L12,6.94h.4A2.39,2.39,0,0,1,13.9,7.35Z\" style=\"fill: #231f20\"/>` ,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M13.76,7.12a1.49,1.49,0,0,1,.61.53,1.52,1.52,0,0,1,.22.8,1.45,1.45,0,0,1-.25.86,1.53,1.53,0,0,1-.66.57,2.13,2.13,0,0,1-.95.2,2.06,2.06,0,0,1-1.6-.63,2.54,2.54,0,0,1-.59-1.79,3,3,0,0,1,.32-1.43,2.15,2.15,0,0,1,.88-.91A2.71,2.71,0,0,1,13,5a3.08,3.08,0,0,1,.75.08,2,2,0,0,1,.62.25L14,6.18a1.63,1.63,0,0,0-.92-.24,1.37,1.37,0,0,0-1,.36,1.57,1.57,0,0,0-.39,1.06,1.63,1.63,0,0,1,1.21-.43A1.87,1.87,0,0,1,13.76,7.12ZM13.26,9a.64.64,0,0,0,.23-.53A.66.66,0,0,0,13.26,8a1,1,0,0,0-1.21,0,.7.7,0,0,0,0,1,.92.92,0,0,0,.63.21A.88.88,0,0,0,13.26,9Z\" style=\"fill: #231f20\"/>`,\r\n     `  <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M14.44,5.1v.73L12.62,10H11.39l1.75-4H11.52v.8h-1V5.1Z\" style=\"fill: #231f20\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M14.37,7.9a1.2,1.2,0,0,1,.19.68,1.26,1.26,0,0,1-.25.79,1.67,1.67,0,0,1-.73.53,3,3,0,0,1-1.09.18,3,3,0,0,1-1.08-.18,1.58,1.58,0,0,1-.72-.53,1.26,1.26,0,0,1-.25-.79,1.2,1.2,0,0,1,.19-.68,1.36,1.36,0,0,1,.55-.48A1.13,1.13,0,0,1,10.76,7a1.11,1.11,0,0,1-.15-.58,1.2,1.2,0,0,1,.24-.75,1.49,1.49,0,0,1,.66-.48,2.52,2.52,0,0,1,1-.17,2.5,2.5,0,0,1,1,.17,1.47,1.47,0,0,1,.67.48,1.2,1.2,0,0,1,.24.75,1.11,1.11,0,0,1-.15.58,1.13,1.13,0,0,1-.42.42A1.36,1.36,0,0,1,14.37,7.9Zm-1.2,1.16a.66.66,0,0,0,0-1,1.14,1.14,0,0,0-.68-.19,1.08,1.08,0,0,0-.66.19.61.61,0,0,0-.25.51.6.6,0,0,0,.25.52,1,1,0,0,0,.66.19A1.08,1.08,0,0,0,13.17,9.06ZM11.94,6a.56.56,0,0,0-.2.45.53.53,0,0,0,.2.45.92.92,0,0,0,.55.16.93.93,0,0,0,.56-.16.59.59,0,0,0,0-.9.87.87,0,0,0-.56-.16A.86.86,0,0,0,11.94,6Z\" style=\"fill: #231f20\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M13.88,5.64a2.6,2.6,0,0,1,.58,1.81,3.1,3.1,0,0,1-.31,1.42,2.21,2.21,0,0,1-.88.91,2.78,2.78,0,0,1-1.31.3,3.67,3.67,0,0,1-.75-.08,2,2,0,0,1-.61-.25L11,8.91a1.54,1.54,0,0,0,.92.25,1.3,1.3,0,0,0,1-.37,1.51,1.51,0,0,0,.4-1.06,1.63,1.63,0,0,1-1.22.44A1.87,1.87,0,0,1,11.24,8a1.49,1.49,0,0,1-.61-.53,1.44,1.44,0,0,1-.22-.8,1.45,1.45,0,0,1,.25-.86,1.53,1.53,0,0,1,.66-.57,2.13,2.13,0,0,1,.95-.2A2.09,2.09,0,0,1,13.88,5.64ZM13,7.12a.69.69,0,0,0,.23-.53A.67.67,0,0,0,13,6.07a.88.88,0,0,0-.62-.21.9.9,0,0,0-.6.2.67.67,0,0,0-.22.53.69.69,0,0,0,.22.54.93.93,0,0,0,.61.2A.89.89,0,0,0,13,7.12Z\" style=\"fill: #231f20\"/>`,\r\n     `   <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M10.91,5.1V10H9.78V6h-1V5.1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M12.78,9.78A2.05,2.05,0,0,1,12,8.91a3.14,3.14,0,0,1-.27-1.36A3.14,3.14,0,0,1,12,6.19a2.05,2.05,0,0,1,.74-.87A2,2,0,0,1,13.87,5a2,2,0,0,1,1.08.3,2,2,0,0,1,.75.87A3.14,3.14,0,0,1,16,7.55a3.14,3.14,0,0,1-.27,1.36,2,2,0,0,1-.75.87,2,2,0,0,1-1.08.3A2,2,0,0,1,12.78,9.78Zm1.79-1a2.19,2.19,0,0,0,.26-1.19,2.19,2.19,0,0,0-.26-1.19.82.82,0,0,0-1.4,0,2.2,2.2,0,0,0-.25,1.19,2.2,2.2,0,0,0,.25,1.19.83.83,0,0,0,1.4,0Z\" style=\"fill: #231f20\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.92,5.1V10H10.78V6h-1V5.1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M14.66,5.1V10H13.53V6h-1V5.1Z\" style=\"fill: #231f20\"/>`,\r\n     `  <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.23,5.1V10H10.09V6h-1V5.1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M15.74,9.08V10H12V9.26l1.89-1.78a2.09,2.09,0,0,0,.4-.49.93.93,0,0,0,.11-.41.54.54,0,0,0-.2-.45A.89.89,0,0,0,13.66,6a1.41,1.41,0,0,0-.59.12,1.08,1.08,0,0,0-.43.37l-.83-.53a2,2,0,0,1,.8-.67A2.63,2.63,0,0,1,13.76,5a2.42,2.42,0,0,1,1,.17,1.46,1.46,0,0,1,.63.51,1.29,1.29,0,0,1,.23.76,1.72,1.72,0,0,1-.17.75,2.81,2.81,0,0,1-.65.8L13.63,9.08Z\" style=\"fill: #231f20\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.22,5.1V10H10.08V6h-1V5.1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M15.35,7.57a1.32,1.32,0,0,1,.34.93,1.45,1.45,0,0,1-.22.79,1.63,1.63,0,0,1-.68.58,2.71,2.71,0,0,1-1.13.21,4,4,0,0,1-1-.13,2.66,2.66,0,0,1-.85-.39l.44-.87a2.34,2.34,0,0,0,.65.33,2.78,2.78,0,0,0,.75.11A1.22,1.22,0,0,0,14.31,9a.54.54,0,0,0,.24-.47c0-.4-.3-.6-.92-.6h-.51V7.15l1-1.14H12V5.1h3.43v.73L14.36,7.09A1.66,1.66,0,0,1,15.35,7.57Z\" style=\"fill: #231f20\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M10.88,5.1V10H9.75V6h-1V5.1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M16.22,9h-.8v1h-1.1V9H11.68V8.21L14,5.1h1.19L13,8.05h1.31V7.13h1.07v.92h.8Z\" style=\"fill: #231f20\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.21,5.1V10H10.07V6h-1V5.1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M15.27,7.35a1.39,1.39,0,0,1,.5,1.11,1.5,1.5,0,0,1-.91,1.4,2.56,2.56,0,0,1-1.13.22,3.86,3.86,0,0,1-1-.13,2.56,2.56,0,0,1-.85-.39l.45-.87A2.15,2.15,0,0,0,13,9a2.67,2.67,0,0,0,.75.11A1.09,1.09,0,0,0,14.37,9a.52.52,0,0,0,.25-.47A.52.52,0,0,0,14.36,8a1.71,1.71,0,0,0-.88-.16H12.22l.26-2.76h3V6h-2l-.08.93h.4A2.39,2.39,0,0,1,15.27,7.35Z\" style=\"fill: #231f20\"/>`,\r\n     `     <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.06,5.1V10H9.93V6H9V5.1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M15.13,7.12A1.42,1.42,0,0,1,16,8.45a1.52,1.52,0,0,1-.24.86,1.62,1.62,0,0,1-.67.57,2.09,2.09,0,0,1-.94.2,2.06,2.06,0,0,1-1.61-.63,2.54,2.54,0,0,1-.58-1.79,3,3,0,0,1,.31-1.43,2.15,2.15,0,0,1,.88-.91,2.71,2.71,0,0,1,1.3-.3,3.11,3.11,0,0,1,.76.08,2,2,0,0,1,.61.25l-.42.83a1.63,1.63,0,0,0-.92-.24,1.33,1.33,0,0,0-1,.36,1.53,1.53,0,0,0-.4,1.06,1.64,1.64,0,0,1,1.21-.43A1.87,1.87,0,0,1,15.13,7.12ZM14.64,9a.67.67,0,0,0,.22-.53A.69.69,0,0,0,14.64,8a.93.93,0,0,0-.61-.2.89.89,0,0,0-.61.21.7.7,0,0,0,0,1,.92.92,0,0,0,.63.21A.9.9,0,0,0,14.64,9Z\" style=\"fill: #231f20\"/>`,\r\n     `    <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.12,5.1V10H10V6H9V5.1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M15.81,5.1v.73L14,10H12.76l1.76-4H12.89v.8h-1V5.1Z\" style=\"fill: #231f20\"/>`,\r\n     `  <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11,5.1V10H9.85V6h-1V5.1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M15.75,7.9a1.29,1.29,0,0,1,.19.68,1.27,1.27,0,0,1-.26.79A1.61,1.61,0,0,1,15,9.9a3.36,3.36,0,0,1-2.17,0,1.58,1.58,0,0,1-.72-.53,1.26,1.26,0,0,1-.25-.79A1.2,1.2,0,0,1,12,7.9a1.36,1.36,0,0,1,.55-.48A1.21,1.21,0,0,1,12.13,7,1.11,1.11,0,0,1,12,6.42a1.2,1.2,0,0,1,.24-.75,1.47,1.47,0,0,1,.67-.48,2.49,2.49,0,0,1,1-.17,2.57,2.57,0,0,1,1,.17,1.44,1.44,0,0,1,.66.48A1.28,1.28,0,0,1,15.62,7a1.16,1.16,0,0,1-.43.42A1.39,1.39,0,0,1,15.75,7.9ZM14.54,9.06a.66.66,0,0,0,0-1,1.11,1.11,0,0,0-.67-.19A1.09,1.09,0,0,0,13.2,8a.63.63,0,0,0-.24.51.62.62,0,0,0,.24.52,1,1,0,0,0,.67.19A1,1,0,0,0,14.54,9.06ZM13.32,6a.54.54,0,0,0-.21.45.56.56,0,0,0,.2.45.93.93,0,0,0,.56.16.9.9,0,0,0,.55-.16.57.57,0,0,0,0-.9,1,1,0,0,0-1.1,0Z\" style=\"fill: #231f20\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.06,5.1V10H9.93V6H9V5.1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M15.25,5.64a2.6,2.6,0,0,1,.58,1.81,3.1,3.1,0,0,1-.31,1.42,2.15,2.15,0,0,1-.88.91,2.78,2.78,0,0,1-1.31.3,3.67,3.67,0,0,1-.75-.08A2,2,0,0,1,12,9.75l.42-.84a1.56,1.56,0,0,0,.92.25,1.34,1.34,0,0,0,1-.37,1.55,1.55,0,0,0,.39-1.06,1.63,1.63,0,0,1-1.22.44A1.83,1.83,0,0,1,12.62,8a1.45,1.45,0,0,1-.84-1.33A1.45,1.45,0,0,1,12,5.79a1.5,1.5,0,0,1,.67-.57,2.06,2.06,0,0,1,.94-.2A2.09,2.09,0,0,1,15.25,5.64Zm-.92,1.48a.69.69,0,0,0,.23-.53.64.64,0,0,0-.23-.52.88.88,0,0,0-.62-.21.86.86,0,0,0-.59.2.64.64,0,0,0-.23.53.66.66,0,0,0,.23.54,1,1,0,0,0,1.21,0Z\" style=\"fill: #231f20\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12,9.08V10H8.3V9.26l1.89-1.78a2.09,2.09,0,0,0,.4-.49.93.93,0,0,0,.11-.41.54.54,0,0,0-.2-.45A.9.9,0,0,0,9.91,6a1.37,1.37,0,0,0-.58.12,1.08,1.08,0,0,0-.43.37l-.83-.53a1.92,1.92,0,0,1,.79-.67A2.67,2.67,0,0,1,10,5a2.34,2.34,0,0,1,1,.17,1.43,1.43,0,0,1,.64.51,1.29,1.29,0,0,1,.23.76,1.72,1.72,0,0,1-.17.75A2.81,2.81,0,0,1,11,8L9.89,9.08Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M13.47,9.78a2,2,0,0,1-.75-.87,3.14,3.14,0,0,1-.26-1.36,3.14,3.14,0,0,1,.26-1.36,2,2,0,0,1,3.67,0,3.14,3.14,0,0,1,.27,1.36,3.14,3.14,0,0,1-.27,1.36,2.05,2.05,0,0,1-2.92.87Zm1.79-1a2.2,2.2,0,0,0,.25-1.19,2.2,2.2,0,0,0-.25-1.19A.81.81,0,0,0,14.55,6a.79.79,0,0,0-.69.39,2.19,2.19,0,0,0-.26,1.19,2.19,2.19,0,0,0,.26,1.19.78.78,0,0,0,.69.38A.8.8,0,0,0,15.26,8.74Z\" style=\"fill: #231f20\"/>`,\r\n     `   <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M13,9.08V10H9.29V9.26l1.89-1.78A2.18,2.18,0,0,0,11.59,7a.93.93,0,0,0,.11-.41.54.54,0,0,0-.2-.45A.92.92,0,0,0,10.91,6a1.37,1.37,0,0,0-.58.12,1,1,0,0,0-.43.37l-.83-.53a1.92,1.92,0,0,1,.79-.67A2.67,2.67,0,0,1,11,5a2.34,2.34,0,0,1,1,.17,1.43,1.43,0,0,1,.64.51,1.29,1.29,0,0,1,.23.76,1.72,1.72,0,0,1-.17.75A2.81,2.81,0,0,1,12,8L10.89,9.08Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M15.36,5.1V10H14.22V6h-1V5.1Z\" style=\"fill: #231f20\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.3,9.08V10H8.6V9.26l1.89-1.78A2.18,2.18,0,0,0,10.9,7a.91.91,0,0,0,.1-.41.51.51,0,0,0-.2-.45A.89.89,0,0,0,10.22,6a1.34,1.34,0,0,0-.58.12,1,1,0,0,0-.44.37l-.82-.53a1.86,1.86,0,0,1,.79-.67A2.63,2.63,0,0,1,10.32,5a2.35,2.35,0,0,1,1,.17,1.55,1.55,0,0,1,.64.51,1.28,1.28,0,0,1,.22.76,1.71,1.71,0,0,1-.16.75,2.87,2.87,0,0,1-.66.8L10.2,9.08Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M16.43,9.08V10h-3.7V9.26l1.89-1.78A2.18,2.18,0,0,0,15,7a.91.91,0,0,0,.1-.41.51.51,0,0,0-.2-.45A.89.89,0,0,0,14.35,6a1.34,1.34,0,0,0-.58.12,1,1,0,0,0-.44.37l-.82-.53a1.86,1.86,0,0,1,.79-.67A2.63,2.63,0,0,1,14.45,5a2.35,2.35,0,0,1,1,.17,1.55,1.55,0,0,1,.64.51,1.28,1.28,0,0,1,.22.76,1.59,1.59,0,0,1-.17.75,2.64,2.64,0,0,1-.65.8L14.33,9.08Z\" style=\"fill: #231f20\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.3,9.08V10H8.59V9.26l1.89-1.78A2.18,2.18,0,0,0,10.89,7a.91.91,0,0,0,.1-.41.53.53,0,0,0-.19-.45A.92.92,0,0,0,10.21,6a1.37,1.37,0,0,0-.58.12,1,1,0,0,0-.43.37l-.83-.53a1.86,1.86,0,0,1,.79-.67A2.67,2.67,0,0,1,10.32,5a2.34,2.34,0,0,1,.95.17,1.49,1.49,0,0,1,.64.51,1.29,1.29,0,0,1,.23.76,1.72,1.72,0,0,1-.17.75,2.81,2.81,0,0,1-.65.8L10.19,9.08Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M16,7.57a1.32,1.32,0,0,1,.34.93,1.45,1.45,0,0,1-.22.79,1.63,1.63,0,0,1-.68.58,2.71,2.71,0,0,1-1.13.21,3.83,3.83,0,0,1-1-.13,2.47,2.47,0,0,1-.85-.39l.44-.87a2.15,2.15,0,0,0,.64.33,2.79,2.79,0,0,0,.76.11A1.19,1.19,0,0,0,15,9a.54.54,0,0,0,.24-.47c0-.4-.3-.6-.91-.6h-.52V7.15l1-1.14H12.73V5.1h3.43v.73L15.05,7.09A1.66,1.66,0,0,1,16,7.57Z\" style=\"fill: #231f20\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12,9.08V10H8.29V9.26l1.89-1.78A2.18,2.18,0,0,0,10.59,7a.91.91,0,0,0,.1-.41.54.54,0,0,0-.2-.45A.89.89,0,0,0,9.91,6a1.34,1.34,0,0,0-.58.12,1,1,0,0,0-.44.37l-.82-.53a1.86,1.86,0,0,1,.79-.67A2.63,2.63,0,0,1,10,5a2.39,2.39,0,0,1,1,.17,1.46,1.46,0,0,1,.63.51,1.22,1.22,0,0,1,.23.76,1.59,1.59,0,0,1-.17.75A2.81,2.81,0,0,1,11,8L9.89,9.08Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M16.88,9h-.8v1H15V9H12.34V8.21L14.65,5.1h1.19l-2.15,3H15V7.13h1.07v.92h.8Z\" style=\"fill: #231f20\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.29,9.08V10H8.58V9.26l1.89-1.78A2.18,2.18,0,0,0,10.88,7a.91.91,0,0,0,.1-.41.53.53,0,0,0-.19-.45A.92.92,0,0,0,10.2,6a1.37,1.37,0,0,0-.58.12,1,1,0,0,0-.43.37l-.83-.53a1.86,1.86,0,0,1,.79-.67A2.67,2.67,0,0,1,10.31,5a2.34,2.34,0,0,1,.95.17,1.49,1.49,0,0,1,.64.51,1.29,1.29,0,0,1,.23.76,1.72,1.72,0,0,1-.17.75,2.81,2.81,0,0,1-.65.8L10.18,9.08Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M16,7.35a1.39,1.39,0,0,1,.5,1.11,1.56,1.56,0,0,1-.23.82,1.51,1.51,0,0,1-.68.58,2.53,2.53,0,0,1-1.13.22,4,4,0,0,1-1-.13,2.66,2.66,0,0,1-.85-.39L13,8.69a2.28,2.28,0,0,0,.64.33,2.78,2.78,0,0,0,.75.11A1.14,1.14,0,0,0,15.07,9a.53.53,0,0,0,.24-.47A.51.51,0,0,0,15.05,8a1.71,1.71,0,0,0-.88-.16H12.92l.25-2.76h3V6H14.11L14,6.94h.4A2.34,2.34,0,0,1,16,7.35Z\" style=\"fill: #231f20\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.15,9.08V10H8.44V9.26l1.89-1.78A2.18,2.18,0,0,0,10.74,7a.91.91,0,0,0,.1-.41.53.53,0,0,0-.19-.45A.92.92,0,0,0,10.06,6a1.37,1.37,0,0,0-.58.12,1,1,0,0,0-.43.37l-.83-.53A1.86,1.86,0,0,1,9,5.26,2.67,2.67,0,0,1,10.17,5a2.34,2.34,0,0,1,.95.17,1.49,1.49,0,0,1,.64.51,1.29,1.29,0,0,1,.23.76,1.72,1.72,0,0,1-.17.75,2.81,2.81,0,0,1-.65.8L10,9.08Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M15.81,7.12a1.45,1.45,0,0,1,.84,1.33,1.45,1.45,0,0,1-.25.86,1.5,1.5,0,0,1-.67.57,2.06,2.06,0,0,1-.94.2,2.09,2.09,0,0,1-1.61-.63,2.58,2.58,0,0,1-.58-1.79,3,3,0,0,1,.32-1.43,2.19,2.19,0,0,1,.87-.91A2.78,2.78,0,0,1,15.1,5a3.08,3.08,0,0,1,.75.08,2.06,2.06,0,0,1,.62.25l-.42.83a1.66,1.66,0,0,0-.92-.24,1.34,1.34,0,0,0-1,.36,1.57,1.57,0,0,0-.39,1.06A1.63,1.63,0,0,1,15,6.93,1.83,1.83,0,0,1,15.81,7.12ZM15.32,9a.67.67,0,0,0,.23-.53A.69.69,0,0,0,15.32,8a1,1,0,0,0-1.21,0,.7.7,0,0,0,0,1,.89.89,0,0,0,.63.21A.88.88,0,0,0,15.32,9Z\" style=\"fill: #231f20\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.21,9.08V10H8.5V9.26l1.89-1.78A2.18,2.18,0,0,0,10.8,7a.91.91,0,0,0,.1-.41.53.53,0,0,0-.19-.45A.92.92,0,0,0,10.12,6a1.37,1.37,0,0,0-.58.12,1,1,0,0,0-.43.37l-.83-.53a1.86,1.86,0,0,1,.79-.67A2.67,2.67,0,0,1,10.23,5a2.34,2.34,0,0,1,.95.17,1.49,1.49,0,0,1,.64.51,1.28,1.28,0,0,1,.22.76,1.71,1.71,0,0,1-.16.75,2.81,2.81,0,0,1-.65.8L10.1,9.08Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M16.5,5.1v.73L14.68,10H13.45L15.2,6H13.58v.8h-1V5.1Z\" style=\"fill: #231f20\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.06,9.08V10H8.36V9.26l1.89-1.78a2.09,2.09,0,0,0,.4-.49.93.93,0,0,0,.11-.41.54.54,0,0,0-.2-.45A.92.92,0,0,0,10,6a1.37,1.37,0,0,0-.58.12A1.08,1.08,0,0,0,9,6.46l-.83-.53a1.92,1.92,0,0,1,.79-.67A2.67,2.67,0,0,1,10.08,5a2.34,2.34,0,0,1,.95.17,1.43,1.43,0,0,1,.64.51,1.29,1.29,0,0,1,.23.76,1.72,1.72,0,0,1-.17.75,2.81,2.81,0,0,1-.65.8L10,9.08Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M16.44,7.9a1.2,1.2,0,0,1,.19.68,1.27,1.27,0,0,1-.26.79,1.56,1.56,0,0,1-.73.53,3.33,3.33,0,0,1-2.16,0,1.58,1.58,0,0,1-.72-.53,1.32,1.32,0,0,1-.07-1.47,1.36,1.36,0,0,1,.55-.48A1.21,1.21,0,0,1,12.82,7a1.11,1.11,0,0,1-.15-.58,1.2,1.2,0,0,1,.24-.75,1.47,1.47,0,0,1,.67-.48,2.49,2.49,0,0,1,1-.17,2.57,2.57,0,0,1,1,.17,1.47,1.47,0,0,1,.67.48,1.2,1.2,0,0,1,.24.75,1.11,1.11,0,0,1-.15.58,1.16,1.16,0,0,1-.43.42A1.39,1.39,0,0,1,16.44,7.9ZM15.23,9.06a.66.66,0,0,0,0-1,1.11,1.11,0,0,0-.67-.19,1.13,1.13,0,0,0-.67.19.63.63,0,0,0-.24.51.62.62,0,0,0,.24.52,1.07,1.07,0,0,0,.67.19A1,1,0,0,0,15.23,9.06ZM14,6a.54.54,0,0,0-.21.45.56.56,0,0,0,.2.45,1.06,1.06,0,0,0,1.12,0,.59.59,0,0,0,0-.9.89.89,0,0,0-.56-.16A.86.86,0,0,0,14,6Z\" style=\"fill: #231f20\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.14,9.08V10H8.44V9.26l1.89-1.78a2.09,2.09,0,0,0,.4-.49.93.93,0,0,0,.11-.41.54.54,0,0,0-.2-.45A.92.92,0,0,0,10.05,6a1.4,1.4,0,0,0-.58.12A1.08,1.08,0,0,0,9,6.46l-.83-.53A1.92,1.92,0,0,1,9,5.26,2.67,2.67,0,0,1,10.16,5a2.34,2.34,0,0,1,.95.17,1.43,1.43,0,0,1,.64.51,1.29,1.29,0,0,1,.23.76,1.72,1.72,0,0,1-.17.75,2.81,2.81,0,0,1-.65.8L10,9.08Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M15.94,5.64a2.56,2.56,0,0,1,.58,1.81,3,3,0,0,1-.31,1.42,2.15,2.15,0,0,1-.88.91,2.75,2.75,0,0,1-1.31.3,3.67,3.67,0,0,1-.75-.08,2.11,2.11,0,0,1-.61-.25l.42-.84a1.56,1.56,0,0,0,.92.25,1.3,1.3,0,0,0,1-.37,1.55,1.55,0,0,0,.39-1.06,1.62,1.62,0,0,1-1.22.44A1.83,1.83,0,0,1,13.31,8a1.42,1.42,0,0,1-.83-1.33,1.52,1.52,0,0,1,.24-.86,1.56,1.56,0,0,1,.67-.57,2.06,2.06,0,0,1,.94-.2A2.07,2.07,0,0,1,15.94,5.64ZM15,7.12a.73.73,0,0,0,0-1,.89.89,0,0,0-.63-.21.88.88,0,0,0-.59.2.67.67,0,0,0-.23.53.69.69,0,0,0,.23.54,1,1,0,0,0,1.21,0Z\" style=\"fill: #231f20\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.6,7.57a1.32,1.32,0,0,1,.34.93,1.45,1.45,0,0,1-.22.79,1.63,1.63,0,0,1-.68.58,2.71,2.71,0,0,1-1.13.21,3.83,3.83,0,0,1-1-.13A2.62,2.62,0,0,1,8,9.56l.45-.87A2.15,2.15,0,0,0,9.13,9a2.79,2.79,0,0,0,.76.11A1.21,1.21,0,0,0,10.56,9a.54.54,0,0,0,.24-.47c0-.4-.3-.6-.91-.6H9.37V7.15l1-1.14H8.29V5.1h3.43v.73L10.61,7.09A1.66,1.66,0,0,1,11.6,7.57Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M13.48,9.78a2.05,2.05,0,0,1-.74-.87,3.14,3.14,0,0,1-.27-1.36,3.14,3.14,0,0,1,.27-1.36,2.05,2.05,0,0,1,.74-.87A2,2,0,0,1,14.57,5a2,2,0,0,1,1.08.3,2,2,0,0,1,.75.87,3.14,3.14,0,0,1,.27,1.36,3.14,3.14,0,0,1-.27,1.36,2,2,0,0,1-.75.87,2,2,0,0,1-1.08.3A2,2,0,0,1,13.48,9.78Zm1.79-1a2.19,2.19,0,0,0,.26-1.19,2.19,2.19,0,0,0-.26-1.19.82.82,0,0,0-1.4,0,2.2,2.2,0,0,0-.25,1.19,2.2,2.2,0,0,0,.25,1.19.83.83,0,0,0,1.4,0Z\" style=\"fill: #231f20\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.6,7.57A1.33,1.33,0,0,1,13,8.5a1.46,1.46,0,0,1-.23.79,1.57,1.57,0,0,1-.68.58,2.67,2.67,0,0,1-1.12.21,3.86,3.86,0,0,1-1-.13,2.56,2.56,0,0,1-.85-.39l.44-.87a2.21,2.21,0,0,0,.65.33,2.67,2.67,0,0,0,.75.11A1.19,1.19,0,0,0,11.56,9a.53.53,0,0,0,.25-.47c0-.4-.31-.6-.92-.6h-.52V7.15l1-1.14H9.29V5.1h3.43v.73l-1.1,1.26A1.6,1.6,0,0,1,12.6,7.57Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M15.36,5.1V10H14.23V6h-1V5.1Z\" style=\"fill: #231f20\"/>`\r\n]\r\n\r\nexport default digitsMP;","const secondaryDigitsMP = [\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M13,5.1V10h-.69V5.71H11.18V5.1Z\" style=\"fill: #999\"/>`,\r\n     `\r\n      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M14.21,9.39V10H10.69V9.52l2-1.92A2.31,2.31,0,0,0,13.18,7a1.2,1.2,0,0,0,.13-.51.72.72,0,0,0-.27-.6,1.25,1.25,0,0,0-.78-.21A1.51,1.51,0,0,0,11,6.2l-.48-.41a1.87,1.87,0,0,1,.76-.55,2.64,2.64,0,0,1,1-.2,1.91,1.91,0,0,1,1.22.37,1.23,1.23,0,0,1,.45,1,1.7,1.7,0,0,1-.16.74,3.08,3.08,0,0,1-.64.8L11.7,9.39Z\" style=\"fill: #999\"/>`,\r\n     `   <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M13.74,7.6a1.3,1.3,0,0,1,.38,1,1.43,1.43,0,0,1-.21.76,1.54,1.54,0,0,1-.63.54,2.41,2.41,0,0,1-1,.2,3.44,3.44,0,0,1-1-.16,2.23,2.23,0,0,1-.79-.44l.33-.55a1.81,1.81,0,0,0,.64.38,2.54,2.54,0,0,0,.83.14,1.32,1.32,0,0,0,.85-.23.73.73,0,0,0,.31-.63.75.75,0,0,0-.3-.64,1.6,1.6,0,0,0-.91-.22h-.4V7.22l1.24-1.51H10.69V5.1h3.23v.48L12.64,7.16A1.71,1.71,0,0,1,13.74,7.6Z\" style=\"fill: #999\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M14.69,8.8h-.93V10h-.68V8.8H10.35V8.31L12.86,5.1h.76l-2.4,3.09H13.1V7.13h.66V8.19h.93Z\" style=\"fill: #999\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M13.7,7.45a1.29,1.29,0,0,1,.49,1.08,1.47,1.47,0,0,1-.21.78,1.4,1.4,0,0,1-.62.55,2.41,2.41,0,0,1-1,.2,3.44,3.44,0,0,1-1-.16,2.23,2.23,0,0,1-.79-.44l.32-.55a1.91,1.91,0,0,0,.64.38,2.54,2.54,0,0,0,.83.14,1.44,1.44,0,0,0,.86-.23.77.77,0,0,0,.3-.64.74.74,0,0,0-.34-.67A2.11,2.11,0,0,0,12,7.66H10.89l.26-2.56h2.77v.61H11.74l-.13,1.34h.54A2.44,2.44,0,0,1,13.7,7.45Z\" style=\"fill: #999\"/>`,\r\n     `    <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M13.58,7.21a1.33,1.33,0,0,1,.6.52,1.35,1.35,0,0,1,.22.78,1.38,1.38,0,0,1-.23.81,1.48,1.48,0,0,1-.62.54,2,2,0,0,1-.88.2,1.91,1.91,0,0,1-1.53-.64,2.79,2.79,0,0,1-.53-1.81,3,3,0,0,1,.29-1.39,2,2,0,0,1,.81-.88A2.39,2.39,0,0,1,12.92,5a3,3,0,0,1,.68.08,1.9,1.9,0,0,1,.54.21l-.26.55a1.66,1.66,0,0,0-.94-.23,1.53,1.53,0,0,0-1.2.47,1.94,1.94,0,0,0-.43,1.37v.18a1.37,1.37,0,0,1,.58-.48A2,2,0,0,1,12.72,7,2,2,0,0,1,13.58,7.21Zm-.16,2a.94.94,0,0,0,0-1.38,1.26,1.26,0,0,0-.82-.26,1.21,1.21,0,0,0-.58.13,1,1,0,0,0-.4.34.85.85,0,0,0-.15.48.9.9,0,0,0,.14.48,1,1,0,0,0,.4.34,1.36,1.36,0,0,0,.63.13A1.17,1.17,0,0,0,13.42,9.23Z\" style=\"fill: #999\"/>`,\r\n     `   <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M14.24,5.1v.48l-2,4.42h-.74l1.94-4.29H11.21v.87h-.67V5.1Z\" style=\"fill: #999\"/>`,\r\n     `    <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M14.17,7.89a1.16,1.16,0,0,1,.22.72,1.26,1.26,0,0,1-.24.77,1.48,1.48,0,0,1-.68.5,2.71,2.71,0,0,1-1,.18,2.67,2.67,0,0,1-1-.18,1.45,1.45,0,0,1-.67-.5,1.26,1.26,0,0,1-.24-.77,1.16,1.16,0,0,1,.22-.72,1.41,1.41,0,0,1,.64-.46A1.16,1.16,0,0,1,10.85,7a1.07,1.07,0,0,1-.18-.63,1.19,1.19,0,0,1,.22-.7,1.48,1.48,0,0,1,.62-.47,2.78,2.78,0,0,1,1.86,0,1.37,1.37,0,0,1,.62.47,1.12,1.12,0,0,1,.22.7A1.1,1.1,0,0,1,14,7a1.24,1.24,0,0,1-.52.43A1.45,1.45,0,0,1,14.17,7.89Zm-.82,1.36a.76.76,0,0,0,.34-.66A.73.73,0,0,0,13.35,8a1.61,1.61,0,0,0-.91-.23,1.59,1.59,0,0,0-.91.23.75.75,0,0,0-.33.64.77.77,0,0,0,.33.66,1.51,1.51,0,0,0,.91.24A1.53,1.53,0,0,0,13.35,9.25Zm-1.7-3.43a.7.7,0,0,0-.28.58.68.68,0,0,0,.28.58,1.3,1.3,0,0,0,.79.21,1.36,1.36,0,0,0,.8-.21.72.72,0,0,0,0-1.16,1.34,1.34,0,0,0-.79-.21A1.32,1.32,0,0,0,11.65,5.82Z\" style=\"fill: #999\"/>`,\r\n     `    <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M13.72,5.68a2.73,2.73,0,0,1,.53,1.81A3,3,0,0,1,14,8.88a2,2,0,0,1-.81.88,2.39,2.39,0,0,1-1.21.3,3,3,0,0,1-.68-.08,1.9,1.9,0,0,1-.54-.21L11,9.22a1.69,1.69,0,0,0,.95.23A1.5,1.5,0,0,0,13.12,9a1.94,1.94,0,0,0,.43-1.37V7.43a1.31,1.31,0,0,1-.58.48,2,2,0,0,1-.83.16,2.05,2.05,0,0,1-.87-.18,1.36,1.36,0,0,1-.59-.52,1.45,1.45,0,0,1-.21-.78,1.45,1.45,0,0,1,.22-.81,1.62,1.62,0,0,1,.62-.54A2,2,0,0,1,12.2,5,1.9,1.9,0,0,1,13.72,5.68Zm-.87,1.7a1,1,0,0,0,.4-.34.92.92,0,0,0,.14-.48.89.89,0,0,0-.13-.48,1,1,0,0,0-.4-.34,1.41,1.41,0,0,0-.64-.13,1.17,1.17,0,0,0-.78.26.85.85,0,0,0-.29.69.86.86,0,0,0,.3.69,1.21,1.21,0,0,0,.81.26A1.28,1.28,0,0,0,12.85,7.38Z\" style=\"fill: #999\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M10.61,5.1V10h-.7V5.71H8.81V5.1Z\" style=\"fill: #999\"/>\r\n      <path d=\"M12.65,9.76a2,2,0,0,1-.71-.87,3.05,3.05,0,0,1-.26-1.34,3.05,3.05,0,0,1,.26-1.34,2,2,0,0,1,.71-.87,1.9,1.9,0,0,1,2,0,2,2,0,0,1,.72.87,3.21,3.21,0,0,1,.25,1.34,3.21,3.21,0,0,1-.25,1.34,2,2,0,0,1-.72.87,1.9,1.9,0,0,1-2,0Zm2-.81A2.32,2.32,0,0,0,15,7.55a2.32,2.32,0,0,0-.35-1.4,1.11,1.11,0,0,0-.94-.48,1.12,1.12,0,0,0-.95.48,2.39,2.39,0,0,0-.35,1.4A2.39,2.39,0,0,0,12.73,9a1.12,1.12,0,0,0,.95.48A1.11,1.11,0,0,0,14.62,9Z\" style=\"fill: #999\"/>`,\r\n     `     <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.61,5.1V10h-.69V5.71H9.81V5.1Z\" style=\"fill: #999\"/>\r\n      <path d=\"M14.2,5.1V10h-.69V5.71H12.4V5.1Z\" style=\"fill: #999\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M10.92,5.1V10h-.69V5.71H9.12V5.1Z\" style=\"fill: #999\"/>\r\n      <path d=\"M15.43,9.39V10H11.91V9.52l2-1.92A2.54,2.54,0,0,0,14.4,7a1.19,1.19,0,0,0,.12-.51.72.72,0,0,0-.27-.6,1.22,1.22,0,0,0-.77-.21,1.51,1.51,0,0,0-1.25.53l-.48-.41a1.83,1.83,0,0,1,.75-.55,2.68,2.68,0,0,1,1-.2,1.94,1.94,0,0,1,1.23.37,1.23,1.23,0,0,1,.45,1,1.58,1.58,0,0,1-.17.74,3,3,0,0,1-.63.8l-1.5,1.44Z\" style=\"fill: #999\"/>`,\r\n     `    <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M10.91,5.1V10h-.69V5.71H9.11V5.1Z\" style=\"fill: #999\"/>\r\n      <path d=\"M15,7.6a1.3,1.3,0,0,1,.37,1,1.51,1.51,0,0,1-.2.76,1.6,1.6,0,0,1-.63.54,2.41,2.41,0,0,1-1,.2,3.39,3.39,0,0,1-1-.16,2.23,2.23,0,0,1-.79-.44L12,8.91a2,2,0,0,0,.65.38,2.54,2.54,0,0,0,.83.14,1.34,1.34,0,0,0,.85-.23.82.82,0,0,0,0-1.27,1.58,1.58,0,0,0-.91-.22H13V7.22l1.23-1.51H11.9V5.1h3.24v.48L13.86,7.16A1.71,1.71,0,0,1,15,7.6Z\" style=\"fill: #999\"/>`,\r\n     `      <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M10.57,5.1V10H9.88V5.71H8.77V5.1Z\" style=\"fill: #999\"/>\r\n      <path d=\"M15.91,8.8H15V10h-.68V8.8H11.57V8.31L14.08,5.1h.75l-2.4,3.09h1.89V7.13H15V8.19h.94Z\" style=\"fill: #999\"/>`,\r\n     `     <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M10.9,5.1V10h-.69V5.71H9.1V5.1Z\" style=\"fill: #999\"/>\r\n      <path d=\"M14.91,7.45a1.3,1.3,0,0,1,.5,1.08,1.43,1.43,0,0,1-.83,1.33,2.42,2.42,0,0,1-1,.2,3.37,3.37,0,0,1-1-.16,2.28,2.28,0,0,1-.8-.44l.33-.55a1.81,1.81,0,0,0,.64.38,2.54,2.54,0,0,0,.83.14,1.39,1.39,0,0,0,.85-.23.76.76,0,0,0,.31-.64.74.74,0,0,0-.34-.67,2.13,2.13,0,0,0-1.15-.23H12.11l.26-2.56h2.77v.61H13l-.13,1.34h.54A2.39,2.39,0,0,1,14.91,7.45Z\" style=\"fill: #999\"/>`,\r\n     `   <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M10.75,5.1V10h-.69V5.71H9V5.1Z\" style=\"fill: #999\"/>\r\n      <path d=\"M14.8,7.21a1.33,1.33,0,0,1,.6.52,1.35,1.35,0,0,1,.22.78,1.45,1.45,0,0,1-.23.81,1.48,1.48,0,0,1-.62.54,2,2,0,0,1-.89.2,1.89,1.89,0,0,1-1.52-.64,2.73,2.73,0,0,1-.54-1.81,3.1,3.1,0,0,1,.29-1.39,2.06,2.06,0,0,1,.82-.88A2.36,2.36,0,0,1,14.14,5a2.86,2.86,0,0,1,.67.08,2,2,0,0,1,.55.21l-.27.55a1.6,1.6,0,0,0-.93-.23,1.53,1.53,0,0,0-1.2.47,1.94,1.94,0,0,0-.44,1.37c0,.08,0,.14,0,.18a1.31,1.31,0,0,1,.58-.48,2.19,2.19,0,0,1,1.69,0Zm-.16,2a.86.86,0,0,0,.3-.69.84.84,0,0,0-.31-.69,1.21,1.21,0,0,0-.81-.26,1.28,1.28,0,0,0-.59.13.93.93,0,0,0-.39.34.85.85,0,0,0-.15.48.9.9,0,0,0,.14.48,1,1,0,0,0,.4.34,1.32,1.32,0,0,0,.62.13A1.17,1.17,0,0,0,14.64,9.23Z\" style=\"fill: #999\"/>`,\r\n     `    <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M10.81,5.1V10h-.69V5.71H9V5.1Z\" style=\"fill: #999\"/>\r\n      <path d=\"M15.45,5.1v.48l-2,4.42h-.74l1.94-4.29H12.43v.87h-.67V5.1Z\" style=\"fill: #999\"/>`,\r\n     `    <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M10.67,5.1V10H10V5.71H8.87V5.1Z\" style=\"fill: #999\"/>\r\n      <path d=\"M15.38,7.89a1.17,1.17,0,0,1,.23.72,1.26,1.26,0,0,1-.24.77,1.48,1.48,0,0,1-.68.5,2.71,2.71,0,0,1-1,.18,2.67,2.67,0,0,1-1-.18,1.53,1.53,0,0,1-.68-.5,1.25,1.25,0,0,1-.23-.77,1.16,1.16,0,0,1,.22-.72,1.36,1.36,0,0,1,.64-.46A1.16,1.16,0,0,1,12.07,7a1.07,1.07,0,0,1-.18-.63,1.12,1.12,0,0,1,.22-.7,1.42,1.42,0,0,1,.62-.47A2.62,2.62,0,0,1,13.66,5a2.66,2.66,0,0,1,.93.16,1.37,1.37,0,0,1,.62.47,1.12,1.12,0,0,1,.22.7,1.11,1.11,0,0,1-.18.63,1.21,1.21,0,0,1-.51.43A1.41,1.41,0,0,1,15.38,7.89Zm-.81,1.36a.76.76,0,0,0,.34-.66A.73.73,0,0,0,14.57,8a1.61,1.61,0,0,0-.91-.23,1.62,1.62,0,0,0-.92.23.76.76,0,0,0-.32.64.79.79,0,0,0,.32.66,1.55,1.55,0,0,0,.92.24A1.53,1.53,0,0,0,14.57,9.25Zm-1.7-3.43a.71.71,0,0,0-.29.58.69.69,0,0,0,.29.58,1.3,1.3,0,0,0,.79.21,1.36,1.36,0,0,0,.8-.21.72.72,0,0,0,0-1.16,1.34,1.34,0,0,0-.79-.21A1.3,1.3,0,0,0,12.87,5.82Z\" style=\"fill: #999\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M10.75,5.1V10h-.69V5.71H9V5.1Z\" style=\"fill: #999\"/>\r\n      <path d=\"M14.94,5.68a2.79,2.79,0,0,1,.53,1.81,3,3,0,0,1-.29,1.39,2,2,0,0,1-.81.88,2.4,2.4,0,0,1-1.22.3,2.93,2.93,0,0,1-.67-.08,1.9,1.9,0,0,1-.54-.21l.26-.55a1.69,1.69,0,0,0,1,.23A1.51,1.51,0,0,0,14.34,9a1.94,1.94,0,0,0,.43-1.37V7.43a1.31,1.31,0,0,1-.58.48,2,2,0,0,1-.83.16,2.05,2.05,0,0,1-.87-.18,1.36,1.36,0,0,1-.59-.52,1.52,1.52,0,0,1,0-1.59,1.55,1.55,0,0,1,.62-.54,2,2,0,0,1,.88-.2A1.91,1.91,0,0,1,14.94,5.68Zm-.88,1.7A1,1,0,0,0,14.47,7a.92.92,0,0,0,.14-.48.82.82,0,0,0-.14-.48,1,1,0,0,0-.39-.34,1.41,1.41,0,0,0-.64-.13,1.17,1.17,0,0,0-.78.26.86.86,0,0,0-.3.69.86.86,0,0,0,.3.69,1.26,1.26,0,0,0,.82.26A1.21,1.21,0,0,0,14.06,7.38Z\" style=\"fill: #999\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.85,9.39V10H8.32V9.52l2-1.92A2.31,2.31,0,0,0,10.81,7a1.2,1.2,0,0,0,.13-.51.72.72,0,0,0-.27-.6,1.25,1.25,0,0,0-.78-.21,1.51,1.51,0,0,0-1.25.53l-.48-.41a1.87,1.87,0,0,1,.76-.55A2.64,2.64,0,0,1,10,5a1.91,1.91,0,0,1,1.22.37,1.24,1.24,0,0,1,.46,1,1.71,1.71,0,0,1-.17.74,3.08,3.08,0,0,1-.64.8L9.33,9.39Z\" style=\"fill: #999\"/>\r\n      <path d=\"M13.37,9.76a2,2,0,0,1-.71-.87,3.2,3.2,0,0,1-.26-1.34,3.2,3.2,0,0,1,.26-1.34,2,2,0,0,1,.71-.87,1.81,1.81,0,0,1,1-.3,1.83,1.83,0,0,1,1,.3,2.07,2.07,0,0,1,.71.87,3.2,3.2,0,0,1,.26,1.34,3.2,3.2,0,0,1-.26,1.34,2.07,2.07,0,0,1-.71.87,1.83,1.83,0,0,1-1,.3A1.81,1.81,0,0,1,13.37,9.76Zm2-.81a2.31,2.31,0,0,0,.36-1.4,2.31,2.31,0,0,0-.36-1.4,1.11,1.11,0,0,0-.94-.48,1.12,1.12,0,0,0-1,.48,2.39,2.39,0,0,0-.35,1.4A2.39,2.39,0,0,0,13.45,9a1.12,1.12,0,0,0,1,.48A1.11,1.11,0,0,0,15.34,9Z\" style=\"fill: #999\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.84,9.39V10H9.32V9.52l2-1.92A2.54,2.54,0,0,0,11.81,7a1.19,1.19,0,0,0,.12-.51.72.72,0,0,0-.27-.6,1.22,1.22,0,0,0-.77-.21,1.51,1.51,0,0,0-1.25.53l-.48-.41a1.83,1.83,0,0,1,.75-.55A2.68,2.68,0,0,1,11,5a1.92,1.92,0,0,1,1.23.37,1.23,1.23,0,0,1,.45,1,1.58,1.58,0,0,1-.17.74,3,3,0,0,1-.63.8l-1.5,1.44Z\" style=\"fill: #999\"/>\r\n      <path d=\"M14.94,5.1V10h-.7V5.71h-1.1V5.1Z\" style=\"fill: #999\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.15,9.39V10H8.63V9.52l2-1.92A2.12,2.12,0,0,0,11.11,7a1.07,1.07,0,0,0,.13-.51.72.72,0,0,0-.27-.6,1.24,1.24,0,0,0-.77-.21,1.54,1.54,0,0,0-1.26.53l-.47-.41a1.83,1.83,0,0,1,.75-.55,2.68,2.68,0,0,1,1-.2,2,2,0,0,1,1.23.37,1.23,1.23,0,0,1,.45,1,1.71,1.71,0,0,1-.17.74,3,3,0,0,1-.63.8L9.64,9.39Z\" style=\"fill: #999\"/>\r\n      <path d=\"M16.17,9.39V10H12.65V9.52l2-1.92A2.31,2.31,0,0,0,15.13,7a1.07,1.07,0,0,0,.13-.51.72.72,0,0,0-.27-.6,1.24,1.24,0,0,0-.77-.21A1.53,1.53,0,0,0,13,6.2l-.47-.41a1.83,1.83,0,0,1,.75-.55,2.68,2.68,0,0,1,1-.2,1.91,1.91,0,0,1,1.22.37,1.21,1.21,0,0,1,.46,1,1.71,1.71,0,0,1-.17.74,2.88,2.88,0,0,1-.64.8L13.66,9.39Z\" style=\"fill: #999\"/>`,\r\n     `<rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.14,9.39V10H8.62V9.52l2-1.92A2.54,2.54,0,0,0,11.11,7a1.19,1.19,0,0,0,.12-.51.72.72,0,0,0-.27-.6,1.22,1.22,0,0,0-.77-.21,1.51,1.51,0,0,0-1.25.53l-.48-.41a1.83,1.83,0,0,1,.75-.55,2.68,2.68,0,0,1,1-.2,1.94,1.94,0,0,1,1.23.37,1.23,1.23,0,0,1,.45,1,1.58,1.58,0,0,1-.17.74,3,3,0,0,1-.63.8L9.63,9.39Z\" style=\"fill: #999\"/>\r\n      <path d=\"M15.69,7.6a1.3,1.3,0,0,1,.38,1,1.43,1.43,0,0,1-.21.76,1.54,1.54,0,0,1-.63.54,2.34,2.34,0,0,1-1,.2,3.32,3.32,0,0,1-1-.16,2.06,2.06,0,0,1-.79-.44l.32-.55a1.91,1.91,0,0,0,.64.38,2.54,2.54,0,0,0,.83.14,1.37,1.37,0,0,0,.86-.23.82.82,0,0,0,0-1.27,1.6,1.6,0,0,0-.91-.22h-.39V7.22L15,5.71H12.64V5.1h3.23v.48L14.59,7.16A1.71,1.71,0,0,1,15.69,7.6Z\" style=\"fill: #999\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.84,9.39V10H8.32V9.52l2-1.92A2.12,2.12,0,0,0,10.8,7a1.07,1.07,0,0,0,.13-.51.72.72,0,0,0-.27-.6,1.24,1.24,0,0,0-.77-.21,1.53,1.53,0,0,0-1.26.53l-.47-.41a1.83,1.83,0,0,1,.75-.55A2.68,2.68,0,0,1,10,5a1.91,1.91,0,0,1,1.22.37,1.21,1.21,0,0,1,.46,1,1.71,1.71,0,0,1-.17.74,2.88,2.88,0,0,1-.64.8L9.33,9.39Z\" style=\"fill: #999\"/>\r\n      <path d=\"M16.54,8.8h-.93V10h-.68V8.8H12.21V8.31L14.72,5.1h.75l-2.4,3.09H15V7.13h.66V8.19h.93Z\" style=\"fill: #999\"/>`,\r\n     `<rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.13,9.39V10H8.61V9.52l2-1.92A2.54,2.54,0,0,0,11.1,7a1.19,1.19,0,0,0,.12-.51.72.72,0,0,0-.27-.6,1.22,1.22,0,0,0-.77-.21,1.51,1.51,0,0,0-1.25.53l-.48-.41a1.83,1.83,0,0,1,.75-.55,2.68,2.68,0,0,1,1-.2,1.94,1.94,0,0,1,1.23.37,1.23,1.23,0,0,1,.45,1,1.58,1.58,0,0,1-.17.74,3,3,0,0,1-.63.8L9.62,9.39Z\" style=\"fill: #999\"/>\r\n      <path d=\"M15.65,7.45a1.29,1.29,0,0,1,.49,1.08,1.46,1.46,0,0,1-.2.78,1.49,1.49,0,0,1-.63.55,2.34,2.34,0,0,1-1,.2,3.32,3.32,0,0,1-1-.16,2.28,2.28,0,0,1-.8-.44l.32-.55a1.86,1.86,0,0,0,.65.38,2.48,2.48,0,0,0,.82.14,1.42,1.42,0,0,0,.86-.23.77.77,0,0,0,.3-.64.75.75,0,0,0-.33-.67A2.18,2.18,0,0,0,14,7.66H12.85l.26-2.56h2.76v.61H13.69l-.13,1.34h.55A2.41,2.41,0,0,1,15.65,7.45Z\" style=\"fill: #999\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12,9.39V10H8.47V9.52l2-1.92A2.54,2.54,0,0,0,11,7a1.19,1.19,0,0,0,.12-.51.72.72,0,0,0-.27-.6A1.22,1.22,0,0,0,10,5.67a1.51,1.51,0,0,0-1.25.53l-.48-.41a1.83,1.83,0,0,1,.75-.55,2.68,2.68,0,0,1,1-.2,1.94,1.94,0,0,1,1.23.37,1.23,1.23,0,0,1,.45,1,1.58,1.58,0,0,1-.17.74A3,3,0,0,1,11,8L9.48,9.39Z\" style=\"fill: #999\"/>\r\n      <path d=\"M15.52,7.21a1.33,1.33,0,0,1,.6.52,1.35,1.35,0,0,1,.22.78,1.45,1.45,0,0,1-.23.81,1.48,1.48,0,0,1-.62.54,2,2,0,0,1-.89.2,1.9,1.9,0,0,1-1.52-.64,2.73,2.73,0,0,1-.53-1.81,3,3,0,0,1,.29-1.39,2,2,0,0,1,.81-.88A2.39,2.39,0,0,1,14.86,5a3,3,0,0,1,.68.08,1.9,1.9,0,0,1,.54.21l-.27.55a1.6,1.6,0,0,0-.93-.23,1.53,1.53,0,0,0-1.2.47,1.94,1.94,0,0,0-.43,1.37v.18a1.31,1.31,0,0,1,.58-.48A2,2,0,0,1,14.66,7,2,2,0,0,1,15.52,7.21Zm-.16,2a.94.94,0,0,0,0-1.38,1.26,1.26,0,0,0-.82-.26,1.21,1.21,0,0,0-.58.13,1,1,0,0,0-.4.34.85.85,0,0,0-.15.48.9.9,0,0,0,.14.48,1,1,0,0,0,.4.34,1.34,1.34,0,0,0,.63.13A1.17,1.17,0,0,0,15.36,9.23Z\" style=\"fill: #999\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.05,9.39V10H8.53V9.52l2-1.92A2.54,2.54,0,0,0,11,7a1.19,1.19,0,0,0,.12-.51.72.72,0,0,0-.27-.6,1.22,1.22,0,0,0-.77-.21,1.51,1.51,0,0,0-1.25.53l-.48-.41a1.83,1.83,0,0,1,.75-.55,2.68,2.68,0,0,1,1-.2,1.94,1.94,0,0,1,1.23.37,1.23,1.23,0,0,1,.45,1,1.58,1.58,0,0,1-.17.74A3,3,0,0,1,11,8L9.54,9.39Z\" style=\"fill: #999\"/>\r\n      <path d=\"M16.17,5.1v.48l-2,4.42h-.74l1.94-4.29H13.15v.87h-.67V5.1Z\" style=\"fill: #999\"/>`,\r\n     `<rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.91,9.39V10H8.38V9.52l2-1.92A2.31,2.31,0,0,0,10.87,7,1.2,1.2,0,0,0,11,6.48a.72.72,0,0,0-.27-.6A1.25,1.25,0,0,0,10,5.67,1.51,1.51,0,0,0,8.7,6.2l-.48-.41A1.87,1.87,0,0,1,9,5.24,2.64,2.64,0,0,1,10,5a1.91,1.91,0,0,1,1.22.37,1.24,1.24,0,0,1,.46,1,1.71,1.71,0,0,1-.17.74,3.08,3.08,0,0,1-.64.8L9.39,9.39Z\" style=\"fill: #999\"/>\r\n      <path d=\"M16.12,7.89a1.16,1.16,0,0,1,.22.72,1.32,1.32,0,0,1-.23.77,1.53,1.53,0,0,1-.68.5,2.76,2.76,0,0,1-1,.18,2.66,2.66,0,0,1-1-.18,1.48,1.48,0,0,1-.68-.5,1.26,1.26,0,0,1-.24-.77,1.16,1.16,0,0,1,.22-.72,1.41,1.41,0,0,1,.64-.46A1.28,1.28,0,0,1,12.8,7a1.06,1.06,0,0,1-.17-.63,1.12,1.12,0,0,1,.22-.7,1.37,1.37,0,0,1,.62-.47A2.56,2.56,0,0,1,14.39,5a2.68,2.68,0,0,1,.94.16,1.48,1.48,0,0,1,.62.47,1.19,1.19,0,0,1,.22.7A1.11,1.11,0,0,1,16,7a1.28,1.28,0,0,1-.51.43A1.47,1.47,0,0,1,16.12,7.89Zm-.81,1.36a.77.77,0,0,0,.33-.66A.75.75,0,0,0,15.31,8a1.65,1.65,0,0,0-.92-.23,1.59,1.59,0,0,0-.91.23.75.75,0,0,0-.33.64.77.77,0,0,0,.33.66,1.51,1.51,0,0,0,.91.24A1.57,1.57,0,0,0,15.31,9.25Zm-1.7-3.43a.71.71,0,0,0-.29.58A.68.68,0,0,0,13.6,7a1.3,1.3,0,0,0,.79.21,1.33,1.33,0,0,0,.8-.21.67.67,0,0,0,.29-.58.69.69,0,0,0-.3-.58,1.32,1.32,0,0,0-.79-.21A1.29,1.29,0,0,0,13.61,5.82Z\" style=\"fill: #999\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12,9.39V10H8.46V9.52l2-1.92A2.31,2.31,0,0,0,11,7a1.2,1.2,0,0,0,.13-.51.72.72,0,0,0-.27-.6A1.25,1.25,0,0,0,10,5.67a1.51,1.51,0,0,0-1.25.53L8.3,5.79a1.87,1.87,0,0,1,.76-.55,2.64,2.64,0,0,1,1-.2,1.91,1.91,0,0,1,1.22.37,1.24,1.24,0,0,1,.46,1,1.71,1.71,0,0,1-.17.74A3.08,3.08,0,0,1,11,8L9.47,9.39Z\" style=\"fill: #999\"/>\r\n      <path d=\"M15.67,5.68a2.73,2.73,0,0,1,.54,1.81,3.1,3.1,0,0,1-.29,1.39,2.06,2.06,0,0,1-.82.88,2.36,2.36,0,0,1-1.21.3,2.86,2.86,0,0,1-.67-.08,2.1,2.1,0,0,1-.55-.21l.27-.55a1.66,1.66,0,0,0,.94.23A1.53,1.53,0,0,0,15.08,9a2,2,0,0,0,.43-1.37V7.43a1.37,1.37,0,0,1-.58.48,2.06,2.06,0,0,1-.84.16,2,2,0,0,1-.86-.18,1.38,1.38,0,0,1-.6-.52,1.55,1.55,0,0,1,0-1.59,1.55,1.55,0,0,1,.62-.54,1.93,1.93,0,0,1,.88-.2A1.89,1.89,0,0,1,15.67,5.68Zm-.87,1.7A1,1,0,0,0,15.2,7a.85.85,0,0,0,.15-.48.9.9,0,0,0-.14-.48,1,1,0,0,0-.4-.34,1.36,1.36,0,0,0-.63-.13,1.13,1.13,0,0,0-.78.26.86.86,0,0,0-.3.69.86.86,0,0,0,.3.69,1.21,1.21,0,0,0,.81.26A1.25,1.25,0,0,0,14.8,7.38Z\" style=\"fill: #999\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M11.36,7.6a1.3,1.3,0,0,1,.38,1,1.43,1.43,0,0,1-.21.76,1.54,1.54,0,0,1-.63.54,2.33,2.33,0,0,1-1,.2,3.39,3.39,0,0,1-1-.16,2.14,2.14,0,0,1-.79-.44l.32-.55a1.91,1.91,0,0,0,.64.38,2.55,2.55,0,0,0,.84.14,1.36,1.36,0,0,0,.85-.23.82.82,0,0,0,0-1.27,1.58,1.58,0,0,0-.91-.22H9.44V7.22l1.23-1.51H8.31V5.1h3.23v.48L10.26,7.16A1.71,1.71,0,0,1,11.36,7.6Z\" style=\"fill: #999\"/>\r\n      <path d=\"M13.36,9.76a2,2,0,0,1-.71-.87,3.2,3.2,0,0,1-.26-1.34,3.2,3.2,0,0,1,.26-1.34,2,2,0,0,1,.71-.87,1.83,1.83,0,0,1,1-.3,1.81,1.81,0,0,1,1,.3,2,2,0,0,1,.71.87,3.2,3.2,0,0,1,.26,1.34,3.2,3.2,0,0,1-.26,1.34,2,2,0,0,1-.71.87,1.81,1.81,0,0,1-1,.3A1.83,1.83,0,0,1,13.36,9.76Zm2-.81a2.31,2.31,0,0,0,.36-1.4,2.31,2.31,0,0,0-.36-1.4,1.09,1.09,0,0,0-.94-.48,1.11,1.11,0,0,0-.94.48,2.31,2.31,0,0,0-.36,1.4A2.31,2.31,0,0,0,13.45,9a1.11,1.11,0,0,0,.94.48A1.09,1.09,0,0,0,15.33,9Z\" style=\"fill: #999\"/>`,\r\n     ` <rect width=\"25\" height=\"15\" style=\"fill: none\"/>\r\n      <path d=\"M12.37,7.6a1.3,1.3,0,0,1,.38,1,1.43,1.43,0,0,1-.21.76,1.54,1.54,0,0,1-.63.54,2.41,2.41,0,0,1-1,.2,3.39,3.39,0,0,1-1-.16,2.23,2.23,0,0,1-.79-.44l.32-.55a2,2,0,0,0,.65.38,2.54,2.54,0,0,0,.83.14,1.34,1.34,0,0,0,.85-.23.82.82,0,0,0,0-1.27,1.58,1.58,0,0,0-.91-.22h-.39V7.22l1.23-1.51H9.31V5.1h3.24v.48L11.27,7.16A1.71,1.71,0,0,1,12.37,7.6Z\" style=\"fill: #999\"/>\r\n      <path d=\"M14.92,5.1V10h-.7V5.71h-1.1V5.1Z\" style=\"fill: #999\"/>`\r\n]\r\n\r\nexport default secondaryDigitsMP;","const weekDaysCyrMP = {\r\n  monday: `  <path d=\"M4.21,0V4.62H3.15V.87H1.06V4.62H0V0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M6.06,4.44a1.74,1.74,0,0,1-.95-1.6,1.74,1.74,0,0,1,.95-1.59,2,2,0,0,1,1-.23,2.09,2.09,0,0,1,1,.23,1.8,1.8,0,0,1,.69.65A1.76,1.76,0,0,1,9,2.84a1.77,1.77,0,0,1-.25,1,1.8,1.8,0,0,1-.69.65,2.21,2.21,0,0,1-1,.23A2.17,2.17,0,0,1,6.06,4.44Zm1.65-.88A1,1,0,0,0,8,2.84a1,1,0,0,0-.26-.71.85.85,0,0,0-.65-.27.86.86,0,0,0-.65.27,1,1,0,0,0-.26.71,1,1,0,0,0,.26.72.86.86,0,0,0,.65.27A.85.85,0,0,0,7.71,3.56Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M9.87,1.07h1V2.46h1.54V1.07h1V4.62h-1V3.29H10.9V4.62h-1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M18,3.13H15.36a.84.84,0,0,0,.34.53,1.2,1.2,0,0,0,.67.19,1.54,1.54,0,0,0,.5-.08,1.41,1.41,0,0,0,.4-.27l.54.6a1.83,1.83,0,0,1-1.46.57,2.44,2.44,0,0,1-1.07-.23,1.78,1.78,0,0,1-.71-.65,1.77,1.77,0,0,1-.25-1,1.77,1.77,0,0,1,.93-1.59,2.14,2.14,0,0,1,1.91,0,1.69,1.69,0,0,1,.66.64,2,2,0,0,1,.24,1A2.41,2.41,0,0,1,18,3.13ZM15.63,2a1,1,0,0,0-.29.54h1.75A.8.8,0,0,0,16.8,2a.84.84,0,0,0-.58-.21A.92.92,0,0,0,15.63,2Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M22.94,3.78V5.39H22V4.62H19.49v.77h-1V3.78h.15a.48.48,0,0,0,.45-.39,4,4,0,0,0,.16-1.09l.05-1.23h3.09V3.78Zm-2.8-.53a1,1,0,0,1-.24.53h1.5V1.91H20.24l0,.46A6,6,0,0,1,20.14,3.25Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M27.16,3.13H24.48a.8.8,0,0,0,.34.53,1.18,1.18,0,0,0,.67.19A1.44,1.44,0,0,0,26,3.77a1.18,1.18,0,0,0,.4-.27l.55.6a1.83,1.83,0,0,1-1.46.57,2.44,2.44,0,0,1-1.07-.23,1.78,1.78,0,0,1-.71-.65,1.77,1.77,0,0,1-.25-1,1.77,1.77,0,0,1,.93-1.59,1.92,1.92,0,0,1,1-.23,2,2,0,0,1,1,.22,1.69,1.69,0,0,1,.66.64,2,2,0,0,1,.24,1A2.41,2.41,0,0,1,27.16,3.13ZM24.75,2a.9.9,0,0,0-.29.54h1.75A.8.8,0,0,0,25.92,2a.84.84,0,0,0-.58-.21A.92.92,0,0,0,24.75,2Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M31.48,1.07V4.62h-1V1.91H29.33l0,.63a6.68,6.68,0,0,1-.13,1.16,1.71,1.71,0,0,1-.34.73.87.87,0,0,1-.66.26,2,2,0,0,1-.54-.08l.05-.84h.16a.37.37,0,0,0,.34-.17,1,1,0,0,0,.16-.43c0-.17,0-.4.06-.68l.05-1.43Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M35.58,2.52a1,1,0,0,1,.37.87,1.11,1.11,0,0,1-.41.91,1.82,1.82,0,0,1-1.16.33H32.6V1.07h1V2.2h.9A1.65,1.65,0,0,1,35.58,2.52Zm-.84,1.25a.48.48,0,0,0,.16-.4A.44.44,0,0,0,34.75,3a.84.84,0,0,0-.46-.13h-.67v1h.67A.62.62,0,0,0,34.74,3.77Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M36.71,1.07h1V2.46h1.54V1.07h1V4.62h-1V3.29H37.74V4.62h-1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M41.42,1.07h1V3.18l1.73-2.11h.94V4.62h-1V2.51L42.37,4.62h-.95Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M47.79,3.27h-.54V4.62h-1V1.07h1V2.45h.56l1-1.38h1.1l-1.24,1.7L50,4.62H48.74Z\" style=\"fill: #231f20\"/>`,\r\n  tuesday: ` <path d=\"M3.85,2.62a1.09,1.09,0,0,1,.22.7,1.12,1.12,0,0,1-.46,1,2.22,2.22,0,0,1-1.33.34H0V0H2.15A2.17,2.17,0,0,1,3.41.31a1,1,0,0,1,.44.88,1,1,0,0,1-.17.61,1.14,1.14,0,0,1-.48.41A1.24,1.24,0,0,1,3.85,2.62ZM1.06,1.91h1a.82.82,0,0,0,.53-.14.49.49,0,0,0,.18-.42A.47.47,0,0,0,2.58.94.79.79,0,0,0,2.06.79h-1ZM3,3.23q0-.57-.75-.57H1.06V3.83H2.24Q3,3.83,3,3.23Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M8,1.91H6.76V4.62h-1V1.91H4.53V1.07H8Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M9.34,4.44a1.74,1.74,0,0,1-.95-1.6,1.74,1.74,0,0,1,.95-1.59,2.08,2.08,0,0,1,1-.23,2.09,2.09,0,0,1,1,.23A1.8,1.8,0,0,1,12,1.9a1.76,1.76,0,0,1,.25.94,1.77,1.77,0,0,1-.25,1,1.8,1.8,0,0,1-.69.65,2.31,2.31,0,0,1-2,0ZM11,3.56a1,1,0,0,0,.25-.72A1,1,0,0,0,11,2.13a.93.93,0,0,0-1.31,0,1,1,0,0,0-.26.71,1,1,0,0,0,.26.72.93.93,0,0,0,1.31,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M16.14,1.24a1.78,1.78,0,0,1,.64.64,2,2,0,0,1,.23,1,2,2,0,0,1-.23,1,1.74,1.74,0,0,1-.64.65,1.82,1.82,0,0,1-.9.22,1.37,1.37,0,0,1-1.07-.43V5.9h-1V1.07h1v.41A1.37,1.37,0,0,1,15.24,1,1.82,1.82,0,0,1,16.14,1.24Zm-.43,2.32A1,1,0,0,0,16,2.84a1,1,0,0,0-.25-.71.92.92,0,0,0-1.3,0,1,1,0,0,0-.25.71,1,1,0,0,0,.25.72.92.92,0,0,0,1.3,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M17.89,1.07h1V2.46h1.54V1.07h1V4.62h-1V3.29H18.91V4.62h-1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M22.59,1.07h1V3.18l1.73-2.11h.95V4.62h-1V2.51L23.54,4.62h-.95Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M29,3.27h-.53V4.62h-1V1.07h1V2.45H29l1-1.38H31L29.8,2.77l1.33,1.85H29.92Z\" style=\"fill: #231f20\"/>`,\r\n  wednesday: `     <path d=\"M1.22,4.47a2.21,2.21,0,0,1-.89-.85A2.31,2.31,0,0,1,0,2.39,2.31,2.31,0,0,1,.33,1.16,2.15,2.15,0,0,1,1.22.31,2.65,2.65,0,0,1,2.51,0,2.67,2.67,0,0,1,3.59.21a2.08,2.08,0,0,1,.82.61l-.69.63A1.47,1.47,0,0,0,2.56.91a1.48,1.48,0,0,0-.76.19,1.33,1.33,0,0,0-.53.52,1.63,1.63,0,0,0-.19.77,1.66,1.66,0,0,0,.19.77,1.39,1.39,0,0,0,.53.52,1.59,1.59,0,0,0,.76.19,1.45,1.45,0,0,0,1.16-.55L4.41,4a2.1,2.1,0,0,1-.82.62,2.75,2.75,0,0,1-1.09.21A2.63,2.63,0,0,1,1.22,4.47Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M8.13,1.32A1.68,1.68,0,0,1,8.76,2a1.9,1.9,0,0,1,.24,1,1.85,1.85,0,0,1-.24,1,1.55,1.55,0,0,1-.63.64,1.72,1.72,0,0,1-.9.23,1.35,1.35,0,0,1-1.07-.43V6h-1V1.15h1v.41A1.37,1.37,0,0,1,7.23,1.1,1.82,1.82,0,0,1,8.13,1.32ZM7.7,3.64A1,1,0,0,0,8,2.92a1,1,0,0,0-.25-.71.92.92,0,0,0-1.3,0,1,1,0,0,0-.26.71,1,1,0,0,0,.26.72.92.92,0,0,0,1.3,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M13.34,3.21H10.65a.87.87,0,0,0,.34.53,1.21,1.21,0,0,0,.68.19,1.26,1.26,0,0,0,.49-.09,1.19,1.19,0,0,0,.4-.26l.55.6a1.87,1.87,0,0,1-1.47.57,2.39,2.39,0,0,1-1.06-.23,1.73,1.73,0,0,1-.71-.65,1.78,1.78,0,0,1-.26-1A1.89,1.89,0,0,1,9.86,2a1.77,1.77,0,0,1,.68-.65,2.14,2.14,0,0,1,1.91,0,1.65,1.65,0,0,1,.67.64,2,2,0,0,1,.24,1S13.35,3,13.34,3.21ZM10.93,2.07a.8.8,0,0,0-.29.54h1.75a.9.9,0,0,0-.29-.53.86.86,0,0,0-.58-.21A.9.9,0,0,0,10.93,2.07Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M18.23,3.85V5.46h-.95V4.7h-2.5v.76h-.95V3.85H14c.22,0,.37-.13.46-.39a4.34,4.34,0,0,0,.15-1.08l.05-1.23h3.1v2.7Zm-2.8-.52a1,1,0,0,1-.23.52h1.5V2H15.53l0,.46A6.19,6.19,0,0,1,15.43,3.33Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M21.75,1.49a1.5,1.5,0,0,1,.44,1.18v2h-1V4.26a1.15,1.15,0,0,1-1.08.49,1.55,1.55,0,0,1-.71-.14A1,1,0,0,1,19,4.23a1,1,0,0,1-.16-.55.92.92,0,0,1,.37-.78,1.91,1.91,0,0,1,1.15-.29h.82A.66.66,0,0,0,21,2.1a.87.87,0,0,0-.62-.19,1.71,1.71,0,0,0-.55.09,1.48,1.48,0,0,0-.47.24L19,1.52a2.25,2.25,0,0,1,.7-.31,2.91,2.91,0,0,1,.83-.11A1.86,1.86,0,0,1,21.75,1.49Zm-.88,2.45a.61.61,0,0,0,.29-.36V3.21h-.7c-.43,0-.64.14-.64.42a.35.35,0,0,0,.16.31.66.66,0,0,0,.42.12A.89.89,0,0,0,20.87,3.94Z\" style=\"fill: #231f20\"/>`,\r\n  thursday: `  <path d=\"M4.09,0V4.62H3V3a3.48,3.48,0,0,1-1.12.21A2.06,2.06,0,0,1,.49,2.73,1.68,1.68,0,0,1,0,1.45V0H1.06V1.33A.93.93,0,0,0,1.31,2a1,1,0,0,0,.74.24,2.37,2.37,0,0,0,1-.2V0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M8.72,3.13H6a.84.84,0,0,0,.34.53,1.21,1.21,0,0,0,.68.19,1.48,1.48,0,0,0,.49-.08,1.41,1.41,0,0,0,.4-.27l.55.6A1.87,1.87,0,0,1,7,4.67,2.39,2.39,0,0,1,6,4.44a1.66,1.66,0,0,1-.71-.65,1.78,1.78,0,0,1-.26-1,1.89,1.89,0,0,1,.25-.94,1.85,1.85,0,0,1,.68-.65,2,2,0,0,1,1-.23,2,2,0,0,1,.94.22,1.79,1.79,0,0,1,.67.64,2,2,0,0,1,.24,1S8.73,3,8.72,3.13ZM6.31,2A.85.85,0,0,0,6,2.53H7.77A.9.9,0,0,0,7.48,2a.86.86,0,0,0-.58-.21A.9.9,0,0,0,6.31,2Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M12.65,1.91h-1.2V4.62h-1V1.91H9.23V1.07h3.42Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M16.68,3.61a.89.89,0,0,1-.37.75,1.87,1.87,0,0,1-1.08.26H13.34V1.07h1.81a1.93,1.93,0,0,1,1,.24.77.77,0,0,1,.38.68.81.81,0,0,1-.14.46.86.86,0,0,1-.38.32A.82.82,0,0,1,16.68,3.61Zm-2.4-1.08h.78c.36,0,.54-.13.54-.38s-.18-.38-.54-.38h-.78Zm1.43,1a.33.33,0,0,0-.13-.3.76.76,0,0,0-.42-.1h-.88v.79h.86Q15.71,3.92,15.71,3.53Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M21,3.13H18.36a.8.8,0,0,0,.34.53,1.18,1.18,0,0,0,.67.19,1.44,1.44,0,0,0,.49-.08,1.18,1.18,0,0,0,.4-.27l.55.6a1.84,1.84,0,0,1-1.47.57,2.39,2.39,0,0,1-1.06-.23,1.72,1.72,0,0,1-.71-.65,1.77,1.77,0,0,1-.25-1,1.77,1.77,0,0,1,.93-1.59,1.92,1.92,0,0,1,1-.23,2,2,0,0,1,.95.22,1.69,1.69,0,0,1,.66.64,2,2,0,0,1,.24,1S21.05,3,21,3.13ZM18.63,2a.9.9,0,0,0-.29.54h1.75A.8.8,0,0,0,19.8,2a.84.84,0,0,0-.58-.21A.92.92,0,0,0,18.63,2Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M25,1.24a1.68,1.68,0,0,1,.63.64,1.9,1.9,0,0,1,.23,1,1.85,1.85,0,0,1-.23,1,1.64,1.64,0,0,1-.63.65,1.86,1.86,0,0,1-.91.22A1.34,1.34,0,0,1,23,4.24V5.9H22V1.07h1v.41A1.35,1.35,0,0,1,24.05,1,1.86,1.86,0,0,1,25,1.24Zm-.43,2.32a1,1,0,0,0,.25-.72,1,1,0,0,0-.25-.71.86.86,0,0,0-.65-.27.85.85,0,0,0-.65.27,1,1,0,0,0-.26.71,1,1,0,0,0,.26.72.85.85,0,0,0,.65.27A.86.86,0,0,0,24.53,3.56Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M29.55,1.91H27.72V4.62h-1V1.07h2.85Z\" style=\"fill: #231f20\"/>`,\r\n  friday: `  <path d=\"M4.21,0V4.62H3.15V.87H1.06V4.62H0V0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M8.54,1.07V4.62H7.63v-1H6.87l-.68,1H5.1l.81-1.16A1.22,1.22,0,0,1,5.35,3a1.1,1.1,0,0,1-.2-.66,1.15,1.15,0,0,1,.45-1,2,2,0,0,1,1.25-.34ZM6.37,2a.43.43,0,0,0-.17.38.44.44,0,0,0,.16.38.75.75,0,0,0,.49.13h.78v-1H6.87A.86.86,0,0,0,6.37,2Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M12.66,1.91h-1.2V4.62h-1V1.91H9.23V1.07h3.43Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M13.34,1.07h1V2.46h1.54V1.07h1V4.62h-1V3.29H14.37V4.62h-1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M18.05,1.07h1V3.18L20.8,1.07h.94V4.62h-1V2.51L19,4.62h-.95Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M26.86,3.78V5.4h-1V4.62h-3V1.07h1V3.78h1.43V1.07h1V3.78Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M30.37,1.41a1.49,1.49,0,0,1,.45,1.18v2h-1V4.18a1.13,1.13,0,0,1-1.08.49,1.58,1.58,0,0,1-.71-.14,1.09,1.09,0,0,1-.46-.38,1,1,0,0,1-.16-.55.93.93,0,0,1,.38-.78A1.87,1.87,0,0,1,29,2.53h.82A.64.64,0,0,0,29.58,2,.91.91,0,0,0,29,1.83a1.77,1.77,0,0,0-.56.09,1.41,1.41,0,0,0-.47.25l-.37-.72a2.14,2.14,0,0,1,.7-.32A2.94,2.94,0,0,1,29.11,1,1.83,1.83,0,0,1,30.37,1.41ZM29.5,3.86a.7.7,0,0,0,.29-.36V3.13h-.71q-.63,0-.63.42a.36.36,0,0,0,.15.31A.69.69,0,0,0,29,4,.94.94,0,0,0,29.5,3.86Z\" style=\"fill: #231f20\"/>`,\r\n  saturday: `  <path d=\"M1.22,4.92a2.21,2.21,0,0,1-.89-.85A2.31,2.31,0,0,1,0,2.84,2.31,2.31,0,0,1,.33,1.61,2.15,2.15,0,0,1,1.22.76,2.62,2.62,0,0,1,2.51.45,2.67,2.67,0,0,1,3.59.66a2.08,2.08,0,0,1,.82.61l-.69.63a1.47,1.47,0,0,0-1.16-.54,1.52,1.52,0,0,0-.77.19,1.37,1.37,0,0,0-.52.52,1.52,1.52,0,0,0-.19.77,1.48,1.48,0,0,0,.19.76,1.39,1.39,0,0,0,.52.53,1.63,1.63,0,0,0,.77.19,1.48,1.48,0,0,0,1.16-.55l.69.63A2.1,2.1,0,0,1,3.59,5a2.75,2.75,0,0,1-1.09.21A2.61,2.61,0,0,1,1.22,4.92Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M8.78,1.6,7.18,5.37a1.83,1.83,0,0,1-.61.86,1.45,1.45,0,0,1-.86.25,2,2,0,0,1-.55-.08,1.23,1.23,0,0,1-.44-.24l.37-.73a.85.85,0,0,0,.28.16.8.8,0,0,0,.3.06A.56.56,0,0,0,6,5.55a1,1,0,0,0,.23-.34l0,0L4.73,1.6H5.79L6.79,4l1-2.41Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M12.39,2.05a1.5,1.5,0,0,1,.59.58,1.75,1.75,0,0,1,.21.87,1.66,1.66,0,0,1-.25.91,1.56,1.56,0,0,1-.69.6,2.16,2.16,0,0,1-1,.22,1.84,1.84,0,0,1-1.46-.6,2.53,2.53,0,0,1-.54-1.75,2.86,2.86,0,0,1,.47-1.71A2.26,2.26,0,0,1,11.15.34L12.84,0,13,.88l-1.49.3a1.79,1.79,0,0,0-.91.4,1.18,1.18,0,0,0-.34.78A1.64,1.64,0,0,1,10.79,2a1.94,1.94,0,0,1,1.6.07Zm-.5,2.12a.92.92,0,0,0,.24-.65.83.83,0,0,0-.88-.88.88.88,0,0,0-.64.24.87.87,0,0,0-.25.64.87.87,0,0,0,.89.91A.84.84,0,0,0,11.89,4.17Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M17,2.05a1.5,1.5,0,0,1,.59.58,1.75,1.75,0,0,1,.21.87,1.66,1.66,0,0,1-.25.91,1.56,1.56,0,0,1-.69.6,2.16,2.16,0,0,1-1,.22,1.84,1.84,0,0,1-1.46-.6,2.53,2.53,0,0,1-.54-1.75,2.86,2.86,0,0,1,.47-1.71A2.26,2.26,0,0,1,15.74.34L17.43,0l.14.88-1.49.3a1.79,1.79,0,0,0-.91.4,1.18,1.18,0,0,0-.34.78A1.64,1.64,0,0,1,15.38,2a1.94,1.94,0,0,1,1.6.07Zm-.5,2.12a.92.92,0,0,0,.24-.65.83.83,0,0,0-.88-.88.88.88,0,0,0-.64.24.87.87,0,0,0-.25.64.89.89,0,0,0,.25.65.87.87,0,0,0,.64.26A.84.84,0,0,0,16.48,4.17Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M19.33,5a1.8,1.8,0,0,1-.69-.65,1.77,1.77,0,0,1-.25-1,1.76,1.76,0,0,1,.25-.94,1.73,1.73,0,0,1,.69-.65,2.09,2.09,0,0,1,1-.24,2.05,2.05,0,0,1,1,.24,1.76,1.76,0,0,1,.7.65,1.91,1.91,0,0,1,0,1.89,1.83,1.83,0,0,1-.7.65,2.17,2.17,0,0,1-1,.23A2.21,2.21,0,0,1,19.33,5ZM21,4.09a1,1,0,0,0,.25-.72A1,1,0,0,0,21,2.66a.92.92,0,0,0-1.3,0,.93.93,0,0,0-.26.71,1,1,0,0,0,.26.72.92.92,0,0,0,1.3,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M26.15,2.44H25V5.15h-1V2.44h-1.2V1.6h3.43Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M29.55,1.94A1.5,1.5,0,0,1,30,3.12v2H29V4.71a1.13,1.13,0,0,1-1.08.49,1.58,1.58,0,0,1-.71-.14,1.09,1.09,0,0,1-.46-.38,1,1,0,0,1-.15-.55A.92.92,0,0,1,27,3.35a1.89,1.89,0,0,1,1.15-.29H29a.67.67,0,0,0-.21-.52.89.89,0,0,0-.61-.18,1.77,1.77,0,0,0-.56.09,1.54,1.54,0,0,0-.46.24L26.75,2a2.19,2.19,0,0,1,.69-.31,2.94,2.94,0,0,1,.84-.12A1.88,1.88,0,0,1,29.55,1.94Zm-.88,2.45A.79.79,0,0,0,29,4V3.66h-.71q-.63,0-.63.42a.36.36,0,0,0,.15.31.71.71,0,0,0,.43.12A.91.91,0,0,0,28.67,4.39Z\" style=\"fill: #231f20\"/>`,\r\n  sunday: ` <path d=\"M3.85,2.62a1.09,1.09,0,0,1,.22.7,1.12,1.12,0,0,1-.46,1,2.22,2.22,0,0,1-1.33.34H0V0H2.15A2.17,2.17,0,0,1,3.41.31a1,1,0,0,1,.44.88,1,1,0,0,1-.17.61,1.14,1.14,0,0,1-.48.41A1.24,1.24,0,0,1,3.85,2.62ZM1.06,1.91h1a.82.82,0,0,0,.53-.14.49.49,0,0,0,.18-.42A.47.47,0,0,0,2.58.94.79.79,0,0,0,2.06.79h-1ZM3,3.23q0-.57-.75-.57H1.06V3.83H2.24Q3,3.83,3,3.23Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M5.66,4.44a1.74,1.74,0,0,1-1-1.6,1.74,1.74,0,0,1,1-1.59,2,2,0,0,1,1-.23,2.09,2.09,0,0,1,1,.23,1.8,1.8,0,0,1,.69.65,1.76,1.76,0,0,1,.25.94,1.77,1.77,0,0,1-.25,1,1.8,1.8,0,0,1-.69.65,2.21,2.21,0,0,1-1,.23A2.17,2.17,0,0,1,5.66,4.44Zm1.65-.88a1,1,0,0,0,.26-.72,1,1,0,0,0-.26-.71.85.85,0,0,0-.65-.27A.86.86,0,0,0,6,2.13a1,1,0,0,0-.26.71A1,1,0,0,0,6,3.56a.86.86,0,0,0,.65.27A.85.85,0,0,0,7.31,3.56Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M10.19,4.44a1.72,1.72,0,0,1-.71-.65,1.77,1.77,0,0,1-.25-1,1.76,1.76,0,0,1,.25-.94,1.72,1.72,0,0,1,.71-.65,2.13,2.13,0,0,1,1-.23,2,2,0,0,1,1,.23,1.47,1.47,0,0,1,.61.67l-.8.43a.87.87,0,0,0-.8-.49.9.9,0,0,0-.67.27,1,1,0,0,0-.26.71,1,1,0,0,0,.26.72.9.9,0,0,0,.67.27.86.86,0,0,0,.8-.49l.8.44a1.5,1.5,0,0,1-.61.66,2.06,2.06,0,0,1-1,.23A2.25,2.25,0,0,1,10.19,4.44Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M15.15,3.27h-.53V4.62h-1V1.07h1V2.45h.55l1-1.38h1.09L16,2.77l1.33,1.85H16.1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M21,1.24a1.78,1.78,0,0,1,.64.64,2,2,0,0,1,.23,1,2,2,0,0,1-.23,1,1.74,1.74,0,0,1-.64.65,1.82,1.82,0,0,1-.9.22A1.37,1.37,0,0,1,19,4.24V5.9H18V1.07h1v.41A1.37,1.37,0,0,1,20.08,1,1.82,1.82,0,0,1,21,1.24Zm-.43,2.32a1,1,0,0,0,.25-.72,1,1,0,0,0-.25-.71.92.92,0,0,0-1.3,0,1,1,0,0,0-.25.71,1,1,0,0,0,.25.72.92.92,0,0,0,1.3,0Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M26.19,3.13H23.5a.84.84,0,0,0,.34.53,1.24,1.24,0,0,0,.68.19A1.48,1.48,0,0,0,25,3.77a1.28,1.28,0,0,0,.4-.27l.55.6a1.87,1.87,0,0,1-1.47.57,2.39,2.39,0,0,1-1.06-.23,1.66,1.66,0,0,1-.71-.65,1.77,1.77,0,0,1-.25-1,1.88,1.88,0,0,1,.24-.94,1.85,1.85,0,0,1,.68-.65,2.14,2.14,0,0,1,1.91,0,1.72,1.72,0,0,1,.67.64,2,2,0,0,1,.24,1S26.2,3,26.19,3.13ZM23.78,2a.85.85,0,0,0-.29.54h1.75A.85.85,0,0,0,25,2a.86.86,0,0,0-.58-.21A.9.9,0,0,0,23.78,2Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M27.83,4.44a1.78,1.78,0,0,1-.71-.65,1.77,1.77,0,0,1-.25-1,1.76,1.76,0,0,1,.25-.94,1.78,1.78,0,0,1,.71-.65,2.13,2.13,0,0,1,1-.23,2,2,0,0,1,1,.23,1.42,1.42,0,0,1,.61.67l-.8.43a.92.92,0,0,0-1.46-.22.93.93,0,0,0-.27.71.94.94,0,0,0,.27.72.92.92,0,0,0,1.46-.22l.8.44a1.44,1.44,0,0,1-.61.66,2.06,2.06,0,0,1-1,.23A2.25,2.25,0,0,1,27.83,4.44Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M34.65,3.13H32a.8.8,0,0,0,.34.53,1.18,1.18,0,0,0,.67.19,1.44,1.44,0,0,0,.49-.08,1.18,1.18,0,0,0,.4-.27l.55.6A1.83,1.83,0,0,1,33,4.67a2.44,2.44,0,0,1-1.07-.23,1.78,1.78,0,0,1-.71-.65,1.77,1.77,0,0,1-.25-1,1.77,1.77,0,0,1,.93-1.59,2,2,0,0,1,1-.23,2,2,0,0,1,1,.22,1.69,1.69,0,0,1,.66.64,2,2,0,0,1,.24,1A2.41,2.41,0,0,1,34.65,3.13ZM32.24,2a.9.9,0,0,0-.29.54H33.7A.8.8,0,0,0,33.41,2a.84.84,0,0,0-.58-.21A.92.92,0,0,0,32.24,2Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M35.57,1.07h1V2.46h1.55V1.07h1V4.62h-1V3.29H36.59V4.62h-1Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M43.26,2.52a1,1,0,0,1,.37.87,1.11,1.11,0,0,1-.41.91,1.82,1.82,0,0,1-1.16.33H40.28V1.07h1V2.2h.9A1.65,1.65,0,0,1,43.26,2.52Zm-.84,1.25a.48.48,0,0,0,.16-.4A.42.42,0,0,0,42.42,3,.78.78,0,0,0,42,2.87H41.3v1H42A.62.62,0,0,0,42.42,3.77Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M47.92,3.13H45.23a.84.84,0,0,0,.34.53,1.21,1.21,0,0,0,.68.19,1.48,1.48,0,0,0,.49-.08,1.28,1.28,0,0,0,.4-.27l.55.6a1.87,1.87,0,0,1-1.47.57,2.39,2.39,0,0,1-1.06-.23,1.66,1.66,0,0,1-.71-.65,1.77,1.77,0,0,1-.25-1,1.88,1.88,0,0,1,.24-.94,1.85,1.85,0,0,1,.68-.65,2.14,2.14,0,0,1,1.91,0,1.72,1.72,0,0,1,.67.64,2,2,0,0,1,.24,1S47.93,3,47.92,3.13ZM45.51,2a.85.85,0,0,0-.29.54H47A.9.9,0,0,0,46.68,2a.86.86,0,0,0-.58-.21A.9.9,0,0,0,45.51,2Z\" style=\"fill: #231f20\"/>`,\r\n};\r\n\r\nexport default weekDaysCyrMP;\r\n","const weekDaysMP = {\r\n  monday: ` <path d=\"M4.2,4.9V2.13L2.84,4.41H2.36L1,2.18V4.9H0V.28H.88L2.61,3.15,4.32.28h.87l0,4.62Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M7.05,4.72a1.88,1.88,0,0,1-.69-.65,1.8,1.8,0,0,1-.25-1,1.76,1.76,0,0,1,.25-.94,1.73,1.73,0,0,1,.69-.65,2.12,2.12,0,0,1,1-.24,2,2,0,0,1,1,.24,1.69,1.69,0,0,1,.7.65,1.86,1.86,0,0,1,.25.94,1.9,1.9,0,0,1-.25,1,1.83,1.83,0,0,1-.7.65,2.14,2.14,0,0,1-1,.23A2.24,2.24,0,0,1,7.05,4.72Zm1.66-.88A1,1,0,0,0,9,3.12a1,1,0,0,0-.26-.71.85.85,0,0,0-.65-.27.86.86,0,0,0-.65.27,1,1,0,0,0-.26.71,1,1,0,0,0,.26.72.86.86,0,0,0,.65.27A.85.85,0,0,0,8.71,3.84Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M14,1.69a1.57,1.57,0,0,1,.41,1.17v2h-1V3a1,1,0,0,0-.18-.63.7.7,0,0,0-.54-.21.82.82,0,0,0-.62.25,1,1,0,0,0-.23.71V4.9h-1V1.35h1v.41a1.39,1.39,0,0,1,.51-.34A1.63,1.63,0,0,1,13,1.29,1.47,1.47,0,0,1,14,1.69Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M19.1,0V4.9h-1V4.49A1.33,1.33,0,0,1,17,5a1.83,1.83,0,0,1-.91-.22,1.64,1.64,0,0,1-.64-.64,2,2,0,0,1-.23-1,2,2,0,0,1,.23-1,1.58,1.58,0,0,1,.64-.64A1.84,1.84,0,0,1,17,1.29a1.38,1.38,0,0,1,1.06.43V0ZM17.83,3.84a1,1,0,0,0,.26-.72,1,1,0,0,0-.26-.71.92.92,0,0,0-1.3,0,1,1,0,0,0-.26.71,1,1,0,0,0,.26.72.92.92,0,0,0,1.3,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M22.86,1.69a1.5,1.5,0,0,1,.44,1.18v2h-1V4.46A1.16,1.16,0,0,1,21.25,5a1.73,1.73,0,0,1-.71-.14,1,1,0,0,1-.45-.38,1,1,0,0,1-.16-.56.9.9,0,0,1,.37-.77,1.89,1.89,0,0,1,1.15-.29h.82a.7.7,0,0,0-.2-.52.92.92,0,0,0-.62-.18,1.82,1.82,0,0,0-.56.09,1.54,1.54,0,0,0-.46.24l-.37-.72a2.15,2.15,0,0,1,.7-.31,2.87,2.87,0,0,1,.83-.12A1.83,1.83,0,0,1,22.86,1.69ZM22,4.13a.67.67,0,0,0,.29-.35V3.41h-.71q-.63,0-.63.42a.36.36,0,0,0,.16.31.66.66,0,0,0,.42.12A.83.83,0,0,0,22,4.13Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M27.74,1.35l-1.6,3.77a2,2,0,0,1-.61.86,1.45,1.45,0,0,1-.86.25,1.71,1.71,0,0,1-.55-.09,1.08,1.08,0,0,1-.44-.23l.37-.74a.73.73,0,0,0,.28.17.8.8,0,0,0,.3.06A.56.56,0,0,0,25,5.3,1,1,0,0,0,25.21,5l0,0L23.69,1.35h1.06l1,2.41,1-2.41Z\" style=\"fill: #231f20\"/>`,\r\n  tuesday: `<path d=\"M1.48,1.15H0V.28H4v.87H2.55V4.9H1.48Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M7.75,1.35V4.9h-1V4.47a1.33,1.33,0,0,1-.49.36A1.54,1.54,0,0,1,5.67,5a1.5,1.5,0,0,1-1.11-.4,1.63,1.63,0,0,1-.41-1.2v-2h1V3.2c0,.57.24.86.72.86a.78.78,0,0,0,.59-.24,1,1,0,0,0,.23-.72V1.35Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M12.27,3.41H9.59a.82.82,0,0,0,.34.52,1.11,1.11,0,0,0,.67.2A1.22,1.22,0,0,0,11.09,4a1,1,0,0,0,.4-.26l.55.6A1.83,1.83,0,0,1,10.58,5a2.44,2.44,0,0,1-1.07-.23,1.86,1.86,0,0,1-.71-.65,1.8,1.8,0,0,1-.25-1,1.76,1.76,0,0,1,.25-.94,1.64,1.64,0,0,1,.68-.65,2.06,2.06,0,0,1,1.91,0,1.63,1.63,0,0,1,.66.64,2,2,0,0,1,.24,1A2.41,2.41,0,0,1,12.27,3.41ZM9.86,2.27a.89.89,0,0,0-.29.54h1.75A.85.85,0,0,0,11,2.27a.89.89,0,0,0-.58-.2A.92.92,0,0,0,9.86,2.27Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M13.46,4.84a2.22,2.22,0,0,1-.67-.27l.34-.74a2.41,2.41,0,0,0,.58.25,2.5,2.5,0,0,0,.66.09c.43,0,.65-.11.65-.32a.23.23,0,0,0-.18-.22,2.89,2.89,0,0,0-.55-.11q-.43-.07-.72-.15a1.11,1.11,0,0,1-.49-.31.85.85,0,0,1-.21-.62,1,1,0,0,1,.2-.6,1.3,1.3,0,0,1,.57-.4,2.31,2.31,0,0,1,.88-.15,3.2,3.2,0,0,1,.75.09,2.06,2.06,0,0,1,.61.22l-.34.74a2,2,0,0,0-1-.27,1,1,0,0,0-.5.1.26.26,0,0,0-.16.23.23.23,0,0,0,.18.23,2.44,2.44,0,0,0,.56.13q.44.08.72.15a1.22,1.22,0,0,1,.48.3.9.9,0,0,1,.2.61.9.9,0,0,1-.2.59,1.3,1.3,0,0,1-.57.4,2.74,2.74,0,0,1-.9.14A3.58,3.58,0,0,1,13.46,4.84Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M20.41,0V4.9h-1V4.49A1.34,1.34,0,0,1,18.31,5a1.82,1.82,0,0,1-.9-.22,1.64,1.64,0,0,1-.64-.64,2,2,0,0,1-.23-1,2,2,0,0,1,.23-1,1.58,1.58,0,0,1,.64-.64,1.83,1.83,0,0,1,.9-.23,1.38,1.38,0,0,1,1.07.43V0ZM19.14,3.84a1,1,0,0,0,.26-.72,1,1,0,0,0-.26-.71.92.92,0,0,0-1.3,0,1,1,0,0,0-.26.71,1,1,0,0,0,.26.72.92.92,0,0,0,1.3,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M24.17,1.69a1.5,1.5,0,0,1,.44,1.18v2h-1V4.46A1.13,1.13,0,0,1,22.56,5a1.73,1.73,0,0,1-.71-.14,1.09,1.09,0,0,1-.46-.38,1,1,0,0,1-.15-.56.9.9,0,0,1,.37-.77,1.89,1.89,0,0,1,1.15-.29h.82a.67.67,0,0,0-.21-.52.89.89,0,0,0-.61-.18,1.77,1.77,0,0,0-.56.09,1.54,1.54,0,0,0-.46.24l-.37-.72a2.19,2.19,0,0,1,.69-.31,2.94,2.94,0,0,1,.84-.12A1.83,1.83,0,0,1,24.17,1.69Zm-.88,2.44a.72.72,0,0,0,.29-.35V3.41h-.71q-.63,0-.63.42a.37.37,0,0,0,.15.31.71.71,0,0,0,.43.12A.83.83,0,0,0,23.29,4.13Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M29.05,1.35l-1.6,3.77a2,2,0,0,1-.61.86,1.46,1.46,0,0,1-.87.25,1.7,1.7,0,0,1-.54-.09A1.2,1.2,0,0,1,25,5.91l.38-.74a.77.77,0,0,0,.27.17.89.89,0,0,0,.31.06.51.51,0,0,0,.34-.1A.85.85,0,0,0,26.52,5v0L25,1.35h1.06l1,2.41,1-2.41Z\" style=\"fill: #231f20\"/>`,\r\n  wednesday: `<path d=\"M7.39.28,5.87,4.9H4.73l-1-3.13-1,3.13H1.52L0,.28H1.11l1,3.24L3.24.28h1L5.29,3.55,6.36.28Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M11.35,3.41H8.67A.82.82,0,0,0,9,3.93a1.13,1.13,0,0,0,.67.2A1.22,1.22,0,0,0,10.17,4a1,1,0,0,0,.4-.26l.55.6A1.83,1.83,0,0,1,9.66,5a2.44,2.44,0,0,1-1.07-.23,1.86,1.86,0,0,1-.71-.65,1.8,1.8,0,0,1-.25-1,1.76,1.76,0,0,1,.25-.94,1.64,1.64,0,0,1,.68-.65,2.06,2.06,0,0,1,1.91,0,1.63,1.63,0,0,1,.66.64,2,2,0,0,1,.24,1A2.41,2.41,0,0,1,11.35,3.41ZM8.94,2.27a.89.89,0,0,0-.29.54H10.4a.85.85,0,0,0-.29-.54.89.89,0,0,0-.58-.2A.92.92,0,0,0,8.94,2.27Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M15.82,0V4.9h-1V4.49a1.33,1.33,0,0,1-1.1.46,1.83,1.83,0,0,1-.91-.22,1.64,1.64,0,0,1-.64-.64,2,2,0,0,1-.23-1,2,2,0,0,1,.23-1,1.58,1.58,0,0,1,.64-.64,1.84,1.84,0,0,1,.91-.23,1.38,1.38,0,0,1,1.06.43V0ZM14.55,3.84a1,1,0,0,0,.26-.72,1,1,0,0,0-.26-.71.92.92,0,0,0-1.3,0,1,1,0,0,0-.26.71,1,1,0,0,0,.26.72.92.92,0,0,0,1.3,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M20.08,1.69a1.53,1.53,0,0,1,.41,1.17v2h-1V3a1,1,0,0,0-.18-.63.7.7,0,0,0-.54-.21.84.84,0,0,0-.62.25,1,1,0,0,0-.23.71V4.9h-1V1.35h1v.41a1.39,1.39,0,0,1,.51-.34A1.63,1.63,0,0,1,19,1.29,1.47,1.47,0,0,1,20.08,1.69Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M25,3.41H22.3a.82.82,0,0,0,.34.52,1.13,1.13,0,0,0,.67.2,1.31,1.31,0,0,0,.5-.09,1.19,1.19,0,0,0,.4-.26l.54.6A1.83,1.83,0,0,1,23.29,5a2.44,2.44,0,0,1-1.07-.23,1.86,1.86,0,0,1-.71-.65,1.8,1.8,0,0,1-.25-1,1.76,1.76,0,0,1,.25-.94,1.64,1.64,0,0,1,.68-.65,2.06,2.06,0,0,1,1.91,0,1.63,1.63,0,0,1,.66.64,2,2,0,0,1,.24,1A2.41,2.41,0,0,1,25,3.41ZM22.57,2.27a.89.89,0,0,0-.29.54H24a.85.85,0,0,0-.29-.54.89.89,0,0,0-.58-.2A.92.92,0,0,0,22.57,2.27Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M26.17,4.84a2.22,2.22,0,0,1-.67-.27l.34-.74a2.41,2.41,0,0,0,.58.25,2.5,2.5,0,0,0,.66.09c.43,0,.65-.11.65-.32a.23.23,0,0,0-.18-.22A2.89,2.89,0,0,0,27,3.52c-.29,0-.53-.1-.71-.15a1.14,1.14,0,0,1-.5-.31.85.85,0,0,1-.21-.62,1,1,0,0,1,.2-.6,1.3,1.3,0,0,1,.57-.4,2.35,2.35,0,0,1,.88-.15,3.2,3.2,0,0,1,.75.09,2.06,2.06,0,0,1,.61.22l-.34.74a2,2,0,0,0-1-.27,1,1,0,0,0-.5.1.26.26,0,0,0-.16.23.23.23,0,0,0,.18.23,2.59,2.59,0,0,0,.56.13q.44.08.72.15a1.22,1.22,0,0,1,.48.3.85.85,0,0,1,.2.61,1,1,0,0,1-.19.59,1.4,1.4,0,0,1-.58.4A2.7,2.7,0,0,1,27,5,3.58,3.58,0,0,1,26.17,4.84Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M33.12,0V4.9h-1V4.49A1.34,1.34,0,0,1,31,5a1.82,1.82,0,0,1-.9-.22,1.64,1.64,0,0,1-.64-.64,2,2,0,0,1-.23-1,2,2,0,0,1,.23-1,1.58,1.58,0,0,1,.64-.64,1.83,1.83,0,0,1,.9-.23,1.38,1.38,0,0,1,1.07.43V0ZM31.85,3.84a1,1,0,0,0,.26-.72,1,1,0,0,0-.26-.71.92.92,0,0,0-1.3,0,1,1,0,0,0-.26.71,1,1,0,0,0,.26.72.92.92,0,0,0,1.3,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M36.88,1.69a1.5,1.5,0,0,1,.44,1.18v2h-1V4.46A1.16,1.16,0,0,1,35.27,5a1.73,1.73,0,0,1-.71-.14,1,1,0,0,1-.45-.38A1,1,0,0,1,34,3.87a.9.9,0,0,1,.37-.77,1.89,1.89,0,0,1,1.15-.29h.82a.67.67,0,0,0-.21-.52.89.89,0,0,0-.61-.18,1.82,1.82,0,0,0-.56.09,1.54,1.54,0,0,0-.46.24l-.37-.72a2.19,2.19,0,0,1,.69-.31,3,3,0,0,1,.84-.12A1.83,1.83,0,0,1,36.88,1.69ZM36,4.13a.67.67,0,0,0,.29-.35V3.41h-.71q-.63,0-.63.42a.37.37,0,0,0,.15.31.71.71,0,0,0,.43.12A.83.83,0,0,0,36,4.13Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M41.76,1.35l-1.6,3.77a2,2,0,0,1-.61.86,1.46,1.46,0,0,1-.87.25,1.7,1.7,0,0,1-.54-.09,1.2,1.2,0,0,1-.45-.23l.38-.74a.77.77,0,0,0,.27.17.89.89,0,0,0,.31.06A.56.56,0,0,0,39,5.3,1,1,0,0,0,39.23,5l0,0L37.71,1.35h1.06l1,2.41,1-2.41Z\" style=\"fill: #231f20\"/>`,\r\n  thursday: ` <path d=\"M1.48,1.15H0V.28H4v.87H2.55V4.9H1.48Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M7.88,1.69a1.57,1.57,0,0,1,.41,1.17v2h-1V3a1,1,0,0,0-.18-.63.7.7,0,0,0-.54-.21.82.82,0,0,0-.62.25,1,1,0,0,0-.23.71V4.9h-1V0h1V1.72a1.49,1.49,0,0,1,.49-.32,1.91,1.91,0,0,1,.64-.11A1.47,1.47,0,0,1,7.88,1.69Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M12.87,1.35V4.9h-1V4.47a1.25,1.25,0,0,1-.49.36,1.54,1.54,0,0,1-.61.12,1.5,1.5,0,0,1-1.11-.4,1.63,1.63,0,0,1-.41-1.2v-2h1V3.2c0,.57.24.86.72.86a.8.8,0,0,0,.6-.24,1.07,1.07,0,0,0,.22-.72V1.35Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M15.4,1.43a1.81,1.81,0,0,1,.72-.14v1h-.23a.9.9,0,0,0-.69.25,1,1,0,0,0-.26.74V4.9h-1V1.35h1v.47A1,1,0,0,1,15.4,1.43Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M17.26,4.84a2.18,2.18,0,0,1-.68-.27l.35-.74a2.32,2.32,0,0,0,.57.25,2.5,2.5,0,0,0,.66.09c.43,0,.65-.11.65-.32a.23.23,0,0,0-.18-.22,2.76,2.76,0,0,0-.54-.11q-.43-.07-.72-.15a1.06,1.06,0,0,1-.49-.31.85.85,0,0,1-.21-.62,1,1,0,0,1,.19-.6,1.3,1.3,0,0,1,.57-.4,2.35,2.35,0,0,1,.88-.15,3.2,3.2,0,0,1,.75.09,2.24,2.24,0,0,1,.62.22l-.35.74a2,2,0,0,0-1-.27.92.92,0,0,0-.49.1.27.27,0,0,0-.17.23.23.23,0,0,0,.18.23,2.71,2.71,0,0,0,.57.13c.29.05.52.1.71.15a1.15,1.15,0,0,1,.48.3.85.85,0,0,1,.21.61,1,1,0,0,1-.2.59,1.33,1.33,0,0,1-.58.4,2.66,2.66,0,0,1-.9.14A3.56,3.56,0,0,1,17.26,4.84Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M24.2,0V4.9h-1V4.49A1.34,1.34,0,0,1,22.1,5a1.82,1.82,0,0,1-.9-.22,1.58,1.58,0,0,1-.64-.64,2,2,0,0,1-.23-1,2,2,0,0,1,.23-1,1.52,1.52,0,0,1,.64-.64,1.83,1.83,0,0,1,.9-.23,1.38,1.38,0,0,1,1.07.43V0ZM22.93,3.84a1,1,0,0,0,.26-.72,1,1,0,0,0-.26-.71.92.92,0,0,0-1.3,0,1,1,0,0,0-.26.71,1,1,0,0,0,.26.72.92.92,0,0,0,1.3,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M28,1.69a1.5,1.5,0,0,1,.44,1.18v2h-1V4.46A1.13,1.13,0,0,1,26.35,5a1.73,1.73,0,0,1-.71-.14,1.09,1.09,0,0,1-.46-.38A1,1,0,0,1,25,3.87a.9.9,0,0,1,.37-.77,1.89,1.89,0,0,1,1.15-.29h.82a.67.67,0,0,0-.21-.52.89.89,0,0,0-.61-.18A1.77,1.77,0,0,0,26,2.2a1.43,1.43,0,0,0-.46.24l-.37-.72a2.19,2.19,0,0,1,.69-.31,2.94,2.94,0,0,1,.84-.12A1.83,1.83,0,0,1,28,1.69Zm-.88,2.44a.72.72,0,0,0,.29-.35V3.41h-.71q-.63,0-.63.42a.37.37,0,0,0,.15.31.71.71,0,0,0,.43.12A.83.83,0,0,0,27.08,4.13Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M32.84,1.35l-1.6,3.77a2,2,0,0,1-.61.86,1.46,1.46,0,0,1-.87.25,1.7,1.7,0,0,1-.54-.09,1.2,1.2,0,0,1-.45-.23l.38-.74a.77.77,0,0,0,.27.17.89.89,0,0,0,.31.06.51.51,0,0,0,.34-.1A.85.85,0,0,0,30.31,5l0,0L28.79,1.35h1.06l1,2.41,1-2.41Z\" style=\"fill: #231f20\"/>`,\r\n  friday: `   <path d=\"M1.07,1.43V2.65H3.21v.86H1.07V5.19H0V.57H3.49v.86Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M5.63,1.72a1.81,1.81,0,0,1,.72-.13v1H6.12a.9.9,0,0,0-.69.25,1,1,0,0,0-.26.74V5.19h-1V1.64h1v.47A1.15,1.15,0,0,1,5.63,1.72Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M7.09,1A.52.52,0,0,1,6.91.57a.52.52,0,0,1,.18-.4A.65.65,0,0,1,7.55,0,.67.67,0,0,1,8,.16a.52.52,0,0,1,.17.39A.58.58,0,0,1,8,1a.68.68,0,0,1-.47.17A.65.65,0,0,1,7.09,1Zm0,.66h1V5.19H7Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M12.75.3V5.19h-1v-.4a1.36,1.36,0,0,1-1.1.46A1.84,1.84,0,0,1,9.75,5a1.58,1.58,0,0,1-.64-.64,2,2,0,0,1-.23-1,2,2,0,0,1,.23-1,1.52,1.52,0,0,1,.64-.64,1.84,1.84,0,0,1,.91-.23A1.34,1.34,0,0,1,11.72,2V.3ZM11.48,4.13a1,1,0,0,0,.26-.71,1,1,0,0,0-.26-.72.94.94,0,0,0-1.3,0,1,1,0,0,0-.26.72,1,1,0,0,0,.26.71.92.92,0,0,0,1.3,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M16.51,2A1.54,1.54,0,0,1,17,3.17v2H16V4.75a1.17,1.17,0,0,1-1.09.5,1.73,1.73,0,0,1-.71-.14,1,1,0,0,1-.45-.38,1,1,0,0,1-.16-.56A.92.92,0,0,1,14,3.39a1.89,1.89,0,0,1,1.15-.28h.82a.67.67,0,0,0-.2-.52.92.92,0,0,0-.62-.18,1.82,1.82,0,0,0-.56.09,1.54,1.54,0,0,0-.46.24L13.71,2a2.16,2.16,0,0,1,.7-.32,3.26,3.26,0,0,1,.83-.11A1.87,1.87,0,0,1,16.51,2Zm-.88,2.45a.65.65,0,0,0,.29-.36V3.71h-.71q-.63,0-.63.42a.36.36,0,0,0,.16.31.66.66,0,0,0,.42.11A.91.91,0,0,0,15.63,4.43Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M21.39,1.64l-1.6,3.77a1.87,1.87,0,0,1-.61.87,1.53,1.53,0,0,1-.86.25,1.71,1.71,0,0,1-.55-.09,1.09,1.09,0,0,1-.44-.24l.37-.73a.88.88,0,0,0,.28.17.8.8,0,0,0,.3.06.56.56,0,0,0,.35-.11.87.87,0,0,0,.23-.34l0,0L17.34,1.64H18.4l1,2.41,1-2.41Z\" style=\"fill: #231f20\"/>`,\r\n  saturday: `  <path d=\"M.82,4.83A2.5,2.5,0,0,1,0,4.44l.36-.8A2.77,2.77,0,0,0,1.07,4a2.6,2.6,0,0,0,.82.13A1.29,1.29,0,0,0,2.56,4a.4.4,0,0,0,.22-.36.32.32,0,0,0-.13-.27,1.29,1.29,0,0,0-.33-.18L1.78,3a7.53,7.53,0,0,1-.87-.25,1.44,1.44,0,0,1-.58-.4,1.1,1.1,0,0,1-.24-.74A1.33,1.33,0,0,1,.31.91,1.47,1.47,0,0,1,1,.39,2.63,2.63,0,0,1,2,.2,3.55,3.55,0,0,1,2.9.3a2.5,2.5,0,0,1,.74.31l-.33.81A2.56,2.56,0,0,0,2,1.06a1.16,1.16,0,0,0-.66.14.46.46,0,0,0-.21.38.38.38,0,0,0,.24.36,5.18,5.18,0,0,0,.76.23A5.77,5.77,0,0,1,3,2.42a1.36,1.36,0,0,1,.58.39,1.07,1.07,0,0,1,.24.73,1.26,1.26,0,0,1-.22.73A1.52,1.52,0,0,1,3,4.79,2.9,2.9,0,0,1,1.88,5,3.77,3.77,0,0,1,.82,4.83Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M8.21,1.35V4.9h-1V4.47a1.25,1.25,0,0,1-.49.36A1.51,1.51,0,0,1,6.13,5,1.5,1.5,0,0,1,5,4.55a1.63,1.63,0,0,1-.41-1.2v-2h1V3.2c0,.57.24.86.72.86A.78.78,0,0,0,7,3.82a1,1,0,0,0,.22-.72V1.35Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M12.48,1.69a1.57,1.57,0,0,1,.41,1.17v2h-1V3a1,1,0,0,0-.19-.63.66.66,0,0,0-.53-.21.82.82,0,0,0-.62.25,1,1,0,0,0-.23.71V4.9h-1V1.35h1v.41a1.31,1.31,0,0,1,.51-.34,1.59,1.59,0,0,1,.66-.13A1.49,1.49,0,0,1,12.48,1.69Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M17.54,0V4.9h-1V4.49A1.36,1.36,0,0,1,15.45,5a1.86,1.86,0,0,1-.91-.22,1.62,1.62,0,0,1-.63-.64,1.91,1.91,0,0,1-.23-1,1.9,1.9,0,0,1,.23-1,1.55,1.55,0,0,1,.63-.64,1.86,1.86,0,0,1,.91-.23,1.36,1.36,0,0,1,1.06.43V0ZM16.28,3.84a1,1,0,0,0,.25-.72,1,1,0,0,0-.25-.71.88.88,0,0,0-.65-.27.86.86,0,0,0-.65.27.93.93,0,0,0-.26.71,1,1,0,0,0,.26.72.86.86,0,0,0,.65.27A.88.88,0,0,0,16.28,3.84Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M21.3,1.69a1.47,1.47,0,0,1,.45,1.18v2h-1V4.46A1.13,1.13,0,0,1,19.7,5,1.73,1.73,0,0,1,19,4.81a1.09,1.09,0,0,1-.46-.38,1,1,0,0,1-.16-.56.91.91,0,0,1,.38-.77,1.87,1.87,0,0,1,1.15-.29h.82a.67.67,0,0,0-.21-.52.89.89,0,0,0-.61-.18,1.77,1.77,0,0,0-.56.09,1.43,1.43,0,0,0-.46.24l-.38-.72a2.36,2.36,0,0,1,.7-.31A2.94,2.94,0,0,1,20,1.29,1.78,1.78,0,0,1,21.3,1.69Zm-.87,2.44a.72.72,0,0,0,.29-.35V3.41H20q-.63,0-.63.42a.37.37,0,0,0,.15.31.69.69,0,0,0,.43.12A.85.85,0,0,0,20.43,4.13Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M26.19,1.35,24.58,5.12A1.88,1.88,0,0,1,24,6a1.46,1.46,0,0,1-.87.25,1.76,1.76,0,0,1-.55-.09,1.15,1.15,0,0,1-.44-.23l.38-.74a.77.77,0,0,0,.27.17.89.89,0,0,0,.31.06.53.53,0,0,0,.34-.1A.85.85,0,0,0,23.66,5v0L22.13,1.35H23.2l1,2.41,1-2.41Z\" style=\"fill: #231f20\"/>`,\r\n  sunday: ` <path d=\"M.82,4.83A2.5,2.5,0,0,1,0,4.44l.36-.8A2.77,2.77,0,0,0,1.07,4a2.6,2.6,0,0,0,.82.13A1.29,1.29,0,0,0,2.56,4a.4.4,0,0,0,.22-.36.32.32,0,0,0-.13-.27,1.29,1.29,0,0,0-.33-.18L1.78,3a7.53,7.53,0,0,1-.87-.25,1.44,1.44,0,0,1-.58-.4,1.1,1.1,0,0,1-.24-.74A1.33,1.33,0,0,1,.31.91,1.47,1.47,0,0,1,1,.39,2.63,2.63,0,0,1,2,.2,3.55,3.55,0,0,1,2.9.3a2.5,2.5,0,0,1,.74.31l-.33.81A2.56,2.56,0,0,0,2,1.06a1.16,1.16,0,0,0-.66.14.46.46,0,0,0-.21.38.38.38,0,0,0,.24.36,5.18,5.18,0,0,0,.76.23A5.77,5.77,0,0,1,3,2.42a1.36,1.36,0,0,1,.58.39,1.07,1.07,0,0,1,.24.73,1.26,1.26,0,0,1-.22.73A1.52,1.52,0,0,1,3,4.79,2.9,2.9,0,0,1,1.88,5,3.77,3.77,0,0,1,.82,4.83Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M8.21,1.35V4.9h-1V4.47a1.25,1.25,0,0,1-.49.36A1.51,1.51,0,0,1,6.13,5,1.5,1.5,0,0,1,5,4.55a1.63,1.63,0,0,1-.41-1.2v-2h1V3.2c0,.57.24.86.72.86A.78.78,0,0,0,7,3.82a1,1,0,0,0,.22-.72V1.35Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M12.48,1.69a1.57,1.57,0,0,1,.41,1.17v2h-1V3a1,1,0,0,0-.19-.63.66.66,0,0,0-.53-.21.82.82,0,0,0-.62.25,1,1,0,0,0-.23.71V4.9h-1V1.35h1v.41a1.31,1.31,0,0,1,.51-.34,1.59,1.59,0,0,1,.66-.13A1.49,1.49,0,0,1,12.48,1.69Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M17.54,0V4.9h-1V4.49A1.36,1.36,0,0,1,15.45,5a1.86,1.86,0,0,1-.91-.22,1.62,1.62,0,0,1-.63-.64,1.91,1.91,0,0,1-.23-1,1.9,1.9,0,0,1,.23-1,1.55,1.55,0,0,1,.63-.64,1.86,1.86,0,0,1,.91-.23,1.36,1.36,0,0,1,1.06.43V0ZM16.28,3.84a1,1,0,0,0,.25-.72,1,1,0,0,0-.25-.71.88.88,0,0,0-.65-.27.86.86,0,0,0-.65.27.93.93,0,0,0-.26.71,1,1,0,0,0,.26.72.86.86,0,0,0,.65.27A.88.88,0,0,0,16.28,3.84Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M21.3,1.69a1.47,1.47,0,0,1,.45,1.18v2h-1V4.46A1.13,1.13,0,0,1,19.7,5,1.73,1.73,0,0,1,19,4.81a1.09,1.09,0,0,1-.46-.38,1,1,0,0,1-.16-.56.91.91,0,0,1,.38-.77,1.87,1.87,0,0,1,1.15-.29h.82a.67.67,0,0,0-.21-.52.89.89,0,0,0-.61-.18,1.77,1.77,0,0,0-.56.09,1.43,1.43,0,0,0-.46.24l-.38-.72a2.36,2.36,0,0,1,.7-.31A2.94,2.94,0,0,1,20,1.29,1.78,1.78,0,0,1,21.3,1.69Zm-.87,2.44a.72.72,0,0,0,.29-.35V3.41H20q-.63,0-.63.42a.37.37,0,0,0,.15.31.69.69,0,0,0,.43.12A.85.85,0,0,0,20.43,4.13Z\" style=\"fill: #231f20\"/>\r\n      <path d=\"M26.19,1.35,24.58,5.12A1.88,1.88,0,0,1,24,6a1.46,1.46,0,0,1-.87.25,1.76,1.76,0,0,1-.55-.09,1.15,1.15,0,0,1-.44-.23l.38-.74a.77.77,0,0,0,.27.17.89.89,0,0,0,.31.06.53.53,0,0,0,.34-.1A.85.85,0,0,0,23.66,5v0L22.13,1.35H23.2l1,2.41,1-2.41Z\" style=\"fill: #231f20\"/>`,\r\n};\r\n\r\nexport default weekDaysMP;\r\n","const digitsSP = [\r\n  ` <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M35.729494,11.891936v20.65918h-4.780762V15.72885h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M41.038335,28.544306v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M39.533208,22.104878c.963867,1.052734,1.445801,2.355469,1.445801,3.910156,0,1.200195-.314941,2.306641-.944336,3.320312-.629883,1.012695-1.588867,1.825195-2.877441,2.43457s-2.867676,.915039-4.736816,.915039c-1.456055,0-2.887207-.192383-4.293945-.576172s-2.602051-.929688-3.585449-1.637695l1.858887-3.65918c.787109,.589844,1.697266,1.047852,2.72998,1.37207,1.033203,.324219,2.090332,.487305,3.172852,.487305,1.199707,0,2.144043-.231445,2.833008-.694336,.688477-.461914,1.032715-1.116211,1.032715-1.961914,0-1.692383-1.288574-2.538086-3.865723-2.538086h-2.184082v-3.158203l4.25-4.810547h-8.794922v-3.836914h14.460938v3.099609l-4.662598,5.311523c1.80957,.295898,3.196777,.969727,4.161133,2.022461Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M42.336675,28.142185h-3.364258v4.337891h-4.663086v-4.337891h-11.125977v-3.217773l9.73877-13.103516h5.01709l-9.030762,12.424805h5.54834v-3.865234h4.515625v3.865234h3.364258v3.896484Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M38.913579,21.216271c1.386719,1.161133,2.080566,2.714844,2.080566,4.662109,0,1.259766-.314941,2.405273-.944336,3.438477-.629883,1.033203-1.589355,1.859375-2.877441,2.479492-1.289062,.619141-2.877441,.929688-4.766602,.929688-1.456055,0-2.887695-.192383-4.293945-.576172-1.406738-.383789-2.602051-.929688-3.585938-1.637695l1.88916-3.65918c.786621,.589844,1.691895,1.047852,2.714844,1.37207s2.075684,.487305,3.158203,.487305c1.199707,0,2.144043-.236328,2.833008-.708984,.688477-.47168,1.032715-1.130859,1.032715-1.976562,0-.885742-.358887-1.554688-1.077148-2.006836-.718262-.453125-1.962402-.679688-3.733398-.679688h-5.282715l1.0625-11.62793h12.602051v3.836914h-8.617676l-.324707,3.925781h1.682129c2.911621,0,5.061523,.580078,6.44873,1.741211Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M37.777349,20.361976c1.081543,.53125,1.9375,1.28418,2.567383,2.257812,.629395,.973633,.944336,2.100586,.944336,3.378906,0,1.37793-.344238,2.587891-1.032715,3.629883-.688965,1.042969-1.628418,1.844727-2.818359,2.405273-1.190918,.561523-2.513672,.841797-3.969727,.841797-2.89209,0-5.154785-.885742-6.787598-2.65625-1.633301-1.770508-2.449707-4.298828-2.449707-7.584961,0-2.34082,.442871-4.347656,1.328125-6.020508,.885254-1.671875,2.119629-2.941406,3.703613-3.806641,1.583984-.866211,3.418457-1.298828,5.504395-1.298828,1.101562,0,2.158691,.123047,3.172363,.369141,1.013184,.246094,1.874023,.594727,2.58252,1.046875l-1.770996,3.512695c-1.022949-.688477-2.312012-1.033203-3.865723-1.033203-1.751465,0-3.138672,.511719-4.161621,1.53418-1.022949,1.023438-1.574219,2.508789-1.652344,4.457031,1.219727-1.219727,2.921387-1.830078,5.105469-1.830078,1.317871,0,2.518066,.265625,3.600586,.796875Zm-2.080566,8.116211c.63916-.550781,.958984-1.298828,.958984-2.243164s-.319824-1.697266-.958984-2.257812c-.639648-.560547-1.490723-.84082-2.552734-.84082-1.043457,0-1.898926,.290039-2.567871,.870117-.668945,.581055-1.003418,1.324219-1.003418,2.228516,0,.905273,.324707,1.642578,.974121,2.213867,.648926,.570312,1.534668,.855469,2.655762,.855469,1.022949,0,1.854492-.275391,2.494141-.826172Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M41.038335,11.75165v3.099609l-7.67334,17.55957h-5.193848l7.407227-16.762695h-6.84668v3.364258h-4.25v-7.260742h16.556641Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M40.65479,23.705949c.541016,.826172,.811523,1.780273,.811523,2.862305,0,1.279297-.364258,2.395508-1.091797,3.349609-.728516,.955078-1.751465,1.692383-3.069336,2.213867-1.318359,.520508-2.84375,.782227-4.574707,.782227-1.731445,0-3.251465-.261719-4.55957-.782227-1.308594-.521484-2.321777-1.258789-3.039551-2.213867-.71875-.954102-1.077637-2.070312-1.077637-3.349609,0-1.082031,.270508-2.036133,.812012-2.862305,.540527-.826172,1.312988-1.495117,2.316406-2.006836-.76709-.472656-1.357422-1.067383-1.770508-1.786133-.413086-.717773-.620117-1.539062-.620117-2.463867,0-1.200195,.334473-2.243164,1.003418-3.12793,.668945-.885742,1.603516-1.569336,2.803711-2.051758,1.200195-.481445,2.577637-.722656,4.131836-.722656,1.57373,0,2.966309,.241211,4.17627,.722656,1.209961,.482422,2.149414,1.166016,2.818359,2.051758,.668457,.884766,1.003418,1.927734,1.003418,3.12793,0,.924805-.206543,1.746094-.619629,2.463867-.413574,.71875-1.013672,1.313477-1.800293,1.786133,1.022461,.511719,1.804688,1.180664,2.346191,2.006836Zm-5.076172,4.883789c.698242-.541016,1.047852-1.263672,1.047852-2.168945,0-.904297-.349609-1.623047-1.047852-2.154297-.69873-.53125-1.647949-.796875-2.848145-.796875-1.180176,0-2.115234,.265625-2.803711,.796875-.688965,.53125-1.032715,1.25-1.032715,2.154297,0,.924805,.34375,1.652344,1.032715,2.183594,.688477,.53125,1.623535,.796875,2.803711,.796875,1.200195,0,2.149414-.269531,2.848145-.811523Zm-5.164551-12.837891c-.580566,.462891-.870605,1.097656-.870605,1.904297,0,.787109,.284668,1.40625,.855469,1.858398,.570801,.453125,1.347656,.679688,2.331543,.679688s1.770996-.226562,2.361328-.679688c.589844-.452148,.885254-1.071289,.885254-1.858398,0-.806641-.29541-1.441406-.885254-1.904297-.590332-.461914-1.377441-.693359-2.361328-.693359-.964355,0-1.736328,.231445-2.316406,.693359Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M38.83936,14.078863c1.632812,1.760742,2.449707,4.293945,2.449707,7.598633,0,2.341797-.437988,4.348633-1.313477,6.020508-.875488,1.672852-2.109863,2.942383-3.703613,3.807617-1.59375,.866211-3.433594,1.298828-5.519043,1.298828-1.102051,0-2.154297-.123047-3.157715-.369141s-1.859375-.594727-2.567383-1.047852l1.770508-3.511719c1.003418,.688477,2.291992,1.033203,3.866211,1.033203,1.750977,0,3.138184-.516602,4.161133-1.549805s1.574219-2.523438,1.652832-4.47168c-1.239746,1.240234-2.951172,1.859375-5.135254,1.859375-1.318359,0-2.518555-.265625-3.600586-.796875s-1.937988-1.283203-2.567383-2.256836c-.629883-.974609-.944336-2.100586-.944336-3.379883,0-1.376953,.34375-2.586914,1.032715-3.629883,.688477-1.042969,1.62793-1.844727,2.818359-2.405273s2.513184-.84082,3.969727-.84082c2.89209,0,5.154297,.880859,6.787598,2.641602Zm-3.880859,6.226562c.65918-.580078,.98877-1.323242,.98877-2.227539,0-.905273-.319824-1.642578-.958984-2.213867-.639648-.570312-1.52002-.855469-2.641602-.855469-1.022949,0-1.854492,.275391-2.493652,.826172-.639648,.550781-.958984,1.297852-.958984,2.243164,0,.944336,.319336,1.696289,.958984,2.256836,.63916,.561523,1.490234,.841797,2.552734,.841797,1.04248,0,1.893555-.290039,2.552734-.871094Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M26.562261,11.682405v20.65918h-4.780762V15.519319h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M34.442144,31.426545c-1.337891-.845703-2.385742-2.070312-3.143066-3.673828s-1.13623-3.516602-1.13623-5.740234,.378906-4.136719,1.13623-5.740234,1.805176-2.828125,3.143066-3.674805c1.337891-.845703,2.862793-1.268555,4.574707-1.268555,1.711426,0,3.23584,.422852,4.574219,1.268555,1.337891,.84668,2.385254,2.071289,3.143066,3.674805,.757324,1.603516,1.13623,3.516602,1.13623,5.740234s-.378906,4.136719-1.13623,5.740234c-.757812,1.603516-1.805176,2.828125-3.143066,3.673828-1.338379,.84668-2.862793,1.269531-4.574219,1.269531-1.711914,0-3.236816-.422852-4.574707-1.269531Zm7.540527-4.397461c.717773-1.082031,1.077148-2.753906,1.077148-5.016602s-.359375-3.935547-1.077148-5.017578c-.718262-1.082031-1.707031-1.623047-2.96582-1.623047-1.239746,0-2.21875,.541016-2.936523,1.623047-.71875,1.082031-1.077148,2.754883-1.077148,5.017578s.358398,3.93457,1.077148,5.016602c.717773,1.083008,1.696777,1.623047,2.936523,1.623047,1.258789,0,2.247559-.540039,2.96582-1.623047Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M31.43189,11.832016v20.65918h-4.780762V15.66893h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M43.000737,11.832016v20.65918h-4.780762V15.66893h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M27.698491,11.72169v20.65918h-4.780762V15.558604h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M46.734136,28.485362v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M27.787114,11.870324v20.65918h-4.780762V15.707238h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M45.199712,22.303918c.963867,1.052734,1.445801,2.355469,1.445801,3.910156,0,1.200195-.314941,2.306641-.944336,3.320312-.629883,1.012695-1.588867,1.825195-2.877441,2.43457s-2.867676,.915039-4.736816,.915039c-1.456055,0-2.887207-.192383-4.293945-.576172s-2.602051-.929688-3.585449-1.637695l1.858887-3.65918c.787109,.589844,1.697266,1.047852,2.72998,1.37207,1.033203,.324219,2.090332,.487305,3.172852,.487305,1.199707,0,2.144043-.231445,2.833008-.694336,.688477-.461914,1.032715-1.116211,1.032715-1.961914,0-1.692383-1.288574-2.538086-3.865723-2.538086h-2.184082v-3.158203l4.25-4.810547h-8.794922v-3.836914h14.460938v3.099609l-4.662598,5.311523c1.80957,.295898,3.196777,.969727,4.161133,2.022461Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M25.95728,11.75984v20.65918h-4.780762V15.596754h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M48.475347,28.081129h-3.364258v4.337891h-4.663086v-4.337891h-11.125977v-3.217773l9.73877-13.103516h5.01709l-9.030762,12.424805h5.54834v-3.865234h4.515625v3.865234h3.364258v3.896484Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M27.609868,11.911404v20.65918h-4.780762V15.748318h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M44.742192,21.415311c1.386719,1.161133,2.080566,2.714844,2.080566,4.662109,0,1.259766-.314941,2.405273-.944336,3.438477-.629883,1.033203-1.589355,1.859375-2.877441,2.479492-1.289062,.619141-2.877441,.929688-4.766602,.929688-1.456055,0-2.887695-.192383-4.293945-.576172-1.406738-.383789-2.602051-.929688-3.585938-1.637695l1.88916-3.65918c.786621,.589844,1.691895,1.047852,2.714844,1.37207s2.075684,.487305,3.158203,.487305c1.199707,0,2.144043-.236328,2.833008-.708984,.688477-.47168,1.032715-1.130859,1.032715-1.976562,0-.885742-.358887-1.554688-1.077148-2.006836-.718262-.453125-1.962402-.679688-3.733398-.679688h-5.282715l1.0625-11.62793h12.602051v3.836914h-8.617676l-.324707,3.925781h1.682129c2.911621,0,5.061523,.580078,6.44873,1.741211Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M26.886968,11.802055v20.65918h-4.780762V15.638969h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M44.03394,20.302055c1.081543,.53125,1.9375,1.28418,2.567383,2.257812,.629395,.973633,.944336,2.100586,.944336,3.378906,0,1.37793-.344238,2.587891-1.032715,3.629883-.688965,1.042969-1.628418,1.844727-2.818359,2.405273-1.190918,.561523-2.513672,.841797-3.969727,.841797-2.89209,0-5.154785-.885742-6.787598-2.65625-1.633301-1.770508-2.449707-4.298828-2.449707-7.584961,0-2.34082,.442871-4.347656,1.328125-6.020508,.885254-1.671875,2.119629-2.941406,3.703613-3.806641,1.583984-.866211,3.418457-1.298828,5.504395-1.298828,1.101562,0,2.158691,.123047,3.172363,.369141,1.013184,.246094,1.874023,.594727,2.58252,1.046875l-1.770996,3.512695c-1.022949-.688477-2.312012-1.033203-3.865723-1.033203-1.751465,0-3.138672,.511719-4.161621,1.53418-1.022949,1.023438-1.574219,2.508789-1.652344,4.457031,1.219727-1.219727,2.921387-1.830078,5.105469-1.830078,1.317871,0,2.518066,.265625,3.600586,.796875Zm-2.080566,8.116211c.63916-.550781,.958984-1.298828,.958984-2.243164s-.319824-1.697266-.958984-2.257812c-.639648-.560547-1.490723-.84082-2.552734-.84082-1.043457,0-1.898926,.290039-2.567871,.870117-.668945,.581055-1.003418,1.324219-1.003418,2.228516,0,.905273,.324707,1.642578,.974121,2.213867,.648926,.570312,1.534668,.855469,2.655762,.855469,1.022949,0,1.854492-.275391,2.494141-.826172Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M27.329595,11.691571v20.65918h-4.780762V15.528485h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M47.103032,11.691571v3.099609l-7.67334,17.55957h-5.193848l7.407227-16.762695h-6.84668v3.364258h-4.25v-7.260742h16.556641Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M26.768804,11.842159v20.65918h-4.780762V15.679073h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M46.8523,23.647823c.541016,.826172,.811523,1.780273,.811523,2.862305,0,1.279297-.364258,2.395508-1.091797,3.349609-.728516,.955078-1.751465,1.692383-3.069336,2.213867-1.318359,.520508-2.84375,.782227-4.574707,.782227-1.731445,0-3.251465-.261719-4.55957-.782227-1.308594-.521484-2.321777-1.258789-3.039551-2.213867-.71875-.954102-1.077637-2.070312-1.077637-3.349609,0-1.082031,.270508-2.036133,.812012-2.862305,.540527-.826172,1.312988-1.495117,2.316406-2.006836-.76709-.472656-1.357422-1.067383-1.770508-1.786133-.413086-.717773-.620117-1.539062-.620117-2.463867,0-1.200195,.334473-2.243164,1.003418-3.12793,.668945-.885742,1.603516-1.569336,2.803711-2.051758,1.200195-.481445,2.577637-.722656,4.131836-.722656,1.57373,0,2.966309,.241211,4.17627,.722656,1.209961,.482422,2.149414,1.166016,2.818359,2.051758,.668457,.884766,1.003418,1.927734,1.003418,3.12793,0,.924805-.206543,1.746094-.619629,2.463867-.413574,.71875-1.013672,1.313477-1.800293,1.786133,1.022461,.511719,1.804688,1.180664,2.346191,2.006836Zm-5.076172,4.883789c.698242-.541016,1.047852-1.263672,1.047852-2.168945,0-.904297-.349609-1.623047-1.047852-2.154297-.69873-.53125-1.647949-.796875-2.848145-.796875-1.180176,0-2.115234,.265625-2.803711,.796875-.688965,.53125-1.032715,1.25-1.032715,2.154297,0,.924805,.34375,1.652344,1.032715,2.183594,.688477,.53125,1.623535,.796875,2.803711,.796875,1.200195,0,2.149414-.269531,2.848145-.811523Zm-5.164551-12.837891c-.580566,.462891-.870605,1.097656-.870605,1.904297,0,.787109,.284668,1.40625,.855469,1.858398,.570801,.453125,1.347656,.679688,2.331543,.679688s1.770996-.226562,2.361328-.679688c.589844-.452148,.885254-1.071289,.885254-1.858398,0-.806641-.29541-1.441406-.885254-1.904297-.590332-.461914-1.377441-.693359-2.361328-.693359-.964355,0-1.736328,.231445-2.316406,.693359Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M27.167241,11.72988v20.65918h-4.780762V15.566794h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M44.815679,14.017966c1.632812,1.760742,2.449707,4.293945,2.449707,7.598633,0,2.341797-.437988,4.348633-1.313477,6.020508-.875488,1.672852-2.109863,2.942383-3.703613,3.807617-1.59375,.866211-3.433594,1.298828-5.519043,1.298828-1.102051,0-2.154297-.123047-3.157715-.369141s-1.859375-.594727-2.567383-1.047852l1.770508-3.511719c1.003418,.688477,2.291992,1.033203,3.866211,1.033203,1.750977,0,3.138184-.516602,4.161133-1.549805s1.574219-2.523438,1.652832-4.47168c-1.239746,1.240234-2.951172,1.859375-5.135254,1.859375-1.318359,0-2.518555-.265625-3.600586-.796875s-1.937988-1.283203-2.567383-2.256836c-.629883-.974609-.944336-2.100586-.944336-3.379883,0-1.376953,.34375-2.586914,1.032715-3.629883,.688477-1.042969,1.62793-1.844727,2.818359-2.405273s2.513184-.84082,3.969727-.84082c2.89209,0,5.154297,.880859,6.787598,2.641602Zm-3.880859,6.226562c.65918-.580078,.98877-1.323242,.98877-2.227539,0-.905273-.319824-1.642578-.958984-2.213867-.639648-.570312-1.52002-.855469-2.641602-.855469-1.022949,0-1.854492,.275391-2.493652,.826172-.639648,.550781-.958984,1.297852-.958984,2.243164,0,.944336,.319336,1.696289,.958984,2.256836,.63916,.561523,1.490234,.841797,2.552734,.841797,1.04248,0,1.893555-.290039,2.552734-.871094Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M31.225591,28.643163v3.895508H15.613774v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M37.422856,31.623632c-1.337891-.845703-2.385742-2.070312-3.143066-3.673828s-1.13623-3.516602-1.13623-5.740234,.378906-4.136719,1.13623-5.740234,1.805176-2.828125,3.143066-3.674805c1.337891-.845703,2.862793-1.268555,4.574707-1.268555,1.711426,0,3.23584,.422852,4.574219,1.268555,1.337891,.84668,2.385254,2.071289,3.143066,3.674805,.757324,1.603516,1.13623,3.516602,1.13623,5.740234s-.378906,4.136719-1.13623,5.740234c-.757812,1.603516-1.805176,2.828125-3.143066,3.673828-1.338379,.84668-2.862793,1.269531-4.574219,1.269531-1.711914,0-3.236816-.422852-4.574707-1.269531Zm7.540527-4.397461c.717773-1.082031,1.077148-2.753906,1.077148-5.016602s-.359375-3.935547-1.077148-5.017578c-.718262-1.082031-1.707031-1.623047-2.96582-1.623047-1.239746,0-2.21875,.541016-2.936523,1.623047-.71875,1.082031-1.077148,2.754883-1.077148,5.017578s.358398,3.93457,1.077148,5.016602c.717773,1.083008,1.696777,1.623047,2.936523,1.623047,1.258789,0,2.247559-.540039,2.96582-1.623047Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M36.065679,28.534791v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M46.010991,11.771119v20.65918h-4.780762V15.608033h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M32.33228,28.425283v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M49.74439,28.425283v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M32.420903,28.573917v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M48.209966,22.243839c.963867,1.052734,1.445801,2.355469,1.445801,3.910156,0,1.200195-.314941,2.306641-.944336,3.320312-.629883,1.012695-1.588867,1.825195-2.877441,2.43457s-2.867676,.915039-4.736816,.915039c-1.456055,0-2.887207-.192383-4.293945-.576172s-2.602051-.929688-3.585449-1.637695l1.858887-3.65918c.787109,.589844,1.697266,1.047852,2.72998,1.37207,1.033203,.324219,2.090332,.487305,3.172852,.487305,1.199707,0,2.144043-.231445,2.833008-.694336,.688477-.461914,1.032715-1.116211,1.032715-1.961914,0-1.692383-1.288574-2.538086-3.865723-2.538086h-2.184082v-3.158203l4.25-4.810547h-8.794922v-3.836914h14.460938v3.099609l-4.662598,5.311523c1.80957,.295898,3.196777,.969727,4.161133,2.022461Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M30.73853,28.465545v3.895508H15.126714v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M51.33814,28.023162h-3.364258v4.337891h-4.663086v-4.337891h-11.125977v-3.217773l9.73877-13.103516h5.01709l-9.030762,12.424805h5.54834v-3.865234h4.515625v3.865234h3.364258v3.896484Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M32.243657,28.616133v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M47.752446,21.356367c1.386719,1.161133,2.080566,2.714844,2.080566,4.662109,0,1.259766-.314941,2.405273-.944336,3.438477-.629883,1.033203-1.589355,1.859375-2.877441,2.479492-1.289062,.619141-2.877441,.929688-4.766602,.929688-1.456055,0-2.887695-.192383-4.293945-.576172-1.406738-.383789-2.602051-.929688-3.585938-1.637695l1.88916-3.65918c.786621,.589844,1.691895,1.047852,2.714844,1.37207s2.075684,.487305,3.158203,.487305c1.199707,0,2.144043-.236328,2.833008-.708984,.688477-.47168,1.032715-1.130859,1.032715-1.976562,0-.885742-.358887-1.554688-1.077148-2.006836-.718262-.453125-1.962402-.679688-3.733398-.679688h-5.282715l1.0625-11.62793h12.602051v3.836914h-8.617676l-.324707,3.925781h1.682129c2.911621,0,5.061523,.580078,6.44873,1.741211Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M31.550298,28.505648v3.895508H15.938481v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M47.014653,20.241976c1.081543,.53125,1.9375,1.28418,2.567383,2.257812,.629395,.973633,.944336,2.100586,.944336,3.378906,0,1.37793-.344238,2.587891-1.032715,3.629883-.688965,1.042969-1.628418,1.844727-2.818359,2.405273-1.190918,.561523-2.513672,.841797-3.969727,.841797-2.89209,0-5.154785-.885742-6.787598-2.65625-1.633301-1.770508-2.449707-4.298828-2.449707-7.584961,0-2.34082,.442871-4.347656,1.328125-6.020508,.885254-1.671875,2.119629-2.941406,3.703613-3.806641,1.583984-.866211,3.418457-1.298828,5.504395-1.298828,1.101562,0,2.158691,.123047,3.172363,.369141,1.013184,.246094,1.874023,.594727,2.58252,1.046875l-1.770996,3.512695c-1.022949-.688477-2.312012-1.033203-3.865723-1.033203-1.751465,0-3.138672,.511719-4.161621,1.53418-1.022949,1.023438-1.574219,2.508789-1.652344,4.457031,1.219727-1.219727,2.921387-1.830078,5.105469-1.830078,1.317871,0,2.518066,.265625,3.600586,.796875Zm-2.080566,8.116211c.63916-.550781,.958984-1.298828,.958984-2.243164s-.319824-1.697266-.958984-2.257812c-.639648-.560547-1.490723-.84082-2.552734-.84082-1.043457,0-1.898926,.290039-2.567871,.870117-.668945,.581055-1.003418,1.324219-1.003418,2.228516,0,.905273,.324707,1.642578,.974121,2.213867,.648926,.570312,1.534668,.855469,2.655762,.855469,1.022949,0,1.854492-.275391,2.494141-.826172Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M31.992925,28.655259v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M50.083745,11.891587v3.099609l-7.67334,17.55957h-5.193848l7.407227-16.762695h-6.84668v3.364258h-4.25v-7.260742h16.556641Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M31.402593,28.542981v3.895508H15.790776v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M49.862554,23.584973c.541016,.826172,.811523,1.780273,.811523,2.862305,0,1.279297-.364258,2.395508-1.091797,3.349609-.728516,.955078-1.751465,1.692383-3.069336,2.213867-1.318359,.520508-2.84375,.782227-4.574707,.782227-1.731445,0-3.251465-.261719-4.55957-.782227-1.308594-.521484-2.321777-1.258789-3.039551-2.213867-.71875-.954102-1.077637-2.070312-1.077637-3.349609,0-1.082031,.270508-2.036133,.812012-2.862305,.540527-.826172,1.312988-1.495117,2.316406-2.006836-.76709-.472656-1.357422-1.067383-1.770508-1.786133-.413086-.717773-.620117-1.539062-.620117-2.463867,0-1.200195,.334473-2.243164,1.003418-3.12793,.668945-.885742,1.603516-1.569336,2.803711-2.051758,1.200195-.481445,2.577637-.722656,4.131836-.722656,1.57373,0,2.966309,.241211,4.17627,.722656,1.209961,.482422,2.149414,1.166016,2.818359,2.051758,.668457,.884766,1.003418,1.927734,1.003418,3.12793,0,.924805-.206543,1.746094-.619629,2.463867-.413574,.71875-1.013672,1.313477-1.800293,1.786133,1.022461,.511719,1.804688,1.180664,2.346191,2.006836Zm-5.076172,4.883789c.698242-.541016,1.047852-1.263672,1.047852-2.168945,0-.904297-.349609-1.623047-1.047852-2.154297-.69873-.53125-1.647949-.796875-2.848145-.796875-1.180176,0-2.115234,.265625-2.803711,.796875-.688965,.53125-1.032715,1.25-1.032715,2.154297,0,.924805,.34375,1.652344,1.032715,2.183594,.688477,.53125,1.623535,.796875,2.803711,.796875,1.200195,0,2.149414-.269531,2.848145-.811523Zm-5.164551-12.837891c-.580566,.462891-.870605,1.097656-.870605,1.904297,0,.787109,.284668,1.40625,.855469,1.858398,.570801,.453125,1.347656,.679688,2.331543,.679688s1.770996-.226562,2.361328-.679688c.589844-.452148,.885254-1.071289,.885254-1.858398,0-.806641-.29541-1.441406-.885254-1.904297-.590332-.461914-1.377441-.693359-2.361328-.693359-.964355,0-1.736328,.231445-2.316406,.693359Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M31.80103,28.434608v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M47.825933,13.959022c1.632812,1.760742,2.449707,4.293945,2.449707,7.598633,0,2.341797-.437988,4.348633-1.313477,6.020508-.875488,1.672852-2.109863,2.942383-3.703613,3.807617-1.59375,.866211-3.433594,1.298828-5.519043,1.298828-1.102051,0-2.154297-.123047-3.157715-.369141s-1.859375-.594727-2.567383-1.047852l1.770508-3.511719c1.003418,.688477,2.291992,1.033203,3.866211,1.033203,1.750977,0,3.138184-.516602,4.161133-1.549805s1.574219-2.523438,1.652832-4.47168c-1.239746,1.240234-2.951172,1.859375-5.135254,1.859375-1.318359,0-2.518555-.265625-3.600586-.796875s-1.937988-1.283203-2.567383-2.256836c-.629883-.974609-.944336-2.100586-.944336-3.379883,0-1.376953,.34375-2.586914,1.032715-3.629883,.688477-1.042969,1.62793-1.844727,2.818359-2.405273s2.513184-.84082,3.969727-.84082c2.89209,0,5.154297,.880859,6.787598,2.641602Zm-3.880859,6.226562c.65918-.580078,.98877-1.323242,.98877-2.227539,0-.905273-.319824-1.642578-.958984-2.213867-.639648-.570312-1.52002-.855469-2.641602-.855469-1.022949,0-1.854492,.275391-2.493652,.826172-.639648,.550781-.958984,1.297852-.958984,2.243164,0,.944336,.319336,1.696289,.958984,2.256836,.63916,.561523,1.490234,.841797,2.552734,.841797,1.04248,0,1.893555-.290039,2.552734-.871094Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M29.572759,22.253165c.963867,1.052734,1.445801,2.355469,1.445801,3.910156,0,1.200195-.314941,2.306641-.944336,3.320312-.629883,1.012695-1.588867,1.825195-2.877441,2.43457s-2.867676,.915039-4.736816,.915039c-1.456055,0-2.887207-.192383-4.293945-.576172s-2.602051-.929688-3.585449-1.637695l1.858887-3.65918c.787109,.589844,1.697266,1.047852,2.72998,1.37207,1.033203,.324219,2.090332,.487305,3.172852,.487305,1.199707,0,2.144043-.231445,2.833008-.694336,.688477-.461914,1.032715-1.116211,1.032715-1.961914,0-1.692383-1.288574-2.538086-3.865723-2.538086h-2.184082v-3.158203l4.25-4.810547H15.613286v-3.836914h14.460938v3.099609l-4.662598,5.311523c1.80957,.295898,3.196777,.969727,4.161133,2.022461Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M37.511235,31.563711c-1.337891-.845703-2.385742-2.070312-3.143066-3.673828s-1.13623-3.516602-1.13623-5.740234,.378906-4.136719,1.13623-5.740234,1.805176-2.828125,3.143066-3.674805c1.337891-.845703,2.862793-1.268555,4.574707-1.268555,1.711426,0,3.23584,.422852,4.574219,1.268555,1.337891,.84668,2.385254,2.071289,3.143066,3.674805,.757324,1.603516,1.13623,3.516602,1.13623,5.740234s-.378906,4.136719-1.13623,5.740234c-.757812,1.603516-1.805176,2.828125-3.143066,3.673828-1.338379,.84668-2.862793,1.269531-4.574219,1.269531-1.711914,0-3.236816-.422852-4.574707-1.269531Zm7.540527-4.397461c.717773-1.082031,1.077148-2.753906,1.077148-5.016602s-.359375-3.935547-1.077148-5.017578c-.718262-1.082031-1.707031-1.623047-2.96582-1.623047-1.239746,0-2.21875,.541016-2.936523,1.623047-.71875,1.082031-1.077148,2.754883-1.077148,5.017578s.358398,3.93457,1.077148,5.016602c.717773,1.083008,1.696777,1.623047,2.936523,1.623047,1.258789,0,2.247559-.540039,2.96582-1.623047Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M34.442388,22.145769c.963867,1.052734,1.445801,2.355469,1.445801,3.910156,0,1.200195-.314941,2.306641-.944336,3.320312-.629883,1.012695-1.588867,1.825195-2.877441,2.43457s-2.867676,.915039-4.736816,.915039c-1.456055,0-2.887207-.192383-4.293945-.576172s-2.602051-.929688-3.585449-1.637695l1.858887-3.65918c.787109,.589844,1.697266,1.047852,2.72998,1.37207,1.033203,.324219,2.090332,.487305,3.172852,.487305,1.199707,0,2.144043-.231445,2.833008-.694336,.688477-.461914,1.032715-1.116211,1.032715-1.961914,0-1.692383-1.288574-2.538086-3.865723-2.538086h-2.184082v-3.158203l4.25-4.810547h-8.794922v-3.836914h14.460938v3.099609l-4.662598,5.311523c1.80957,.295898,3.196777,.969727,4.161133,2.022461Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M46.069829,11.712175v20.65918h-4.780762V15.549089h-4.131836v-3.836914h8.912598Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n];\r\n\r\nexport default digitsSP;\r\n","const secondaryDigitsSP = [\r\n  ` <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M35.729494,11.891936v20.65918h-4.780762V15.72885h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M41.038335,28.544306v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M39.533208,22.104878c.963867,1.052734,1.445801,2.355469,1.445801,3.910156,0,1.200195-.314941,2.306641-.944336,3.320312-.629883,1.012695-1.588867,1.825195-2.877441,2.43457s-2.867676,.915039-4.736816,.915039c-1.456055,0-2.887207-.192383-4.293945-.576172s-2.602051-.929688-3.585449-1.637695l1.858887-3.65918c.787109,.589844,1.697266,1.047852,2.72998,1.37207,1.033203,.324219,2.090332,.487305,3.172852,.487305,1.199707,0,2.144043-.231445,2.833008-.694336,.688477-.461914,1.032715-1.116211,1.032715-1.961914,0-1.692383-1.288574-2.538086-3.865723-2.538086h-2.184082v-3.158203l4.25-4.810547h-8.794922v-3.836914h14.460938v3.099609l-4.662598,5.311523c1.80957,.295898,3.196777,.969727,4.161133,2.022461Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M42.336675,28.142185h-3.364258v4.337891h-4.663086v-4.337891h-11.125977v-3.217773l9.73877-13.103516h5.01709l-9.030762,12.424805h5.54834v-3.865234h4.515625v3.865234h3.364258v3.896484Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M38.913579,21.216271c1.386719,1.161133,2.080566,2.714844,2.080566,4.662109,0,1.259766-.314941,2.405273-.944336,3.438477-.629883,1.033203-1.589355,1.859375-2.877441,2.479492-1.289062,.619141-2.877441,.929688-4.766602,.929688-1.456055,0-2.887695-.192383-4.293945-.576172-1.406738-.383789-2.602051-.929688-3.585938-1.637695l1.88916-3.65918c.786621,.589844,1.691895,1.047852,2.714844,1.37207s2.075684,.487305,3.158203,.487305c1.199707,0,2.144043-.236328,2.833008-.708984,.688477-.47168,1.032715-1.130859,1.032715-1.976562,0-.885742-.358887-1.554688-1.077148-2.006836-.718262-.453125-1.962402-.679688-3.733398-.679688h-5.282715l1.0625-11.62793h12.602051v3.836914h-8.617676l-.324707,3.925781h1.682129c2.911621,0,5.061523,.580078,6.44873,1.741211Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M37.777349,20.361976c1.081543,.53125,1.9375,1.28418,2.567383,2.257812,.629395,.973633,.944336,2.100586,.944336,3.378906,0,1.37793-.344238,2.587891-1.032715,3.629883-.688965,1.042969-1.628418,1.844727-2.818359,2.405273-1.190918,.561523-2.513672,.841797-3.969727,.841797-2.89209,0-5.154785-.885742-6.787598-2.65625-1.633301-1.770508-2.449707-4.298828-2.449707-7.584961,0-2.34082,.442871-4.347656,1.328125-6.020508,.885254-1.671875,2.119629-2.941406,3.703613-3.806641,1.583984-.866211,3.418457-1.298828,5.504395-1.298828,1.101562,0,2.158691,.123047,3.172363,.369141,1.013184,.246094,1.874023,.594727,2.58252,1.046875l-1.770996,3.512695c-1.022949-.688477-2.312012-1.033203-3.865723-1.033203-1.751465,0-3.138672,.511719-4.161621,1.53418-1.022949,1.023438-1.574219,2.508789-1.652344,4.457031,1.219727-1.219727,2.921387-1.830078,5.105469-1.830078,1.317871,0,2.518066,.265625,3.600586,.796875Zm-2.080566,8.116211c.63916-.550781,.958984-1.298828,.958984-2.243164s-.319824-1.697266-.958984-2.257812c-.639648-.560547-1.490723-.84082-2.552734-.84082-1.043457,0-1.898926,.290039-2.567871,.870117-.668945,.581055-1.003418,1.324219-1.003418,2.228516,0,.905273,.324707,1.642578,.974121,2.213867,.648926,.570312,1.534668,.855469,2.655762,.855469,1.022949,0,1.854492-.275391,2.494141-.826172Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M41.038335,11.75165v3.099609l-7.67334,17.55957h-5.193848l7.407227-16.762695h-6.84668v3.364258h-4.25v-7.260742h16.556641Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M40.65479,23.705949c.541016,.826172,.811523,1.780273,.811523,2.862305,0,1.279297-.364258,2.395508-1.091797,3.349609-.728516,.955078-1.751465,1.692383-3.069336,2.213867-1.318359,.520508-2.84375,.782227-4.574707,.782227-1.731445,0-3.251465-.261719-4.55957-.782227-1.308594-.521484-2.321777-1.258789-3.039551-2.213867-.71875-.954102-1.077637-2.070312-1.077637-3.349609,0-1.082031,.270508-2.036133,.812012-2.862305,.540527-.826172,1.312988-1.495117,2.316406-2.006836-.76709-.472656-1.357422-1.067383-1.770508-1.786133-.413086-.717773-.620117-1.539062-.620117-2.463867,0-1.200195,.334473-2.243164,1.003418-3.12793,.668945-.885742,1.603516-1.569336,2.803711-2.051758,1.200195-.481445,2.577637-.722656,4.131836-.722656,1.57373,0,2.966309,.241211,4.17627,.722656,1.209961,.482422,2.149414,1.166016,2.818359,2.051758,.668457,.884766,1.003418,1.927734,1.003418,3.12793,0,.924805-.206543,1.746094-.619629,2.463867-.413574,.71875-1.013672,1.313477-1.800293,1.786133,1.022461,.511719,1.804688,1.180664,2.346191,2.006836Zm-5.076172,4.883789c.698242-.541016,1.047852-1.263672,1.047852-2.168945,0-.904297-.349609-1.623047-1.047852-2.154297-.69873-.53125-1.647949-.796875-2.848145-.796875-1.180176,0-2.115234,.265625-2.803711,.796875-.688965,.53125-1.032715,1.25-1.032715,2.154297,0,.924805,.34375,1.652344,1.032715,2.183594,.688477,.53125,1.623535,.796875,2.803711,.796875,1.200195,0,2.149414-.269531,2.848145-.811523Zm-5.164551-12.837891c-.580566,.462891-.870605,1.097656-.870605,1.904297,0,.787109,.284668,1.40625,.855469,1.858398,.570801,.453125,1.347656,.679688,2.331543,.679688s1.770996-.226562,2.361328-.679688c.589844-.452148,.885254-1.071289,.885254-1.858398,0-.806641-.29541-1.441406-.885254-1.904297-.590332-.461914-1.377441-.693359-2.361328-.693359-.964355,0-1.736328,.231445-2.316406,.693359Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M38.83936,14.078863c1.632812,1.760742,2.449707,4.293945,2.449707,7.598633,0,2.341797-.437988,4.348633-1.313477,6.020508-.875488,1.672852-2.109863,2.942383-3.703613,3.807617-1.59375,.866211-3.433594,1.298828-5.519043,1.298828-1.102051,0-2.154297-.123047-3.157715-.369141s-1.859375-.594727-2.567383-1.047852l1.770508-3.511719c1.003418,.688477,2.291992,1.033203,3.866211,1.033203,1.750977,0,3.138184-.516602,4.161133-1.549805s1.574219-2.523438,1.652832-4.47168c-1.239746,1.240234-2.951172,1.859375-5.135254,1.859375-1.318359,0-2.518555-.265625-3.600586-.796875s-1.937988-1.283203-2.567383-2.256836c-.629883-.974609-.944336-2.100586-.944336-3.379883,0-1.376953,.34375-2.586914,1.032715-3.629883,.688477-1.042969,1.62793-1.844727,2.818359-2.405273s2.513184-.84082,3.969727-.84082c2.89209,0,5.154297,.880859,6.787598,2.641602Zm-3.880859,6.226562c.65918-.580078,.98877-1.323242,.98877-2.227539,0-.905273-.319824-1.642578-.958984-2.213867-.639648-.570312-1.52002-.855469-2.641602-.855469-1.022949,0-1.854492,.275391-2.493652,.826172-.639648,.550781-.958984,1.297852-.958984,2.243164,0,.944336,.319336,1.696289,.958984,2.256836,.63916,.561523,1.490234,.841797,2.552734,.841797,1.04248,0,1.893555-.290039,2.552734-.871094Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M26.562261,11.682405v20.65918h-4.780762V15.519319h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M34.442144,31.426545c-1.337891-.845703-2.385742-2.070312-3.143066-3.673828s-1.13623-3.516602-1.13623-5.740234,.378906-4.136719,1.13623-5.740234,1.805176-2.828125,3.143066-3.674805c1.337891-.845703,2.862793-1.268555,4.574707-1.268555,1.711426,0,3.23584,.422852,4.574219,1.268555,1.337891,.84668,2.385254,2.071289,3.143066,3.674805,.757324,1.603516,1.13623,3.516602,1.13623,5.740234s-.378906,4.136719-1.13623,5.740234c-.757812,1.603516-1.805176,2.828125-3.143066,3.673828-1.338379,.84668-2.862793,1.269531-4.574219,1.269531-1.711914,0-3.236816-.422852-4.574707-1.269531Zm7.540527-4.397461c.717773-1.082031,1.077148-2.753906,1.077148-5.016602s-.359375-3.935547-1.077148-5.017578c-.718262-1.082031-1.707031-1.623047-2.96582-1.623047-1.239746,0-2.21875,.541016-2.936523,1.623047-.71875,1.082031-1.077148,2.754883-1.077148,5.017578s.358398,3.93457,1.077148,5.016602c.717773,1.083008,1.696777,1.623047,2.936523,1.623047,1.258789,0,2.247559-.540039,2.96582-1.623047Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M31.43189,11.832016v20.65918h-4.780762V15.66893h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M43.000737,11.832016v20.65918h-4.780762V15.66893h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M27.698491,11.72169v20.65918h-4.780762V15.558604h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M46.734136,28.485362v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M27.787114,11.870324v20.65918h-4.780762V15.707238h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M45.199712,22.303918c.963867,1.052734,1.445801,2.355469,1.445801,3.910156,0,1.200195-.314941,2.306641-.944336,3.320312-.629883,1.012695-1.588867,1.825195-2.877441,2.43457s-2.867676,.915039-4.736816,.915039c-1.456055,0-2.887207-.192383-4.293945-.576172s-2.602051-.929688-3.585449-1.637695l1.858887-3.65918c.787109,.589844,1.697266,1.047852,2.72998,1.37207,1.033203,.324219,2.090332,.487305,3.172852,.487305,1.199707,0,2.144043-.231445,2.833008-.694336,.688477-.461914,1.032715-1.116211,1.032715-1.961914,0-1.692383-1.288574-2.538086-3.865723-2.538086h-2.184082v-3.158203l4.25-4.810547h-8.794922v-3.836914h14.460938v3.099609l-4.662598,5.311523c1.80957,.295898,3.196777,.969727,4.161133,2.022461Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M25.95728,11.75984v20.65918h-4.780762V15.596754h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M48.475347,28.081129h-3.364258v4.337891h-4.663086v-4.337891h-11.125977v-3.217773l9.73877-13.103516h5.01709l-9.030762,12.424805h5.54834v-3.865234h4.515625v3.865234h3.364258v3.896484Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M27.609868,11.911404v20.65918h-4.780762V15.748318h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M44.742192,21.415311c1.386719,1.161133,2.080566,2.714844,2.080566,4.662109,0,1.259766-.314941,2.405273-.944336,3.438477-.629883,1.033203-1.589355,1.859375-2.877441,2.479492-1.289062,.619141-2.877441,.929688-4.766602,.929688-1.456055,0-2.887695-.192383-4.293945-.576172-1.406738-.383789-2.602051-.929688-3.585938-1.637695l1.88916-3.65918c.786621,.589844,1.691895,1.047852,2.714844,1.37207s2.075684,.487305,3.158203,.487305c1.199707,0,2.144043-.236328,2.833008-.708984,.688477-.47168,1.032715-1.130859,1.032715-1.976562,0-.885742-.358887-1.554688-1.077148-2.006836-.718262-.453125-1.962402-.679688-3.733398-.679688h-5.282715l1.0625-11.62793h12.602051v3.836914h-8.617676l-.324707,3.925781h1.682129c2.911621,0,5.061523,.580078,6.44873,1.741211Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M26.886968,11.802055v20.65918h-4.780762V15.638969h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M44.03394,20.302055c1.081543,.53125,1.9375,1.28418,2.567383,2.257812,.629395,.973633,.944336,2.100586,.944336,3.378906,0,1.37793-.344238,2.587891-1.032715,3.629883-.688965,1.042969-1.628418,1.844727-2.818359,2.405273-1.190918,.561523-2.513672,.841797-3.969727,.841797-2.89209,0-5.154785-.885742-6.787598-2.65625-1.633301-1.770508-2.449707-4.298828-2.449707-7.584961,0-2.34082,.442871-4.347656,1.328125-6.020508,.885254-1.671875,2.119629-2.941406,3.703613-3.806641,1.583984-.866211,3.418457-1.298828,5.504395-1.298828,1.101562,0,2.158691,.123047,3.172363,.369141,1.013184,.246094,1.874023,.594727,2.58252,1.046875l-1.770996,3.512695c-1.022949-.688477-2.312012-1.033203-3.865723-1.033203-1.751465,0-3.138672,.511719-4.161621,1.53418-1.022949,1.023438-1.574219,2.508789-1.652344,4.457031,1.219727-1.219727,2.921387-1.830078,5.105469-1.830078,1.317871,0,2.518066,.265625,3.600586,.796875Zm-2.080566,8.116211c.63916-.550781,.958984-1.298828,.958984-2.243164s-.319824-1.697266-.958984-2.257812c-.639648-.560547-1.490723-.84082-2.552734-.84082-1.043457,0-1.898926,.290039-2.567871,.870117-.668945,.581055-1.003418,1.324219-1.003418,2.228516,0,.905273,.324707,1.642578,.974121,2.213867,.648926,.570312,1.534668,.855469,2.655762,.855469,1.022949,0,1.854492-.275391,2.494141-.826172Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M27.329595,11.691571v20.65918h-4.780762V15.528485h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M47.103032,11.691571v3.099609l-7.67334,17.55957h-5.193848l7.407227-16.762695h-6.84668v3.364258h-4.25v-7.260742h16.556641Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M26.768804,11.842159v20.65918h-4.780762V15.679073h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M46.8523,23.647823c.541016,.826172,.811523,1.780273,.811523,2.862305,0,1.279297-.364258,2.395508-1.091797,3.349609-.728516,.955078-1.751465,1.692383-3.069336,2.213867-1.318359,.520508-2.84375,.782227-4.574707,.782227-1.731445,0-3.251465-.261719-4.55957-.782227-1.308594-.521484-2.321777-1.258789-3.039551-2.213867-.71875-.954102-1.077637-2.070312-1.077637-3.349609,0-1.082031,.270508-2.036133,.812012-2.862305,.540527-.826172,1.312988-1.495117,2.316406-2.006836-.76709-.472656-1.357422-1.067383-1.770508-1.786133-.413086-.717773-.620117-1.539062-.620117-2.463867,0-1.200195,.334473-2.243164,1.003418-3.12793,.668945-.885742,1.603516-1.569336,2.803711-2.051758,1.200195-.481445,2.577637-.722656,4.131836-.722656,1.57373,0,2.966309,.241211,4.17627,.722656,1.209961,.482422,2.149414,1.166016,2.818359,2.051758,.668457,.884766,1.003418,1.927734,1.003418,3.12793,0,.924805-.206543,1.746094-.619629,2.463867-.413574,.71875-1.013672,1.313477-1.800293,1.786133,1.022461,.511719,1.804688,1.180664,2.346191,2.006836Zm-5.076172,4.883789c.698242-.541016,1.047852-1.263672,1.047852-2.168945,0-.904297-.349609-1.623047-1.047852-2.154297-.69873-.53125-1.647949-.796875-2.848145-.796875-1.180176,0-2.115234,.265625-2.803711,.796875-.688965,.53125-1.032715,1.25-1.032715,2.154297,0,.924805,.34375,1.652344,1.032715,2.183594,.688477,.53125,1.623535,.796875,2.803711,.796875,1.200195,0,2.149414-.269531,2.848145-.811523Zm-5.164551-12.837891c-.580566,.462891-.870605,1.097656-.870605,1.904297,0,.787109,.284668,1.40625,.855469,1.858398,.570801,.453125,1.347656,.679688,2.331543,.679688s1.770996-.226562,2.361328-.679688c.589844-.452148,.885254-1.071289,.885254-1.858398,0-.806641-.29541-1.441406-.885254-1.904297-.590332-.461914-1.377441-.693359-2.361328-.693359-.964355,0-1.736328,.231445-2.316406,.693359Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M27.167241,11.72988v20.65918h-4.780762V15.566794h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M44.815679,14.017966c1.632812,1.760742,2.449707,4.293945,2.449707,7.598633,0,2.341797-.437988,4.348633-1.313477,6.020508-.875488,1.672852-2.109863,2.942383-3.703613,3.807617-1.59375,.866211-3.433594,1.298828-5.519043,1.298828-1.102051,0-2.154297-.123047-3.157715-.369141s-1.859375-.594727-2.567383-1.047852l1.770508-3.511719c1.003418,.688477,2.291992,1.033203,3.866211,1.033203,1.750977,0,3.138184-.516602,4.161133-1.549805s1.574219-2.523438,1.652832-4.47168c-1.239746,1.240234-2.951172,1.859375-5.135254,1.859375-1.318359,0-2.518555-.265625-3.600586-.796875s-1.937988-1.283203-2.567383-2.256836c-.629883-.974609-.944336-2.100586-.944336-3.379883,0-1.376953,.34375-2.586914,1.032715-3.629883,.688477-1.042969,1.62793-1.844727,2.818359-2.405273s2.513184-.84082,3.969727-.84082c2.89209,0,5.154297,.880859,6.787598,2.641602Zm-3.880859,6.226562c.65918-.580078,.98877-1.323242,.98877-2.227539,0-.905273-.319824-1.642578-.958984-2.213867-.639648-.570312-1.52002-.855469-2.641602-.855469-1.022949,0-1.854492,.275391-2.493652,.826172-.639648,.550781-.958984,1.297852-.958984,2.243164,0,.944336,.319336,1.696289,.958984,2.256836,.63916,.561523,1.490234,.841797,2.552734,.841797,1.04248,0,1.893555-.290039,2.552734-.871094Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M31.225591,28.643163v3.895508H15.613774v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M37.422856,31.623632c-1.337891-.845703-2.385742-2.070312-3.143066-3.673828s-1.13623-3.516602-1.13623-5.740234,.378906-4.136719,1.13623-5.740234,1.805176-2.828125,3.143066-3.674805c1.337891-.845703,2.862793-1.268555,4.574707-1.268555,1.711426,0,3.23584,.422852,4.574219,1.268555,1.337891,.84668,2.385254,2.071289,3.143066,3.674805,.757324,1.603516,1.13623,3.516602,1.13623,5.740234s-.378906,4.136719-1.13623,5.740234c-.757812,1.603516-1.805176,2.828125-3.143066,3.673828-1.338379,.84668-2.862793,1.269531-4.574219,1.269531-1.711914,0-3.236816-.422852-4.574707-1.269531Zm7.540527-4.397461c.717773-1.082031,1.077148-2.753906,1.077148-5.016602s-.359375-3.935547-1.077148-5.017578c-.718262-1.082031-1.707031-1.623047-2.96582-1.623047-1.239746,0-2.21875,.541016-2.936523,1.623047-.71875,1.082031-1.077148,2.754883-1.077148,5.017578s.358398,3.93457,1.077148,5.016602c.717773,1.083008,1.696777,1.623047,2.936523,1.623047,1.258789,0,2.247559-.540039,2.96582-1.623047Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M36.065679,28.534791v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M46.010991,11.771119v20.65918h-4.780762V15.608033h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M32.33228,28.425283v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M49.74439,28.425283v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M32.420903,28.573917v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M48.209966,22.243839c.963867,1.052734,1.445801,2.355469,1.445801,3.910156,0,1.200195-.314941,2.306641-.944336,3.320312-.629883,1.012695-1.588867,1.825195-2.877441,2.43457s-2.867676,.915039-4.736816,.915039c-1.456055,0-2.887207-.192383-4.293945-.576172s-2.602051-.929688-3.585449-1.637695l1.858887-3.65918c.787109,.589844,1.697266,1.047852,2.72998,1.37207,1.033203,.324219,2.090332,.487305,3.172852,.487305,1.199707,0,2.144043-.231445,2.833008-.694336,.688477-.461914,1.032715-1.116211,1.032715-1.961914,0-1.692383-1.288574-2.538086-3.865723-2.538086h-2.184082v-3.158203l4.25-4.810547h-8.794922v-3.836914h14.460938v3.099609l-4.662598,5.311523c1.80957,.295898,3.196777,.969727,4.161133,2.022461Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M30.73853,28.465545v3.895508H15.126714v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M51.33814,28.023162h-3.364258v4.337891h-4.663086v-4.337891h-11.125977v-3.217773l9.73877-13.103516h5.01709l-9.030762,12.424805h5.54834v-3.865234h4.515625v3.865234h3.364258v3.896484Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M32.243657,28.616133v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M47.752446,21.356367c1.386719,1.161133,2.080566,2.714844,2.080566,4.662109,0,1.259766-.314941,2.405273-.944336,3.438477-.629883,1.033203-1.589355,1.859375-2.877441,2.479492-1.289062,.619141-2.877441,.929688-4.766602,.929688-1.456055,0-2.887695-.192383-4.293945-.576172-1.406738-.383789-2.602051-.929688-3.585938-1.637695l1.88916-3.65918c.786621,.589844,1.691895,1.047852,2.714844,1.37207s2.075684,.487305,3.158203,.487305c1.199707,0,2.144043-.236328,2.833008-.708984,.688477-.47168,1.032715-1.130859,1.032715-1.976562,0-.885742-.358887-1.554688-1.077148-2.006836-.718262-.453125-1.962402-.679688-3.733398-.679688h-5.282715l1.0625-11.62793h12.602051v3.836914h-8.617676l-.324707,3.925781h1.682129c2.911621,0,5.061523,.580078,6.44873,1.741211Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M31.550298,28.505648v3.895508H15.938481v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M47.014653,20.241976c1.081543,.53125,1.9375,1.28418,2.567383,2.257812,.629395,.973633,.944336,2.100586,.944336,3.378906,0,1.37793-.344238,2.587891-1.032715,3.629883-.688965,1.042969-1.628418,1.844727-2.818359,2.405273-1.190918,.561523-2.513672,.841797-3.969727,.841797-2.89209,0-5.154785-.885742-6.787598-2.65625-1.633301-1.770508-2.449707-4.298828-2.449707-7.584961,0-2.34082,.442871-4.347656,1.328125-6.020508,.885254-1.671875,2.119629-2.941406,3.703613-3.806641,1.583984-.866211,3.418457-1.298828,5.504395-1.298828,1.101562,0,2.158691,.123047,3.172363,.369141,1.013184,.246094,1.874023,.594727,2.58252,1.046875l-1.770996,3.512695c-1.022949-.688477-2.312012-1.033203-3.865723-1.033203-1.751465,0-3.138672,.511719-4.161621,1.53418-1.022949,1.023438-1.574219,2.508789-1.652344,4.457031,1.219727-1.219727,2.921387-1.830078,5.105469-1.830078,1.317871,0,2.518066,.265625,3.600586,.796875Zm-2.080566,8.116211c.63916-.550781,.958984-1.298828,.958984-2.243164s-.319824-1.697266-.958984-2.257812c-.639648-.560547-1.490723-.84082-2.552734-.84082-1.043457,0-1.898926,.290039-2.567871,.870117-.668945,.581055-1.003418,1.324219-1.003418,2.228516,0,.905273,.324707,1.642578,.974121,2.213867,.648926,.570312,1.534668,.855469,2.655762,.855469,1.022949,0,1.854492-.275391,2.494141-.826172Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M31.992925,28.655259v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M50.083745,11.891587v3.099609l-7.67334,17.55957h-5.193848l7.407227-16.762695h-6.84668v3.364258h-4.25v-7.260742h16.556641Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M31.402593,28.542981v3.895508H15.790776v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M49.862554,23.584973c.541016,.826172,.811523,1.780273,.811523,2.862305,0,1.279297-.364258,2.395508-1.091797,3.349609-.728516,.955078-1.751465,1.692383-3.069336,2.213867-1.318359,.520508-2.84375,.782227-4.574707,.782227-1.731445,0-3.251465-.261719-4.55957-.782227-1.308594-.521484-2.321777-1.258789-3.039551-2.213867-.71875-.954102-1.077637-2.070312-1.077637-3.349609,0-1.082031,.270508-2.036133,.812012-2.862305,.540527-.826172,1.312988-1.495117,2.316406-2.006836-.76709-.472656-1.357422-1.067383-1.770508-1.786133-.413086-.717773-.620117-1.539062-.620117-2.463867,0-1.200195,.334473-2.243164,1.003418-3.12793,.668945-.885742,1.603516-1.569336,2.803711-2.051758,1.200195-.481445,2.577637-.722656,4.131836-.722656,1.57373,0,2.966309,.241211,4.17627,.722656,1.209961,.482422,2.149414,1.166016,2.818359,2.051758,.668457,.884766,1.003418,1.927734,1.003418,3.12793,0,.924805-.206543,1.746094-.619629,2.463867-.413574,.71875-1.013672,1.313477-1.800293,1.786133,1.022461,.511719,1.804688,1.180664,2.346191,2.006836Zm-5.076172,4.883789c.698242-.541016,1.047852-1.263672,1.047852-2.168945,0-.904297-.349609-1.623047-1.047852-2.154297-.69873-.53125-1.647949-.796875-2.848145-.796875-1.180176,0-2.115234,.265625-2.803711,.796875-.688965,.53125-1.032715,1.25-1.032715,2.154297,0,.924805,.34375,1.652344,1.032715,2.183594,.688477,.53125,1.623535,.796875,2.803711,.796875,1.200195,0,2.149414-.269531,2.848145-.811523Zm-5.164551-12.837891c-.580566,.462891-.870605,1.097656-.870605,1.904297,0,.787109,.284668,1.40625,.855469,1.858398,.570801,.453125,1.347656,.679688,2.331543,.679688s1.770996-.226562,2.361328-.679688c.589844-.452148,.885254-1.071289,.885254-1.858398,0-.806641-.29541-1.441406-.885254-1.904297-.590332-.461914-1.377441-.693359-2.361328-.693359-.964355,0-1.736328,.231445-2.316406,.693359Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M31.80103,28.434608v3.895508h-15.611816v-3.098633l7.968262-7.525391c.845703-.806641,1.416504-1.500977,1.711426-2.081055,.29541-.580078,.442871-1.155273,.442871-1.726562,0-.826172-.280273-1.460938-.841309-1.90332-.560547-.442383-1.382324-.664062-2.463867-.664062-.905273,0-1.722168,.171875-2.449707,.516602-.728027,.34375-1.338379,.860352-1.82959,1.548828l-3.48291-2.242188c.806641-1.200195,1.918457-2.139648,3.334961-2.819336,1.416992-.678711,3.040039-1.017578,4.869629-1.017578,1.534668,0,2.877441,.250977,4.02832,.751953,1.151367,.501953,2.046387,1.210938,2.686035,2.125,.63916,.915039,.958984,1.992188,.958984,3.232422,0,1.121094-.236328,2.173828-.708496,3.157227-.472168,.984375-1.386719,2.105469-2.744629,3.364258l-4.751465,4.486328h8.883301Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M47.825933,13.959022c1.632812,1.760742,2.449707,4.293945,2.449707,7.598633,0,2.341797-.437988,4.348633-1.313477,6.020508-.875488,1.672852-2.109863,2.942383-3.703613,3.807617-1.59375,.866211-3.433594,1.298828-5.519043,1.298828-1.102051,0-2.154297-.123047-3.157715-.369141s-1.859375-.594727-2.567383-1.047852l1.770508-3.511719c1.003418,.688477,2.291992,1.033203,3.866211,1.033203,1.750977,0,3.138184-.516602,4.161133-1.549805s1.574219-2.523438,1.652832-4.47168c-1.239746,1.240234-2.951172,1.859375-5.135254,1.859375-1.318359,0-2.518555-.265625-3.600586-.796875s-1.937988-1.283203-2.567383-2.256836c-.629883-.974609-.944336-2.100586-.944336-3.379883,0-1.376953,.34375-2.586914,1.032715-3.629883,.688477-1.042969,1.62793-1.844727,2.818359-2.405273s2.513184-.84082,3.969727-.84082c2.89209,0,5.154297,.880859,6.787598,2.641602Zm-3.880859,6.226562c.65918-.580078,.98877-1.323242,.98877-2.227539,0-.905273-.319824-1.642578-.958984-2.213867-.639648-.570312-1.52002-.855469-2.641602-.855469-1.022949,0-1.854492,.275391-2.493652,.826172-.639648,.550781-.958984,1.297852-.958984,2.243164,0,.944336,.319336,1.696289,.958984,2.256836,.63916,.561523,1.490234,.841797,2.552734,.841797,1.04248,0,1.893555-.290039,2.552734-.871094Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M29.572759,22.253165c.963867,1.052734,1.445801,2.355469,1.445801,3.910156,0,1.200195-.314941,2.306641-.944336,3.320312-.629883,1.012695-1.588867,1.825195-2.877441,2.43457s-2.867676,.915039-4.736816,.915039c-1.456055,0-2.887207-.192383-4.293945-.576172s-2.602051-.929688-3.585449-1.637695l1.858887-3.65918c.787109,.589844,1.697266,1.047852,2.72998,1.37207,1.033203,.324219,2.090332,.487305,3.172852,.487305,1.199707,0,2.144043-.231445,2.833008-.694336,.688477-.461914,1.032715-1.116211,1.032715-1.961914,0-1.692383-1.288574-2.538086-3.865723-2.538086h-2.184082v-3.158203l4.25-4.810547H15.613286v-3.836914h14.460938v3.099609l-4.662598,5.311523c1.80957,.295898,3.196777,.969727,4.161133,2.022461Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M37.511235,31.563711c-1.337891-.845703-2.385742-2.070312-3.143066-3.673828s-1.13623-3.516602-1.13623-5.740234,.378906-4.136719,1.13623-5.740234,1.805176-2.828125,3.143066-3.674805c1.337891-.845703,2.862793-1.268555,4.574707-1.268555,1.711426,0,3.23584,.422852,4.574219,1.268555,1.337891,.84668,2.385254,2.071289,3.143066,3.674805,.757324,1.603516,1.13623,3.516602,1.13623,5.740234s-.378906,4.136719-1.13623,5.740234c-.757812,1.603516-1.805176,2.828125-3.143066,3.673828-1.338379,.84668-2.862793,1.269531-4.574219,1.269531-1.711914,0-3.236816-.422852-4.574707-1.269531Zm7.540527-4.397461c.717773-1.082031,1.077148-2.753906,1.077148-5.016602s-.359375-3.935547-1.077148-5.017578c-.718262-1.082031-1.707031-1.623047-2.96582-1.623047-1.239746,0-2.21875,.541016-2.936523,1.623047-.71875,1.082031-1.077148,2.754883-1.077148,5.017578s.358398,3.93457,1.077148,5.016602c.717773,1.083008,1.696777,1.623047,2.936523,1.623047,1.258789,0,2.247559-.540039,2.96582-1.623047Z\" style=\"fill: #999;\"/>\r\n      `,\r\n  `\r\n      <rect width=\"65.520029\" height=\"44.459935\" style=\"fill: none;\"/>\r\n      \r\n        <path d=\"M34.442388,22.145769c.963867,1.052734,1.445801,2.355469,1.445801,3.910156,0,1.200195-.314941,2.306641-.944336,3.320312-.629883,1.012695-1.588867,1.825195-2.877441,2.43457s-2.867676,.915039-4.736816,.915039c-1.456055,0-2.887207-.192383-4.293945-.576172s-2.602051-.929688-3.585449-1.637695l1.858887-3.65918c.787109,.589844,1.697266,1.047852,2.72998,1.37207,1.033203,.324219,2.090332,.487305,3.172852,.487305,1.199707,0,2.144043-.231445,2.833008-.694336,.688477-.461914,1.032715-1.116211,1.032715-1.961914,0-1.692383-1.288574-2.538086-3.865723-2.538086h-2.184082v-3.158203l4.25-4.810547h-8.794922v-3.836914h14.460938v3.099609l-4.662598,5.311523c1.80957,.295898,3.196777,.969727,4.161133,2.022461Z\" style=\"fill: #999;\"/>\r\n        <path d=\"M46.069829,11.712175v20.65918h-4.780762V15.549089h-4.131836v-3.836914h8.912598Z\" style=\"fill: #999;\"/>`,\r\n];\r\n\r\nexport default secondaryDigitsSP;\r\n","const monthsSP = [\r\n  `\r\n        <path d=\"M3.899902,27.419922c-1.586426-.706055-2.886719-1.712891-3.899902-3.019531l3.600098-4.320312c1.52002,2.053711,3.25293,3.080078,5.200195,3.080078,2.639648,0,3.959961-1.546875,3.959961-4.640625V5.200195H2.919922V0H19.200195V18.160156c0,3.439453-.854004,6.019531-2.560059,7.740234-1.707031,1.719727-4.213867,2.580078-7.52002,2.580078-1.893555,0-3.633789-.354492-5.220215-1.060547Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M41.519531,8.540039c1.786133,1.586914,2.679688,3.979492,2.679688,7.179688v12.280273h-5.839844v-2.679688c-1.173828,2-3.359863,3-6.560059,3-1.653809,0-3.086914-.280273-4.299805-.839844-1.213867-.560547-2.140137-1.333984-2.780273-2.320312s-.959961-2.106445-.959961-3.360352c0-2,.75293-3.573242,2.260254-4.719727,1.505859-1.146484,3.833008-1.719727,6.97998-1.719727h4.959961c0-1.360352-.414062-2.40625-1.240234-3.140625-.82666-.732422-2.066895-1.099609-3.719727-1.099609-1.146973,0-2.273926,.179688-3.380371,.540039-1.106934,.359375-2.046875,.84668-2.819824,1.459961l-2.240234-4.360352c1.17334-.826172,2.580078-1.46582,4.220215-1.919922,1.640137-.453125,3.326172-.679688,5.060059-.679688,3.333008,0,5.893066,.793945,7.680176,2.379883Zm-5.320312,14.839844c.826172-.493164,1.413086-1.219727,1.760254-2.179688v-2.200195h-4.280273c-2.560059,0-3.839844,.839844-3.839844,2.519531,0,.800781,.312988,1.43457,.939941,1.900391,.626465,.466797,1.486328,.700195,2.580078,.700195,1.066406,0,2.013184-.246094,2.839844-.740234Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M69.378906,8.55957c1.640137,1.600586,2.459961,3.974609,2.459961,7.120117v12.320312h-6.239746v-11.360352c0-1.706055-.374023-2.979492-1.120117-3.819336-.74707-.839844-1.82666-1.260742-3.240234-1.260742-1.57373,0-2.82666,.487305-3.759766,1.459961-.933594,.974609-1.399902,2.420898-1.399902,4.34082v10.639648h-6.240234V6.480469h5.959961v2.519531c.826172-.90625,1.853516-1.606445,3.080078-2.099609s2.573242-.740234,4.040039-.740234c2.666504,0,4.819824,.799805,6.459961,2.399414Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M99.158691,6.480469V28h-5.919922v-2.55957c-.827148,.933594-1.813965,1.646484-2.959961,2.139648-1.146973,.493164-2.387207,.740234-3.720215,.740234-2.82666,0-5.066895-.813477-6.719727-2.44043-1.653809-1.625977-2.480469-4.040039-2.480469-7.240234V6.480469h6.240234v11.239258c0,3.466797,1.453125,5.200195,4.359863,5.200195,1.493164,0,2.693359-.486328,3.600098-1.459961,.90625-.972656,1.359863-2.419922,1.359863-4.339844V6.480469h6.240234Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M121.318848,8.540039c1.786133,1.586914,2.679688,3.979492,2.679688,7.179688v12.280273h-5.839844v-2.679688c-1.173828,2-3.359863,3-6.560059,3-1.653809,0-3.086914-.280273-4.299805-.839844-1.213867-.560547-2.140137-1.333984-2.780273-2.320312s-.959961-2.106445-.959961-3.360352c0-2,.75293-3.573242,2.260254-4.719727,1.505859-1.146484,3.833008-1.719727,6.97998-1.719727h4.959961c0-1.360352-.414062-2.40625-1.240234-3.140625-.82666-.732422-2.066895-1.099609-3.719727-1.099609-1.146973,0-2.273926,.179688-3.380371,.540039-1.106934,.359375-2.046875,.84668-2.819824,1.459961l-2.240234-4.360352c1.17334-.826172,2.580078-1.46582,4.220215-1.919922,1.640137-.453125,3.326172-.679688,5.060059-.679688,3.333008,0,5.893066,.793945,7.680176,2.379883Zm-5.320312,14.839844c.826172-.493164,1.413086-1.219727,1.760254-2.179688v-2.200195h-4.280273c-2.560059,0-3.839844,.839844-3.839844,2.519531,0,.800781,.312988,1.43457,.939941,1.900391,.626465,.466797,1.486328,.700195,2.580078,.700195,1.066406,0,2.013184-.246094,2.839844-.740234Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M138.618164,6.959961c1.266602-.533203,2.726562-.799805,4.380371-.799805v5.759766c-.693848-.052734-1.160156-.080078-1.400391-.080078-1.786621,0-3.186523,.5-4.199707,1.5-1.013672,1-1.52002,2.5-1.52002,4.5v10.160156h-6.240234V6.480469h5.959961v2.839844c.746582-1.040039,1.753418-1.826172,3.02002-2.360352Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M168.838379,6.480469l-9.720215,22.839844c-.986816,2.479492-2.207031,4.225586-3.660156,5.239258-1.453613,1.013672-3.206543,1.520508-5.259766,1.520508-1.120117,0-2.227051-.173828-3.320312-.520508-1.09375-.34668-1.986816-.826172-2.679688-1.439453l2.279785-4.44043c.47998,.426758,1.033203,.760742,1.660156,1,.625977,.240234,1.246094,.360352,1.859863,.360352,.853027,0,1.546387-.207031,2.080078-.620117,.533203-.414062,1.013184-1.099609,1.439941-2.05957l.080078-.200195-9.319824-21.679688h6.439941l6.040039,14.599609,6.080078-14.599609h6Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n        <path d=\"M6.47998,6.879883v7.399414h12.959961v5.200195H6.47998v10.200195H0V1.679688H21.160156V6.879883H6.47998Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M45.52002,20.679688H29.240234c.292969,1.333984,.986328,2.386719,2.080078,3.160156,1.092773,.773438,2.453125,1.160156,4.080078,1.160156,1.119629,0,2.112793-.166992,2.97998-.5,.866211-.333008,1.672852-.860352,2.419922-1.580078l3.319824,3.599609c-2.026855,2.320312-4.986816,3.480469-8.879883,3.480469-2.426758,0-4.57373-.473633-6.439941-1.419922-1.867188-.946289-3.307129-2.260742-4.320312-3.94043-1.013672-1.679688-1.52002-3.585938-1.52002-5.719727,0-2.106445,.5-4.006836,1.5-5.700195s2.373535-3.012695,4.120117-3.959961c1.746582-.946289,3.700195-1.419922,5.859863-1.419922,2.106445,0,4.013184,.453125,5.720215,1.359375,1.706055,.907227,3.046387,2.207031,4.02002,3.900391,.973145,1.693359,1.459961,3.660156,1.459961,5.900391,0,.080078-.040039,.639648-.120117,1.679688Zm-14.599609-6.919922c-.960449,.799805-1.546875,1.893555-1.760254,3.280273h10.600098c-.213867-1.360352-.800293-2.446289-1.760254-3.260742-.959961-.8125-2.133789-1.219727-3.52002-1.219727-1.413574,0-2.599609,.400391-3.55957,1.200195Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M67.97998,9.219727c1.640137,.919922,2.92627,2.213867,3.859863,3.879883,.933105,1.666992,1.399902,3.607422,1.399902,5.820312,0,2.213867-.466797,4.15332-1.399902,5.819336-.933594,1.666992-2.219727,2.959961-3.859863,3.880859-1.640137,.919922-3.459961,1.379883-5.459961,1.379883-2.959961,0-5.213867-.933594-6.760254-2.800781v2.480469h-5.959961V0h6.240234V10.439453c1.573242-1.732422,3.73291-2.599609,6.47998-2.599609,2,0,3.819824,.459961,5.459961,1.379883Zm-2.600098,14.040039c1.026367-1.080078,1.540039-2.526367,1.540039-4.339844s-.513672-3.259766-1.540039-4.339844c-1.026855-1.080078-2.339844-1.620117-3.939941-1.620117s-2.913574,.540039-3.939941,1.620117c-1.026855,1.080078-1.540039,2.526367-1.540039,4.339844s.513184,3.259766,1.540039,4.339844c1.026367,1.080078,2.339844,1.620117,3.939941,1.620117s2.913086-.540039,3.939941-1.620117Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M86.379395,8.639648c1.266602-.533203,2.726562-.799805,4.380371-.799805v5.759766c-.693848-.052734-1.160156-.080078-1.400391-.080078-1.786621,0-3.186523,.5-4.199707,1.5-1.013672,1-1.52002,2.5-1.52002,4.5v10.160156h-6.240234V8.160156h5.959961v2.839844c.746582-1.040039,1.753418-1.826172,3.02002-2.360352Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M116.319336,8.160156V29.679688h-5.919922v-2.55957c-.827148,.933594-1.813965,1.646484-2.959961,2.139648-1.146973,.493164-2.387207,.740234-3.720215,.740234-2.82666,0-5.066895-.813477-6.719727-2.44043-1.653809-1.625977-2.480469-4.040039-2.480469-7.240234V8.160156h6.240234v11.239258c0,3.466797,1.453125,5.200195,4.359863,5.200195,1.493164,0,2.693359-.486328,3.600098-1.459961,.90625-.972656,1.359863-2.419922,1.359863-4.339844V8.160156h6.240234Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M138.479492,10.219727c1.786133,1.586914,2.679688,3.979492,2.679688,7.179688v12.280273h-5.839844v-2.679688c-1.173828,2-3.359863,3-6.560059,3-1.653809,0-3.086914-.280273-4.299805-.839844-1.213867-.560547-2.140137-1.333984-2.780273-2.320312s-.959961-2.106445-.959961-3.360352c0-2,.75293-3.573242,2.260254-4.719727,1.505859-1.146484,3.833008-1.719727,6.97998-1.719727h4.959961c0-1.360352-.414062-2.40625-1.240234-3.140625-.82666-.732422-2.066895-1.099609-3.719727-1.099609-1.146973,0-2.273926,.179688-3.380371,.540039-1.106934,.359375-2.046875,.84668-2.819824,1.459961l-2.240234-4.360352c1.17334-.826172,2.580078-1.46582,4.220215-1.919922,1.640137-.453125,3.326172-.679688,5.060059-.679688,3.333008,0,5.893066,.793945,7.680176,2.379883Zm-5.320312,14.839844c.826172-.493164,1.413086-1.219727,1.760254-2.179688v-2.200195h-4.280273c-2.560059,0-3.839844,.839844-3.839844,2.519531,0,.800781,.312988,1.43457,.939941,1.900391,.626465,.466797,1.486328,.700195,2.580078,.700195,1.066406,0,2.013184-.246094,2.839844-.740234Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M155.778809,8.639648c1.266602-.533203,2.726562-.799805,4.380371-.799805v5.759766c-.693848-.052734-1.160156-.080078-1.400391-.080078-1.786621,0-3.186523,.5-4.199707,1.5-1.013672,1-1.52002,2.5-1.52002,4.5v10.160156h-6.240234V8.160156h5.959961v2.839844c.746582-1.040039,1.753418-1.826172,3.02002-2.360352Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M185.999023,8.160156l-9.720215,22.839844c-.986816,2.479492-2.207031,4.225586-3.660156,5.239258-1.453613,1.013672-3.206543,1.520508-5.259766,1.520508-1.120117,0-2.227051-.173828-3.320312-.520508-1.09375-.34668-1.986816-.826172-2.679688-1.439453l2.279785-4.44043c.47998,.426758,1.033203,.760742,1.660156,1,.625977,.240234,1.246094,.360352,1.859863,.360352,.853027,0,1.546387-.207031,2.080078-.620117,.533203-.414062,1.013184-1.099609,1.439941-2.05957l.080078-.200195-9.319824-21.679688h6.439941l6.040039,14.599609,6.080078-14.599609h6Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n        <path d=\"M25.47998,29.679688l-.040039-16.799805-8.239746,13.839844h-2.919922L6.080078,13.239258V29.679688H0V1.679688H5.360352L15.840332,19.080078,26.160156,1.679688h5.319824l.080078,28h-6.080078Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M54.119629,10.219727c1.786133,1.586914,2.679688,3.979492,2.679688,7.179688v12.280273h-5.839844v-2.679688c-1.173828,2-3.359863,3-6.560059,3-1.653809,0-3.086914-.280273-4.299805-.839844-1.213867-.560547-2.140137-1.333984-2.780273-2.320312s-.959961-2.106445-.959961-3.360352c0-2,.75293-3.573242,2.260254-4.719727,1.505859-1.146484,3.833008-1.719727,6.97998-1.719727h4.959961c0-1.360352-.414062-2.40625-1.240234-3.140625-.82666-.732422-2.066895-1.099609-3.719727-1.099609-1.146973,0-2.273926,.179688-3.380371,.540039-1.106934,.359375-2.046875,.84668-2.819824,1.459961l-2.240234-4.360352c1.17334-.826172,2.580078-1.46582,4.220215-1.919922,1.640137-.453125,3.326172-.679688,5.060059-.679688,3.333008,0,5.893066,.793945,7.680176,2.379883Zm-5.320312,14.839844c.826172-.493164,1.413086-1.219727,1.760254-2.179688v-2.200195h-4.280273c-2.560059,0-3.839844,.839844-3.839844,2.519531,0,.800781,.312988,1.43457,.939941,1.900391,.626465,.466797,1.486328,.700195,2.580078,.700195,1.066406,0,2.013184-.246094,2.839844-.740234Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M71.418945,8.639648c1.266602-.533203,2.726562-.799805,4.380371-.799805v5.759766c-.693848-.052734-1.160156-.080078-1.400391-.080078-1.786621,0-3.186523,.5-4.199707,1.5-1.013672,1-1.52002,2.5-1.52002,4.5v10.160156h-6.240234V8.160156h5.959961v2.839844c.746582-1.040039,1.753418-1.826172,3.02002-2.360352Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M83.539551,28.580078c-1.827148-.946289-3.253906-2.260742-4.280273-3.94043-1.026855-1.679688-1.540039-3.585938-1.540039-5.719727s.513184-4.040039,1.540039-5.720703c1.026367-1.679688,2.453125-2.992188,4.280273-3.939453,1.826172-.946289,3.88623-1.419922,6.179688-1.419922,2.266602,0,4.246582,.473633,5.94043,1.419922,1.692871,.947266,2.92627,2.299805,3.699707,4.05957l-4.839844,2.600586c-1.120117-1.973633-2.733887-2.959961-4.839844-2.959961-1.626953,0-2.974121,.533203-4.040039,1.599609-1.066895,1.067383-1.600098,2.520508-1.600098,4.360352s.533203,3.293945,1.600098,4.359375c1.065918,1.067383,2.413086,1.600586,4.040039,1.600586,2.132812,0,3.746094-.986328,4.839844-2.959961l4.839844,2.639648c-.773438,1.707031-2.006836,3.040039-3.699707,4-1.693848,.959961-3.673828,1.44043-5.94043,1.44043-2.293457,0-4.353516-.473633-6.179688-1.419922Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M122.339355,10.239258c1.640137,1.600586,2.459961,3.974609,2.459961,7.120117v12.320312h-6.239746v-11.360352c0-1.706055-.374023-2.979492-1.120117-3.819336-.74707-.839844-1.82666-1.260742-3.240234-1.260742-1.57373,0-2.82666,.487305-3.759766,1.459961-.933594,.974609-1.399902,2.420898-1.399902,4.34082v10.639648h-6.240234V0h6.240234V10.399414c.826172-.826172,1.826172-1.459961,3-1.899414,1.172852-.44043,2.453125-.660156,3.839844-.660156,2.666504,0,4.819824,.799805,6.459961,2.399414Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n        <path d=\"M22.119629,25.480469H9.119629l-2.47998,6H0L12.47998,3.480469h6.399902l12.52002,28h-6.799805l-2.480469-6Zm-2.039551-4.919922l-4.44043-10.719727-4.439941,10.719727h8.880371Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M52.05957,11.020508c1.640137,.919922,2.92627,2.213867,3.859863,3.879883,.933105,1.666992,1.399902,3.607422,1.399902,5.820312,0,2.213867-.466797,4.15332-1.399902,5.819336-.933594,1.666992-2.219727,2.959961-3.859863,3.880859-1.640137,.919922-3.459961,1.379883-5.459961,1.379883-2.74707,0-4.906738-.866211-6.47998-2.600586v10.040039h-6.240234V9.960938h5.959961v2.479492c1.546387-1.866211,3.800293-2.799805,6.760254-2.799805,2,0,3.819824,.459961,5.459961,1.379883Zm-2.600098,14.040039c1.026367-1.080078,1.540039-2.526367,1.540039-4.339844s-.513672-3.259766-1.540039-4.339844c-1.026855-1.080078-2.339844-1.620117-3.939941-1.620117s-2.913574,.540039-3.939941,1.620117c-1.026855,1.080078-1.540039,2.526367-1.540039,4.339844s.513184,3.259766,1.540039,4.339844c1.026367,1.080078,2.339844,1.620117,3.939941,1.620117s2.913086-.540039,3.939941-1.620117Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M70.458984,10.44043c1.266602-.533203,2.726562-.799805,4.380371-.799805v5.759766c-.693848-.052734-1.160156-.080078-1.400391-.080078-1.786621,0-3.186523,.5-4.199707,1.5-1.013672,1-1.52002,2.5-1.52002,4.5v10.160156h-6.240234V9.960938h5.959961v2.839844c.746582-1.040039,1.753418-1.826172,3.02002-2.360352Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M78.879395,5.960938c-.720215-.666992-1.080078-1.493164-1.080078-2.480469,0-.986328,.359863-1.813477,1.080078-2.480469,.719727-.666016,1.652832-1,2.799805-1,1.146484,0,2.080078,.320312,2.799805,.960938,.720215,.639648,1.080078,1.439453,1.080078,2.399414,0,1.040039-.359863,1.900391-1.080078,2.580078-.719727,.679688-1.65332,1.020508-2.799805,1.020508-1.146973,0-2.080078-.333984-2.799805-1Zm-.320312,4h6.240234V31.480469h-6.240234V9.960938Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M90.598633,1.800781h6.240234V31.480469h-6.240234V1.800781Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n        <path d=\"M25.47998,28l-.040039-16.799805-8.239746,13.839844h-2.919922L6.080078,11.55957V28H0V0H5.360352L15.840332,17.400391,26.160156,0h5.319824l.080078,28h-6.080078Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M54.119629,8.540039c1.786133,1.586914,2.679688,3.979492,2.679688,7.179688v12.280273h-5.839844v-2.679688c-1.173828,2-3.359863,3-6.560059,3-1.653809,0-3.086914-.280273-4.299805-.839844-1.213867-.560547-2.140137-1.333984-2.780273-2.320312s-.959961-2.106445-.959961-3.360352c0-2,.75293-3.573242,2.260254-4.719727,1.505859-1.146484,3.833008-1.719727,6.97998-1.719727h4.959961c0-1.360352-.414062-2.40625-1.240234-3.140625-.82666-.732422-2.066895-1.099609-3.719727-1.099609-1.146973,0-2.273926,.179688-3.380371,.540039-1.106934,.359375-2.046875,.84668-2.819824,1.459961l-2.240234-4.360352c1.17334-.826172,2.580078-1.46582,4.220215-1.919922,1.640137-.453125,3.326172-.679688,5.060059-.679688,3.333008,0,5.893066,.793945,7.680176,2.379883Zm-5.320312,14.839844c.826172-.493164,1.413086-1.219727,1.760254-2.179688v-2.200195h-4.280273c-2.560059,0-3.839844,.839844-3.839844,2.519531,0,.800781,.312988,1.43457,.939941,1.900391,.626465,.466797,1.486328,.700195,2.580078,.700195,1.066406,0,2.013184-.246094,2.839844-.740234Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M83.399414,6.480469l-9.720215,22.839844c-.986816,2.479492-2.207031,4.225586-3.660156,5.239258-1.453613,1.013672-3.206543,1.520508-5.259766,1.520508-1.120117,0-2.227051-.173828-3.320312-.520508-1.09375-.34668-1.986816-.826172-2.679688-1.439453l2.279785-4.44043c.47998,.426758,1.033203,.760742,1.660156,1,.625977,.240234,1.246094,.360352,1.859863,.360352,.853027,0,1.546387-.207031,2.080078-.620117,.533203-.414062,1.013184-1.099609,1.439941-2.05957l.080078-.200195L58.839355,6.480469h6.439941l6.040039,14.599609,6.080078-14.599609h6Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n        <path d=\"M3.899902,27.419922c-1.586426-.706055-2.886719-1.712891-3.899902-3.019531l3.600098-4.320312c1.52002,2.053711,3.25293,3.080078,5.200195,3.080078,2.639648,0,3.959961-1.546875,3.959961-4.640625V5.200195H2.919922V0H19.200195V18.160156c0,3.439453-.854004,6.019531-2.560059,7.740234-1.707031,1.719727-4.213867,2.580078-7.52002,2.580078-1.893555,0-3.633789-.354492-5.220215-1.060547Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M46.839355,6.480469V28h-5.919922v-2.55957c-.827148,.933594-1.813965,1.646484-2.959961,2.139648-1.146973,.493164-2.387207,.740234-3.720215,.740234-2.82666,0-5.066895-.813477-6.719727-2.44043-1.653809-1.625977-2.480469-4.040039-2.480469-7.240234V6.480469h6.240234v11.239258c0,3.466797,1.453125,5.200195,4.359863,5.200195,1.493164,0,2.693359-.486328,3.600098-1.459961,.90625-.972656,1.359863-2.419922,1.359863-4.339844V6.480469h6.240234Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M72.179199,8.55957c1.640137,1.600586,2.459961,3.974609,2.459961,7.120117v12.320312h-6.239746v-11.360352c0-1.706055-.374023-2.979492-1.120117-3.819336-.74707-.839844-1.82666-1.260742-3.240234-1.260742-1.57373,0-2.82666,.487305-3.759766,1.459961-.933594,.974609-1.399902,2.420898-1.399902,4.34082v10.639648h-6.240234V6.480469h5.959961v2.519531c.826172-.90625,1.853516-1.606445,3.080078-2.099609s2.573242-.740234,4.040039-.740234c2.666504,0,4.819824,.799805,6.459961,2.399414Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M101.479004,19h-16.279785c.292969,1.333984,.986328,2.386719,2.080078,3.160156,1.092773,.773438,2.453125,1.160156,4.080078,1.160156,1.119629,0,2.112793-.166992,2.97998-.5,.866211-.333008,1.672852-.860352,2.419922-1.580078l3.319824,3.599609c-2.026855,2.320312-4.986816,3.480469-8.879883,3.480469-2.426758,0-4.57373-.473633-6.439941-1.419922-1.867188-.946289-3.307129-2.260742-4.320312-3.94043-1.013672-1.679688-1.52002-3.585938-1.52002-5.719727,0-2.106445,.5-4.006836,1.5-5.700195s2.373535-3.012695,4.120117-3.959961c1.746582-.946289,3.700195-1.419922,5.859863-1.419922,2.106445,0,4.013184,.453125,5.720215,1.359375,1.706055,.907227,3.046387,2.207031,4.02002,3.900391,.973145,1.693359,1.459961,3.660156,1.459961,5.900391,0,.080078-.040039,.639648-.120117,1.679688Zm-14.599609-6.919922c-.960449,.799805-1.546875,1.893555-1.760254,3.280273h10.600098c-.213867-1.360352-.800293-2.446289-1.760254-3.260742-.959961-.8125-2.133789-1.219727-3.52002-1.219727-1.413574,0-2.599609,.400391-3.55957,1.200195Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n        <path d=\"M3.899902,29.099609c-1.586426-.706055-2.886719-1.712891-3.899902-3.019531l3.600098-4.320312c1.52002,2.053711,3.25293,3.080078,5.200195,3.080078,2.639648,0,3.959961-1.546875,3.959961-4.640625V6.879883H2.919922V1.679688H19.200195V19.839844c0,3.439453-.854004,6.019531-2.560059,7.740234-1.707031,1.719727-4.213867,2.580078-7.52002,2.580078-1.893555,0-3.633789-.354492-5.220215-1.060547Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M46.839355,8.160156V29.679688h-5.919922v-2.55957c-.827148,.933594-1.813965,1.646484-2.959961,2.139648-1.146973,.493164-2.387207,.740234-3.720215,.740234-2.82666,0-5.066895-.813477-6.719727-2.44043-1.653809-1.625977-2.480469-4.040039-2.480469-7.240234V8.160156h6.240234v11.239258c0,3.466797,1.453125,5.200195,4.359863,5.200195,1.493164,0,2.693359-.486328,3.600098-1.459961,.90625-.972656,1.359863-2.419922,1.359863-4.339844V8.160156h6.240234Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M52.63916,0h6.240234V29.679688h-6.240234V0Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M86.039551,8.160156l-9.720215,22.839844c-.986816,2.479492-2.207031,4.225586-3.660156,5.239258-1.453613,1.013672-3.206543,1.520508-5.259766,1.520508-1.120117,0-2.227051-.173828-3.320312-.520508-1.09375-.34668-1.986816-.826172-2.679688-1.439453l2.279785-4.44043c.47998,.426758,1.033203,.760742,1.660156,1,.625977,.240234,1.246094,.360352,1.859863,.360352,.853027,0,1.546387-.207031,2.080078-.620117,.533203-.414062,1.013184-1.099609,1.439941-2.05957l.080078-.200195-9.319824-21.679688h6.439941l6.040039,14.599609,6.080078-14.599609h6Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n        <path d=\"M22.119629,22H9.119629l-2.47998,6H0L12.47998,0h6.399902l12.52002,28h-6.799805l-2.480469-6Zm-2.039551-4.919922L15.639648,6.360352l-4.439941,10.719727h8.880371Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M55.159668,6.480469V28h-5.919922v-2.55957c-.827148,.933594-1.813965,1.646484-2.959961,2.139648-1.146973,.493164-2.387207,.740234-3.720215,.740234-2.82666,0-5.066895-.813477-6.719727-2.44043-1.653809-1.625977-2.480469-4.040039-2.480469-7.240234V6.480469h6.240234v11.239258c0,3.466797,1.453125,5.200195,4.359863,5.200195,1.493164,0,2.693359-.486328,3.600098-1.459961,.90625-.972656,1.359863-2.419922,1.359863-4.339844V6.480469h6.240234Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M83.159668,6.480469V24.400391c0,3.946289-1.026855,6.879883-3.080078,8.799805-2.053711,1.919922-5.053711,2.879883-9,2.879883-2.080078,0-4.053711-.253906-5.919922-.759766-1.867188-.506836-3.414062-1.240234-4.640137-2.200195l2.47998-4.480469c.90625,.74707,2.053223,1.34082,3.439941,1.780273,1.38623,.44043,2.773438,.660156,4.160156,.660156,2.160156,0,3.75293-.487305,4.779785-1.459961,1.026367-.973633,1.540039-2.446289,1.540039-4.419922v-.919922c-1.626953,1.786133-3.893555,2.679688-6.799805,2.679688-1.973633,0-3.780273-.432617-5.419922-1.299805-1.640137-.866211-2.939941-2.085938-3.899902-3.660156-.960449-1.573242-1.44043-3.386719-1.44043-5.44043,0-2.052734,.47998-3.866211,1.44043-5.439453,.959961-1.573242,2.259766-2.792969,3.899902-3.660156,1.639648-.866211,3.446289-1.299805,5.419922-1.299805,3.120117,0,5.493164,1.026367,7.120117,3.080078v-2.759766h5.919922Zm-7.740234,13.899414c1.053223-.972656,1.580078-2.246094,1.580078-3.820312,0-1.572266-.526855-2.845703-1.580078-3.819336-1.053711-.973633-2.406738-1.459961-4.060059-1.459961s-3.013672,.486328-4.07959,1.459961c-1.066895,.973633-1.600098,2.24707-1.600098,3.819336,0,1.574219,.533203,2.847656,1.600098,3.820312,1.065918,.973633,2.42627,1.459961,4.07959,1.459961s3.006348-.486328,4.060059-1.459961Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M110.639648,6.480469V28h-5.919922v-2.55957c-.827148,.933594-1.813965,1.646484-2.959961,2.139648-1.146973,.493164-2.387207,.740234-3.720215,.740234-2.82666,0-5.066895-.813477-6.719727-2.44043-1.653809-1.625977-2.480469-4.040039-2.480469-7.240234V6.480469h6.240234v11.239258c0,3.466797,1.453125,5.200195,4.359863,5.200195,1.493164,0,2.693359-.486328,3.600098-1.459961,.90625-.972656,1.359863-2.419922,1.359863-4.339844V6.480469h6.240234Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M118.438965,27.660156c-1.706543-.44043-3.066895-.993164-4.080078-1.660156l2.080078-4.480469c.959961,.614258,2.120117,1.114258,3.47998,1.5,1.360352,.387695,2.693359,.580078,4,.580078,2.640137,0,3.959961-.652344,3.959961-1.959961,0-.612305-.359863-1.052734-1.07959-1.319336-.720215-.266602-1.827148-.493164-3.320312-.680664-1.759766-.265625-3.213867-.573242-4.359863-.919922-1.146973-.345703-2.140137-.959961-2.97998-1.839844s-1.260254-2.132812-1.260254-3.759766c0-1.360352,.393066-2.566406,1.180176-3.620117,.786133-1.052734,1.933105-1.873047,3.439941-2.459961,1.506348-.585938,3.286133-.879883,5.339844-.879883,1.52002,0,3.033203,.166992,4.540039,.5,1.506348,.333984,2.753418,.793945,3.740234,1.379883l-2.080078,4.44043c-1.893555-1.066406-3.959961-1.600586-6.200195-1.600586-1.333496,0-2.333496,.186523-3,.560547-.666504,.373047-1,.853516-1,1.439453,0,.666992,.360352,1.133789,1.080078,1.400391,.720215,.266602,1.866211,.519531,3.439941,.759766,1.760254,.293945,3.200195,.606445,4.320312,.94043,1.120117,.333008,2.092773,.939453,2.919922,1.819336,.826172,.879883,1.239746,2.107422,1.239746,3.680664,0,1.333008-.399902,2.519531-1.199707,3.55957-.800293,1.040039-1.966797,1.84668-3.5,2.419922-1.533691,.573242-3.354004,.860352-5.459961,.860352-1.787109,0-3.533691-.220703-5.240234-.660156Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M151.558594,26.959961c-.613281,.454102-1.366699,.793945-2.259766,1.020508-.893555,.225586-1.833984,.339844-2.819824,.339844-2.560059,0-4.540039-.65332-5.939941-1.959961-1.400391-1.306641-2.100098-3.226562-2.100098-5.760742V11.759766h-3.320312V6.959961h3.320312V1.719727h6.239746V6.959961h5.360352v4.799805h-5.360352v8.759766c0,.907227,.233398,1.607422,.700195,2.100586,.466309,.493164,1.125977,.740234,1.97998,.740234,.986328,0,1.826172-.266602,2.52002-.800781l1.679688,4.400391Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n        <path d=\"M4.97998,29.259766c-2.066895-.599609-3.727051-1.379883-4.97998-2.339844l2.199707-4.879883c1.200195,.879883,2.626465,1.586914,4.280273,2.120117,1.652832,.533203,3.306152,.799805,4.959961,.799805,1.839844,0,3.199707-.273438,4.080078-.820312,.879883-.545898,1.319824-1.273438,1.319824-2.179688,0-.666992-.259766-1.220703-.779785-1.660156-.52002-.44043-1.187012-.792969-2-1.060547-.813965-.265625-1.914062-.55957-3.300293-.879883-2.133789-.505859-3.879883-1.012695-5.239746-1.519531-1.360352-.506836-2.526855-1.320312-3.5-2.44043-.974121-1.120117-1.459961-2.613281-1.459961-4.479492,0-1.626953,.439941-3.100586,1.319824-4.419922,.879883-1.320312,2.206055-2.366211,3.97998-3.140625,1.772949-.772461,3.939941-1.160156,6.5-1.160156,1.786133,0,3.533203,.213867,5.240234,.640625,1.706055,.426758,3.199707,1.040039,4.47998,1.839844l-2,4.919922c-2.586914-1.46582-5.173828-2.200195-7.760254-2.200195-1.813477,0-3.153809,.293945-4.02002,.879883-.866699,.586914-1.299805,1.360352-1.299805,2.320312s.5,1.673828,1.5,2.139648c1,.467773,2.526367,.927734,4.580078,1.380859,2.132812,.506836,3.879883,1.013672,5.239746,1.519531,1.359863,.506836,2.526367,1.306641,3.5,2.400391,.973145,1.09375,1.459961,2.573242,1.459961,4.439453,0,1.600586-.446777,3.060547-1.339844,4.379883-.894043,1.320312-2.233887,2.367188-4.02002,3.140625-1.787109,.772461-3.959961,1.160156-6.52002,1.160156-2.213867,0-4.354004-.300781-6.419922-.900391Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M48.239258,20.679688H31.959473c.292969,1.333984,.986328,2.386719,2.080078,3.160156,1.092773,.773438,2.453125,1.160156,4.080078,1.160156,1.119629,0,2.112793-.166992,2.97998-.5,.866211-.333008,1.672852-.860352,2.419922-1.580078l3.319824,3.599609c-2.026855,2.320312-4.986816,3.480469-8.879883,3.480469-2.426758,0-4.57373-.473633-6.439941-1.419922-1.867188-.946289-3.307129-2.260742-4.320312-3.94043-1.013672-1.679688-1.52002-3.585938-1.52002-5.719727,0-2.106445,.5-4.006836,1.5-5.700195s2.373535-3.012695,4.120117-3.959961c1.746582-.946289,3.700195-1.419922,5.859863-1.419922,2.106445,0,4.013184,.453125,5.720215,1.359375,1.706055,.907227,3.046387,2.207031,4.02002,3.900391,.973145,1.693359,1.459961,3.660156,1.459961,5.900391,0,.080078-.040039,.639648-.120117,1.679688Zm-14.599609-6.919922c-.960449,.799805-1.546875,1.893555-1.760254,3.280273h10.600098c-.213867-1.360352-.800293-2.446289-1.760254-3.260742-.959961-.8125-2.133789-1.219727-3.52002-1.219727-1.413574,0-2.599609,.400391-3.55957,1.200195Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M70.699219,9.219727c1.640137,.919922,2.92627,2.213867,3.859863,3.879883,.933105,1.666992,1.399902,3.607422,1.399902,5.820312,0,2.213867-.466797,4.15332-1.399902,5.819336-.933594,1.666992-2.219727,2.959961-3.859863,3.880859-1.640137,.919922-3.459961,1.379883-5.459961,1.379883-2.74707,0-4.906738-.866211-6.47998-2.600586v10.040039h-6.240234V8.160156h5.959961v2.479492c1.546387-1.866211,3.800293-2.799805,6.760254-2.799805,2,0,3.819824,.459961,5.459961,1.379883Zm-2.600098,14.040039c1.026367-1.080078,1.540039-2.526367,1.540039-4.339844s-.513672-3.259766-1.540039-4.339844c-1.026855-1.080078-2.339844-1.620117-3.939941-1.620117s-2.913574,.540039-3.939941,1.620117c-1.026855,1.080078-1.540039,2.526367-1.540039,4.339844s.513184,3.259766,1.540039,4.339844c1.026367,1.080078,2.339844,1.620117,3.939941,1.620117s2.913086-.540039,3.939941-1.620117Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M93.998535,28.639648c-.613281,.454102-1.366699,.793945-2.259766,1.020508-.893555,.225586-1.833984,.339844-2.819824,.339844-2.560059,0-4.540039-.65332-5.939941-1.959961-1.400391-1.306641-2.100098-3.226562-2.100098-5.760742V13.439453h-3.320312v-4.799805h3.320312V3.399414h6.239746v5.240234h5.360352v4.799805h-5.360352v8.759766c0,.907227,.233398,1.607422,.700195,2.100586,.466309,.493164,1.125977,.740234,1.97998,.740234,.986328,0,1.826172-.266602,2.52002-.800781l1.679688,4.400391Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M117.79834,20.679688h-16.279785c.292969,1.333984,.986328,2.386719,2.080078,3.160156,1.092773,.773438,2.453125,1.160156,4.080078,1.160156,1.119629,0,2.112793-.166992,2.97998-.5,.866211-.333008,1.672852-.860352,2.419922-1.580078l3.319824,3.599609c-2.026855,2.320312-4.986816,3.480469-8.879883,3.480469-2.426758,0-4.57373-.473633-6.439941-1.419922-1.867188-.946289-3.307129-2.260742-4.320312-3.94043-1.013672-1.679688-1.52002-3.585938-1.52002-5.719727,0-2.106445,.5-4.006836,1.5-5.700195s2.373535-3.012695,4.120117-3.959961c1.746582-.946289,3.700195-1.419922,5.859863-1.419922,2.106445,0,4.013184,.453125,5.720215,1.359375,1.706055,.907227,3.046387,2.207031,4.02002,3.900391,.973145,1.693359,1.459961,3.660156,1.459961,5.900391,0,.080078-.040039,.639648-.120117,1.679688Zm-14.599609-6.919922c-.960449,.799805-1.546875,1.893555-1.760254,3.280273h10.600098c-.213867-1.360352-.800293-2.446289-1.760254-3.260742-.959961-.8125-2.133789-1.219727-3.52002-1.219727-1.413574,0-2.599609,.400391-3.55957,1.200195Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M156.058105,10.219727c1.586426,1.586914,2.379883,3.966797,2.379883,7.139648v12.320312h-6.239746v-11.360352c0-1.706055-.353516-2.979492-1.060059-3.819336-.707031-.839844-1.713867-1.260742-3.02002-1.260742-1.466797,0-2.626953,.474609-3.47998,1.420898-.853516,.946289-1.279785,2.353516-1.279785,4.219727v10.799805h-6.240234v-11.360352c0-3.385742-1.359863-5.080078-4.080078-5.080078-1.439941,0-2.586914,.474609-3.439941,1.420898-.853516,.946289-1.279785,2.353516-1.279785,4.219727v10.799805h-6.240234V8.160156h5.959961v2.479492c.800293-.90625,1.780273-1.599609,2.939941-2.080078,1.160156-.479492,2.433105-.719727,3.820312-.719727,1.52002,0,2.893066,.299805,4.120117,.899414,1.226074,.600586,2.212891,1.474609,2.959961,2.620117,.879883-1.120117,1.993164-1.986328,3.339844-2.599609,1.346191-.613281,2.819824-.919922,4.419922-.919922,2.693359,0,4.833008,.793945,6.419922,2.379883Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M182.218262,9.219727c1.640137,.919922,2.92627,2.213867,3.859863,3.879883,.933105,1.666992,1.399902,3.607422,1.399902,5.820312,0,2.213867-.466797,4.15332-1.399902,5.819336-.933594,1.666992-2.219727,2.959961-3.859863,3.880859-1.640137,.919922-3.459961,1.379883-5.459961,1.379883-2.959961,0-5.213867-.933594-6.760254-2.800781v2.480469h-5.959961V0h6.240234V10.439453c1.573242-1.732422,3.73291-2.599609,6.47998-2.599609,2,0,3.819824,.459961,5.459961,1.379883Zm-2.600098,14.040039c1.026367-1.080078,1.540039-2.526367,1.540039-4.339844s-.513672-3.259766-1.540039-4.339844c-1.026855-1.080078-2.339844-1.620117-3.939941-1.620117s-2.913574,.540039-3.939941,1.620117c-1.026855,1.080078-1.540039,2.526367-1.540039,4.339844s.513184,3.259766,1.540039,4.339844c1.026367,1.080078,2.339844,1.620117,3.939941,1.620117s2.913086-.540039,3.939941-1.620117Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M212.597656,20.679688h-16.279785c.292969,1.333984,.986328,2.386719,2.080078,3.160156,1.092773,.773438,2.453125,1.160156,4.080078,1.160156,1.119629,0,2.112793-.166992,2.97998-.5,.866211-.333008,1.672852-.860352,2.419922-1.580078l3.319824,3.599609c-2.026855,2.320312-4.986816,3.480469-8.879883,3.480469-2.426758,0-4.57373-.473633-6.439941-1.419922-1.867188-.946289-3.307129-2.260742-4.320312-3.94043-1.013672-1.679688-1.52002-3.585938-1.52002-5.719727,0-2.106445,.5-4.006836,1.5-5.700195s2.373535-3.012695,4.120117-3.959961c1.746582-.946289,3.700195-1.419922,5.859863-1.419922,2.106445,0,4.013184,.453125,5.720215,1.359375,1.706055,.907227,3.046387,2.207031,4.02002,3.900391,.973145,1.693359,1.459961,3.660156,1.459961,5.900391,0,.080078-.040039,.639648-.120117,1.679688Zm-14.599609-6.919922c-.960449,.799805-1.546875,1.893555-1.760254,3.280273h10.600098c-.213867-1.360352-.800293-2.446289-1.760254-3.260742-.959961-.8125-2.133789-1.219727-3.52002-1.219727-1.413574,0-2.599609,.400391-3.55957,1.200195Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M225.857422,8.639648c1.266602-.533203,2.726562-.799805,4.380371-.799805v5.759766c-.693848-.052734-1.160156-.080078-1.400391-.080078-1.786621,0-3.186523,.5-4.199707,1.5-1.013672,1-1.52002,2.5-1.52002,4.5v10.160156h-6.240234V8.160156h5.959961v2.839844c.746582-1.040039,1.753418-1.826172,3.02002-2.360352Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n        <path d=\"M7.459961,28.279297c-2.333984-1.25293-4.160156-2.979492-5.47998-5.179688s-1.97998-4.672852-1.97998-7.419922c0-2.746094,.660156-5.219727,1.97998-7.419922s3.145996-3.926758,5.47998-5.179688c2.333008-1.253906,4.953125-1.880859,7.859863-1.880859,2.90625,0,5.52002,.626953,7.840332,1.880859,2.319824,1.25293,4.145996,2.979492,5.47998,5.179688,1.333008,2.200195,2,4.673828,2,7.419922,0,2.74707-.666992,5.219727-2,7.419922-1.333984,2.200195-3.160156,3.926758-5.47998,5.179688-2.320312,1.253906-4.934082,1.880859-7.840332,1.880859-2.906738,0-5.526855-.626953-7.859863-1.880859Zm12.339844-4.779297c1.333496-.760742,2.380371-1.820312,3.140137-3.180664,.759766-1.359375,1.140137-2.90625,1.140137-4.639648s-.380371-3.280273-1.140137-4.639648c-.759766-1.360352-1.806641-2.419922-3.140137-3.180664-1.333496-.759766-2.82666-1.139648-4.47998-1.139648-1.653809,0-3.146973,.379883-4.47998,1.139648-1.333496,.760742-2.379883,1.820312-3.140137,3.180664-.759766,1.359375-1.139648,2.90625-1.139648,4.639648s.379883,3.280273,1.139648,4.639648c.760254,1.360352,1.806641,2.419922,3.140137,3.180664,1.333008,.759766,2.826172,1.139648,4.47998,1.139648,1.65332,0,3.146484-.379883,4.47998-1.139648Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M39.299805,28.580078c-1.827148-.946289-3.253906-2.260742-4.280273-3.94043-1.026855-1.679688-1.540039-3.585938-1.540039-5.719727s.513184-4.040039,1.540039-5.720703c1.026367-1.679688,2.453125-2.992188,4.280273-3.939453,1.826172-.946289,3.88623-1.419922,6.179688-1.419922,2.266602,0,4.246582,.473633,5.94043,1.419922,1.692871,.947266,2.92627,2.299805,3.699707,4.05957l-4.839844,2.600586c-1.120117-1.973633-2.733887-2.959961-4.839844-2.959961-1.626953,0-2.974121,.533203-4.040039,1.599609-1.066895,1.067383-1.600098,2.520508-1.600098,4.360352s.533203,3.293945,1.600098,4.359375c1.065918,1.067383,2.413086,1.600586,4.040039,1.600586,2.132812,0,3.746094-.986328,4.839844-2.959961l4.839844,2.639648c-.773438,1.707031-2.006836,3.040039-3.699707,4-1.693848,.959961-3.673828,1.44043-5.94043,1.44043-2.293457,0-4.353516-.473633-6.179688-1.419922Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M72.918945,28.639648c-.613281,.454102-1.366699,.793945-2.259766,1.020508-.893555,.225586-1.833984,.339844-2.819824,.339844-2.560059,0-4.540039-.65332-5.939941-1.959961-1.400391-1.306641-2.100098-3.226562-2.100098-5.760742V13.439453h-3.320312v-4.799805h3.320312V3.399414h6.239746v5.240234h5.360352v4.799805h-5.360352v8.759766c0,.907227,.233398,1.607422,.700195,2.100586,.466309,.493164,1.125977,.740234,1.97998,.740234,.986328,0,1.826172-.266602,2.52002-.800781l1.679688,4.400391Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M79.898926,28.580078c-1.799805-.946289-3.207031-2.260742-4.220215-3.94043-1.013672-1.679688-1.52002-3.585938-1.52002-5.719727s.506348-4.040039,1.52002-5.720703c1.013184-1.679688,2.42041-2.992188,4.220215-3.939453,1.799805-.946289,3.833008-1.419922,6.100098-1.419922,2.266113,0,4.292969,.473633,6.080078,1.419922,1.786133,.947266,3.186035,2.259766,4.199707,3.939453,1.013184,1.680664,1.52002,3.586914,1.52002,5.720703s-.506836,4.040039-1.52002,5.719727c-1.013672,1.679688-2.413574,2.994141-4.199707,3.94043-1.787109,.946289-3.813965,1.419922-6.080078,1.419922-2.26709,0-4.300293-.473633-6.100098-1.419922Zm10.040039-5.320312c1.026367-1.080078,1.540039-2.526367,1.540039-4.339844s-.513672-3.259766-1.540039-4.339844c-1.026855-1.080078-2.339844-1.620117-3.939941-1.620117s-2.919922,.540039-3.959961,1.620117-1.560059,2.526367-1.560059,4.339844,.52002,3.259766,1.560059,4.339844,2.359863,1.620117,3.959961,1.620117,2.913086-.540039,3.939941-1.620117Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M120.13916,9.219727c1.640137,.919922,2.92627,2.213867,3.859863,3.879883,.933105,1.666992,1.399902,3.607422,1.399902,5.820312,0,2.213867-.466797,4.15332-1.399902,5.819336-.933594,1.666992-2.219727,2.959961-3.859863,3.880859-1.640137,.919922-3.459961,1.379883-5.459961,1.379883-2.959961,0-5.213867-.933594-6.760254-2.800781v2.480469h-5.959961V0h6.240234V10.439453c1.573242-1.732422,3.73291-2.599609,6.47998-2.599609,2,0,3.819824,.459961,5.459961,1.379883Zm-2.600098,14.040039c1.026367-1.080078,1.540039-2.526367,1.540039-4.339844s-.513672-3.259766-1.540039-4.339844c-1.026855-1.080078-2.339844-1.620117-3.939941-1.620117s-2.913574,.540039-3.939941,1.620117c-1.026855,1.080078-1.540039,2.526367-1.540039,4.339844s.513184,3.259766,1.540039,4.339844c1.026367,1.080078,2.339844,1.620117,3.939941,1.620117s2.913086-.540039,3.939941-1.620117Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M150.518066,20.679688h-16.279785c.292969,1.333984,.986328,2.386719,2.080078,3.160156,1.092773,.773438,2.453125,1.160156,4.080078,1.160156,1.119629,0,2.112793-.166992,2.97998-.5,.866211-.333008,1.672852-.860352,2.419922-1.580078l3.319824,3.599609c-2.026855,2.320312-4.986816,3.480469-8.879883,3.480469-2.426758,0-4.57373-.473633-6.439941-1.419922-1.867188-.946289-3.307129-2.260742-4.320312-3.94043-1.013672-1.679688-1.52002-3.585938-1.52002-5.719727,0-2.106445,.5-4.006836,1.5-5.700195s2.373535-3.012695,4.120117-3.959961c1.746582-.946289,3.700195-1.419922,5.859863-1.419922,2.106445,0,4.013184,.453125,5.720215,1.359375,1.706055,.907227,3.046387,2.207031,4.02002,3.900391,.973145,1.693359,1.459961,3.660156,1.459961,5.900391,0,.080078-.040039,.639648-.120117,1.679688Zm-14.599609-6.919922c-.960449,.799805-1.546875,1.893555-1.760254,3.280273h10.600098c-.213867-1.360352-.800293-2.446289-1.760254-3.260742-.959961-.8125-2.133789-1.219727-3.52002-1.219727-1.413574,0-2.599609,.400391-3.55957,1.200195Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M163.77832,8.639648c1.266602-.533203,2.726562-.799805,4.380371-.799805v5.759766c-.693848-.052734-1.160156-.080078-1.400391-.080078-1.786621,0-3.186523,.5-4.199707,1.5-1.013672,1-1.52002,2.5-1.52002,4.5v10.160156h-6.240234V8.160156h5.959961v2.839844c.746582-1.040039,1.753418-1.826172,3.02002-2.360352Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n        <path d=\"M25.680176,1.679688V29.679688h-5.319824L6.400391,12.679688V29.679688H0V1.679688H5.360352l13.919922,17V1.679688h6.399902Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M36.02002,28.580078c-1.799805-.946289-3.207031-2.260742-4.220215-3.94043-1.013672-1.679688-1.52002-3.585938-1.52002-5.719727s.506348-4.040039,1.52002-5.720703c1.013184-1.679688,2.42041-2.992188,4.220215-3.939453,1.799805-.946289,3.833008-1.419922,6.100098-1.419922,2.266113,0,4.292969,.473633,6.080078,1.419922,1.786133,.947266,3.186035,2.259766,4.199707,3.939453,1.013184,1.680664,1.52002,3.586914,1.52002,5.720703s-.506836,4.040039-1.52002,5.719727c-1.013672,1.679688-2.413574,2.994141-4.199707,3.94043-1.787109,.946289-3.813965,1.419922-6.080078,1.419922-2.26709,0-4.300293-.473633-6.100098-1.419922Zm10.040039-5.320312c1.026367-1.080078,1.540039-2.526367,1.540039-4.339844s-.513672-3.259766-1.540039-4.339844c-1.026855-1.080078-2.339844-1.620117-3.939941-1.620117s-2.919922,.540039-3.959961,1.620117-1.560059,2.526367-1.560059,4.339844,.52002,3.259766,1.560059,4.339844,2.359863,1.620117,3.959961,1.620117,2.913086-.540039,3.939941-1.620117Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M78.840332,8.160156l-9.080078,21.519531h-6.439941l-9.040039-21.519531h6.439941l5.959961,14.639648,6.160156-14.639648h6Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M101.759766,20.679688h-16.279785c.292969,1.333984,.986328,2.386719,2.080078,3.160156,1.092773,.773438,2.453125,1.160156,4.080078,1.160156,1.119629,0,2.112793-.166992,2.97998-.5,.866211-.333008,1.672852-.860352,2.419922-1.580078l3.319824,3.599609c-2.026855,2.320312-4.986816,3.480469-8.879883,3.480469-2.426758,0-4.57373-.473633-6.439941-1.419922-1.867188-.946289-3.307129-2.260742-4.320312-3.94043-1.013672-1.679688-1.52002-3.585938-1.52002-5.719727,0-2.106445,.5-4.006836,1.5-5.700195s2.373535-3.012695,4.120117-3.959961c1.746582-.946289,3.700195-1.419922,5.859863-1.419922,2.106445,0,4.013184,.453125,5.720215,1.359375,1.706055,.907227,3.046387,2.207031,4.02002,3.900391,.973145,1.693359,1.459961,3.660156,1.459961,5.900391,0,.080078-.040039,.639648-.120117,1.679688Zm-14.599609-6.919922c-.960449,.799805-1.546875,1.893555-1.760254,3.280273h10.600098c-.213867-1.360352-.800293-2.446289-1.760254-3.260742-.959961-.8125-2.133789-1.219727-3.52002-1.219727-1.413574,0-2.599609,.400391-3.55957,1.200195Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M140.019531,10.219727c1.586426,1.586914,2.379883,3.966797,2.379883,7.139648v12.320312h-6.239746v-11.360352c0-1.706055-.353516-2.979492-1.060059-3.819336-.707031-.839844-1.713867-1.260742-3.02002-1.260742-1.466797,0-2.626953,.474609-3.47998,1.420898-.853516,.946289-1.279785,2.353516-1.279785,4.219727v10.799805h-6.240234v-11.360352c0-3.385742-1.359863-5.080078-4.080078-5.080078-1.439941,0-2.586914,.474609-3.439941,1.420898-.853516,.946289-1.279785,2.353516-1.279785,4.219727v10.799805h-6.240234V8.160156h5.959961v2.479492c.800293-.90625,1.780273-1.599609,2.939941-2.080078,1.160156-.479492,2.433105-.719727,3.820312-.719727,1.52002,0,2.893066,.299805,4.120117,.899414,1.226074,.600586,2.212891,1.474609,2.959961,2.620117,.879883-1.120117,1.993164-1.986328,3.339844-2.599609,1.346191-.613281,2.819824-.919922,4.419922-.919922,2.693359,0,4.833008,.793945,6.419922,2.379883Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M166.179688,9.219727c1.640137,.919922,2.92627,2.213867,3.859863,3.879883,.933105,1.666992,1.399902,3.607422,1.399902,5.820312,0,2.213867-.466797,4.15332-1.399902,5.819336-.933594,1.666992-2.219727,2.959961-3.859863,3.880859-1.640137,.919922-3.459961,1.379883-5.459961,1.379883-2.959961,0-5.213867-.933594-6.760254-2.800781v2.480469h-5.959961V0h6.240234V10.439453c1.573242-1.732422,3.73291-2.599609,6.47998-2.599609,2,0,3.819824,.459961,5.459961,1.379883Zm-2.600098,14.040039c1.026367-1.080078,1.540039-2.526367,1.540039-4.339844s-.513672-3.259766-1.540039-4.339844c-1.026855-1.080078-2.339844-1.620117-3.939941-1.620117s-2.913574,.540039-3.939941,1.620117c-1.026855,1.080078-1.540039,2.526367-1.540039,4.339844s.513184,3.259766,1.540039,4.339844c1.026367,1.080078,2.339844,1.620117,3.939941,1.620117s2.913086-.540039,3.939941-1.620117Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M196.558594,20.679688h-16.279785c.292969,1.333984,.986328,2.386719,2.080078,3.160156,1.092773,.773438,2.453125,1.160156,4.080078,1.160156,1.119629,0,2.112793-.166992,2.97998-.5,.866211-.333008,1.672852-.860352,2.419922-1.580078l3.319824,3.599609c-2.026855,2.320312-4.986816,3.480469-8.879883,3.480469-2.426758,0-4.57373-.473633-6.439941-1.419922-1.867188-.946289-3.307129-2.260742-4.320312-3.94043-1.013672-1.679688-1.52002-3.585938-1.52002-5.719727,0-2.106445,.5-4.006836,1.5-5.700195s2.373535-3.012695,4.120117-3.959961c1.746582-.946289,3.700195-1.419922,5.859863-1.419922,2.106445,0,4.013184,.453125,5.720215,1.359375,1.706055,.907227,3.046387,2.207031,4.02002,3.900391,.973145,1.693359,1.459961,3.660156,1.459961,5.900391,0,.080078-.040039,.639648-.120117,1.679688Zm-14.599609-6.919922c-.960449,.799805-1.546875,1.893555-1.760254,3.280273h10.600098c-.213867-1.360352-.800293-2.446289-1.760254-3.260742-.959961-.8125-2.133789-1.219727-3.52002-1.219727-1.413574,0-2.599609,.400391-3.55957,1.200195Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M209.818848,8.639648c1.266602-.533203,2.726562-.799805,4.380371-.799805v5.759766c-.693848-.052734-1.160156-.080078-1.400391-.080078-1.786621,0-3.186523,.5-4.199707,1.5-1.013672,1-1.52002,2.5-1.52002,4.5v10.160156h-6.240234V8.160156h5.959961v2.839844c.746582-1.040039,1.753418-1.826172,3.02002-2.360352Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n  `\r\n        <path d=\"M0,1.679688H12.720215c3.040039,0,5.726074,.580078,8.060059,1.740234,2.333008,1.160156,4.145996,2.793945,5.439941,4.899414,1.292969,2.107422,1.939941,4.560547,1.939941,7.360352s-.646973,5.253906-1.939941,7.360352c-1.293945,2.106445-3.106934,3.739258-5.439941,4.899414-2.333984,1.160156-5.02002,1.740234-8.060059,1.740234H0V1.679688ZM12.400391,24.359375c2.799805,0,5.032715-.779297,6.699707-2.339844,1.666504-1.55957,2.5-3.672852,2.5-6.339844,0-2.666016-.833496-4.780273-2.5-6.339844-1.666992-1.560547-3.899902-2.339844-6.699707-2.339844H6.47998V24.359375h5.92041Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M53.55957,20.679688h-16.279785c.292969,1.333984,.986328,2.386719,2.080078,3.160156,1.092773,.773438,2.453125,1.160156,4.080078,1.160156,1.119629,0,2.112793-.166992,2.97998-.5,.866211-.333008,1.672852-.860352,2.419922-1.580078l3.319824,3.599609c-2.026855,2.320312-4.986816,3.480469-8.879883,3.480469-2.426758,0-4.57373-.473633-6.439941-1.419922-1.867188-.946289-3.307129-2.260742-4.320312-3.94043-1.013672-1.679688-1.52002-3.585938-1.52002-5.719727,0-2.106445,.5-4.006836,1.5-5.700195s2.373535-3.012695,4.120117-3.959961c1.746582-.946289,3.700195-1.419922,5.859863-1.419922,2.106445,0,4.013184,.453125,5.720215,1.359375,1.706055,.907227,3.046387,2.207031,4.02002,3.900391,.973145,1.693359,1.459961,3.660156,1.459961,5.900391,0,.080078-.040039,.639648-.120117,1.679688Zm-14.599609-6.919922c-.960449,.799805-1.546875,1.893555-1.760254,3.280273h10.600098c-.213867-1.360352-.800293-2.446289-1.760254-3.260742-.959961-.8125-2.133789-1.219727-3.52002-1.219727-1.413574,0-2.599609,.400391-3.55957,1.200195Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M62.05957,28.580078c-1.827148-.946289-3.253906-2.260742-4.280273-3.94043-1.026855-1.679688-1.540039-3.585938-1.540039-5.719727s.513184-4.040039,1.540039-5.720703c1.026367-1.679688,2.453125-2.992188,4.280273-3.939453,1.826172-.946289,3.88623-1.419922,6.179688-1.419922,2.266602,0,4.246582,.473633,5.94043,1.419922,1.692871,.947266,2.92627,2.299805,3.699707,4.05957l-4.839844,2.600586c-1.120117-1.973633-2.733887-2.959961-4.839844-2.959961-1.626953,0-2.974121,.533203-4.040039,1.599609-1.066895,1.067383-1.600098,2.520508-1.600098,4.360352s.533203,3.293945,1.600098,4.359375c1.065918,1.067383,2.413086,1.600586,4.040039,1.600586,2.132812,0,3.746094-.986328,4.839844-2.959961l4.839844,2.639648c-.773438,1.707031-2.006836,3.040039-3.699707,4-1.693848,.959961-3.673828,1.44043-5.94043,1.44043-2.293457,0-4.353516-.473633-6.179688-1.419922Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M102.15918,20.679688h-16.279785c.292969,1.333984,.986328,2.386719,2.080078,3.160156,1.092773,.773438,2.453125,1.160156,4.080078,1.160156,1.119629,0,2.112793-.166992,2.97998-.5,.866211-.333008,1.672852-.860352,2.419922-1.580078l3.319824,3.599609c-2.026855,2.320312-4.986816,3.480469-8.879883,3.480469-2.426758,0-4.57373-.473633-6.439941-1.419922-1.867188-.946289-3.307129-2.260742-4.320312-3.94043-1.013672-1.679688-1.52002-3.585938-1.52002-5.719727,0-2.106445,.5-4.006836,1.5-5.700195s2.373535-3.012695,4.120117-3.959961c1.746582-.946289,3.700195-1.419922,5.859863-1.419922,2.106445,0,4.013184,.453125,5.720215,1.359375,1.706055,.907227,3.046387,2.207031,4.02002,3.900391,.973145,1.693359,1.459961,3.660156,1.459961,5.900391,0,.080078-.040039,.639648-.120117,1.679688Zm-14.599609-6.919922c-.960449,.799805-1.546875,1.893555-1.760254,3.280273h10.600098c-.213867-1.360352-.800293-2.446289-1.760254-3.260742-.959961-.8125-2.133789-1.219727-3.52002-1.219727-1.413574,0-2.599609,.400391-3.55957,1.200195Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M140.419434,10.219727c1.586426,1.586914,2.379883,3.966797,2.379883,7.139648v12.320312h-6.239746v-11.360352c0-1.706055-.353516-2.979492-1.060059-3.819336-.707031-.839844-1.713867-1.260742-3.02002-1.260742-1.466797,0-2.626953,.474609-3.47998,1.420898-.853516,.946289-1.279785,2.353516-1.279785,4.219727v10.799805h-6.240234v-11.360352c0-3.385742-1.359863-5.080078-4.080078-5.080078-1.439941,0-2.586914,.474609-3.439941,1.420898-.853516,.946289-1.279785,2.353516-1.279785,4.219727v10.799805h-6.240234V8.160156h5.959961v2.479492c.800293-.90625,1.780273-1.599609,2.939941-2.080078,1.160156-.479492,2.433105-.719727,3.820312-.719727,1.52002,0,2.893066,.299805,4.120117,.899414,1.226074,.600586,2.212891,1.474609,2.959961,2.620117,.879883-1.120117,1.993164-1.986328,3.339844-2.599609,1.346191-.613281,2.819824-.919922,4.419922-.919922,2.693359,0,4.833008,.793945,6.419922,2.379883Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M166.579102,9.219727c1.640137,.919922,2.92627,2.213867,3.859863,3.879883,.933105,1.666992,1.399902,3.607422,1.399902,5.820312,0,2.213867-.466797,4.15332-1.399902,5.819336-.933594,1.666992-2.219727,2.959961-3.859863,3.880859-1.640137,.919922-3.459961,1.379883-5.459961,1.379883-2.959961,0-5.213867-.933594-6.760254-2.800781v2.480469h-5.959961V0h6.240234V10.439453c1.573242-1.732422,3.73291-2.599609,6.47998-2.599609,2,0,3.819824,.459961,5.459961,1.379883Zm-2.600098,14.040039c1.026367-1.080078,1.540039-2.526367,1.540039-4.339844s-.513672-3.259766-1.540039-4.339844c-1.026855-1.080078-2.339844-1.620117-3.939941-1.620117s-2.913574,.540039-3.939941,1.620117c-1.026855,1.080078-1.540039,2.526367-1.540039,4.339844s.513184,3.259766,1.540039,4.339844c1.026367,1.080078,2.339844,1.620117,3.939941,1.620117s2.913086-.540039,3.939941-1.620117Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M196.95874,20.679688h-16.280273c.292969,1.333984,.986328,2.386719,2.080078,3.160156,1.092773,.773438,2.453125,1.160156,4.080078,1.160156,1.120117,0,2.113281-.166992,2.980469-.5,.866211-.333008,1.672852-.860352,2.419922-1.580078l3.319336,3.599609c-2.026367,2.320312-4.986328,3.480469-8.879883,3.480469-2.426758,0-4.573242-.473633-6.439453-1.419922-1.867188-.946289-3.307617-2.260742-4.320312-3.94043-1.013672-1.679688-1.520508-3.585938-1.520508-5.719727,0-2.106445,.5-4.006836,1.5-5.700195s2.374023-3.012695,4.120117-3.959961c1.74707-.946289,3.700195-1.419922,5.860352-1.419922,2.106445,0,4.012695,.453125,5.719727,1.359375,1.706055,.907227,3.046875,2.207031,4.020508,3.900391,.972656,1.693359,1.459961,3.660156,1.459961,5.900391,0,.080078-.040039,.639648-.120117,1.679688Zm-14.599609-6.919922c-.960938,.799805-1.546875,1.893555-1.760742,3.280273h10.600586c-.213867-1.360352-.800781-2.446289-1.760742-3.260742-.959961-.8125-2.133789-1.219727-3.519531-1.219727-1.414062,0-2.599609,.400391-3.55957,1.200195Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M210.218506,8.639648c1.266602-.533203,2.726562-.799805,4.379883-.799805v5.759766c-.693359-.052734-1.160156-.080078-1.400391-.080078-1.786133,0-3.186523,.5-4.199219,1.5-1.013672,1-1.520508,2.5-1.520508,4.5v10.160156h-6.240234V8.160156h5.959961v2.839844c.74707-1.040039,1.753906-1.826172,3.020508-2.360352Z\" style=\"fill: #231f20;\"/>\r\n      `,\r\n];\r\n\r\nexport default monthsSP;\r\n","const monhsCyrSP = [\r\n ` <path d=\"M24.15918,0V28H17.75977V20.55957H11.83984L6.87988,28H.04l5.83984-8.44043a9.14573,9.14573,0,0,1-4.36035-3.5A10.08449,10.08449,0,0,1,0,10.44043,10.22235,10.22235,0,0,1,1.47949,4.86035a9.59762,9.59762,0,0,1,4.2002-3.60058A15.1,15.1,0,0,1,12.0791,0ZM8.01953,6.55957a4.7861,4.7861,0,0,0-1.46,3.80078A4.91306,4.91306,0,0,0,7.96,14.12012a5.79163,5.79163,0,0,0,4.11914,1.32031h5.68067V5.28027H12.23926A6.21738,6.21738,0,0,0,8.01953,6.55957Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M30.67969,6.48047h6.20019v8.39941h9.35938V6.48047h6.24023V28H46.23926V19.96H36.87988V28H30.67969Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M78.67871,21.87988a5.26075,5.26075,0,0,1-2.20019,4.52051Q74.27832,28,69.919,28H58.43848V6.48047h11a11.66723,11.66723,0,0,1,6.32031,1.46A4.61,4.61,0,0,1,78.03906,12.04a4.94362,4.94362,0,0,1-.82031,2.82031,5.38222,5.38222,0,0,1-2.33984,1.89942A5.01282,5.01282,0,0,1,78.67871,21.87988ZM64.15918,15.32031h4.71973q3.27978,0,3.28027-2.32031,0-2.27929-3.28027-2.28027H64.15918Zm8.67969,6.08008a2.09765,2.09765,0,0,0-.79981-1.82031A4.3423,4.3423,0,0,0,69.51855,19H64.15918v4.75977h5.23926Q72.8379,23.75977,72.83887,21.40039Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M99.3584,8.54q2.6792,2.38037,2.68066,7.17969V28H96.19824V25.32031q-1.76074,3-6.55957,3a10.18248,10.18248,0,0,1-4.2998-.83984,6.41424,6.41424,0,0,1-2.78028-2.32031,6.04017,6.04017,0,0,1-.96-3.36036,5.60564,5.60564,0,0,1,2.25977-4.71972q2.26024-1.71973,6.98047-1.71973h4.96a3.9808,3.9808,0,0,0-1.24024-3.14062,5.46624,5.46624,0,0,0-3.71972-1.09961,10.84138,10.84138,0,0,0-3.37989.54,8.92513,8.92513,0,0,0-2.82031,1.46L82.39844,8.75977a13.54109,13.54109,0,0,1,4.21972-1.91993,18.91943,18.91943,0,0,1,5.06055-.67968Q96.67823,6.16016,99.3584,8.54ZM94.03906,23.37988a4.04992,4.04992,0,0,0,1.75977-2.17968V19H91.51855q-3.83936,0-3.83984,2.51953a2.244,2.244,0,0,0,.93945,1.90039,4.23334,4.23334,0,0,0,2.58008.7002A5.43181,5.43181,0,0,0,94.03906,23.37988Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M125.61816,7.54a9.91506,9.91506,0,0,1,3.85938,3.87988,11.71447,11.71447,0,0,1,1.40039,5.82031,11.70551,11.70551,0,0,1-1.40039,5.81934,9.91756,9.91756,0,0,1-3.85938,3.88086,10.96915,10.96915,0,0,1-5.46,1.37988,8.30833,8.30833,0,0,1-6.48047-2.60058v10.04H107.4375V6.48047h5.96V8.96a8.27939,8.27939,0,0,1,6.76074-2.7998A10.96915,10.96915,0,0,1,125.61816,7.54Zm-2.60058,14.04a6.03967,6.03967,0,0,0,1.54-4.33985,6.03966,6.03966,0,0,0-1.54-4.33984,5.60079,5.60079,0,0,0-7.87988,0,6.03966,6.03966,0,0,0-1.54,4.33984,6.03967,6.03967,0,0,0,1.54,4.33985,5.60079,5.60079,0,0,0,7.87988,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M153.31738,15.25977a6.45661,6.45661,0,0,1,2.24024,5.25976,6.66679,6.66679,0,0,1-2.5,5.54A11.05085,11.05085,0,0,1,146.03711,28.04L135.2373,28V6.48047h6.2002v6.87988h5.44043A9.98711,9.98711,0,0,1,153.31738,15.25977Zm-5.08008,7.58007a2.94247,2.94247,0,0,0,.96-2.39941,2.69091,2.69091,0,0,0-.93946-2.28027,4.694,4.694,0,0,0-2.78027-.75977l-4.04-.04v6.23926h4.04A4.04773,4.04773,0,0,0,148.2373,22.83984Z\" style=\"fill: #231f20\"/>\r\n      `, `\r\n        <path d=\"M31.5,23.86035q-3.78077,3.18018-10.86035,3.54v3.04h-5.96V27.36035q-7.12061-.3999-10.89942-3.58008A10.71871,10.71871,0,0,1,0,15.12012,10.64882,10.64882,0,0,1,3.78027,6.46q3.7793-3.13915,10.89942-3.58008V0h5.96V2.83984Q27.7207,3.24121,31.5,6.44043a10.78123,10.78123,0,0,1,3.78027,8.67969A10.81261,10.81261,0,0,1,31.5,23.86035Zm-16.82031-1.54V7.96q-4.28028.40137-6.33985,2.14063a6.19982,6.19982,0,0,0-2.05957,5.01953Q6.28027,21.44091,14.67969,22.32031ZM26.96,20.14063A6.3,6.3,0,0,0,29.04,15.08008q0-6.3999-8.40039-7.12012V22.32031A11.22792,11.22792,0,0,0,26.96,20.14063Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M60.43945,20.2002H44.16016a5.06609,5.06609,0,0,0,2.08007,3.16015,6.88717,6.88717,0,0,0,4.08008,1.16016,8.271,8.271,0,0,0,2.97949-.5,7.22541,7.22541,0,0,0,2.41993-1.58008L59.04,26.04q-3.041,3.48046-8.87988,3.48047a14.05227,14.05227,0,0,1-6.44043-1.41992,10.40982,10.40982,0,0,1-4.32032-3.94043,10.84972,10.84972,0,0,1-1.51953-5.71973,10.99841,10.99841,0,0,1,1.5-5.7002A10.51009,10.51009,0,0,1,43.5,8.78027a12.75862,12.75862,0,0,1,11.58008-.06054,9.9353,9.9353,0,0,1,4.01953,3.90039,11.62737,11.62737,0,0,1,1.46,5.90039Q60.55957,18.64063,60.43945,20.2002ZM45.83984,13.28027a5.10645,5.10645,0,0,0-1.75976,3.28028H54.67969a5.16567,5.16567,0,0,0-1.75977-3.26075,5.26574,5.26574,0,0,0-3.52051-1.21972A5.37431,5.37431,0,0,0,45.83984,13.28027Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M85.59961,23.08008a5.26313,5.26313,0,0,1-2.2002,4.52051q-2.20019,1.5996-6.56054,1.59961H65.35938V7.68066h11a11.66118,11.66118,0,0,1,6.31933,1.46,4.608,4.608,0,0,1,2.28027,4.0996,4.93623,4.93623,0,0,1-.82031,2.82032A5.37657,5.37657,0,0,1,81.79883,17.96,5.01367,5.01367,0,0,1,85.59961,23.08008ZM71.0791,16.52051h4.71973q3.27978,0,3.28027-2.32031,0-2.27931-3.28027-2.28028H71.0791Zm8.67969,6.08008a2.09766,2.09766,0,0,0-.79981-1.82032,4.33877,4.33877,0,0,0-2.51953-.58007H71.0791V24.96h5.24024Q79.75878,24.96,79.75879,22.60059Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M108.37891,8.74023a9.91761,9.91761,0,0,1,3.86035,3.87989,11.72441,11.72441,0,0,1,1.39941,5.82031,11.71545,11.71545,0,0,1-1.39941,5.81934,9.92009,9.92009,0,0,1-3.86035,3.88086,10.96654,10.96654,0,0,1-5.46,1.37988,8.30477,8.30477,0,0,1-6.4795-2.60059V36.96H90.19922V7.68066h5.96v2.4795A8.27606,8.27606,0,0,1,102.919,7.36035,10.96654,10.96654,0,0,1,108.37891,8.74023Zm-2.59961,14.04a6.03967,6.03967,0,0,0,1.54-4.33984,6.03967,6.03967,0,0,0-1.54-4.33984,5.60081,5.60081,0,0,0-7.87989,0,6.03545,6.03545,0,0,0-1.54,4.33984,6.03545,6.03545,0,0,0,1.54,4.33984,5.60081,5.60081,0,0,0,7.87989,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M133.67871,9.74023q2.6792,2.38038,2.68067,7.17969V29.2002h-5.84083V26.52051q-1.76073,3-6.55957,3a10.18248,10.18248,0,0,1-4.2998-.83985,6.414,6.414,0,0,1-2.78027-2.32031A6.04006,6.04006,0,0,1,115.919,23a5.60569,5.60569,0,0,1,2.25976-4.71973q2.26026-1.71972,6.98047-1.71972h4.96a3.98086,3.98086,0,0,0-1.24023-3.14063,5.46634,5.46634,0,0,0-3.71973-1.09961,10.84161,10.84161,0,0,0-3.37988.54,8.92539,8.92539,0,0,0-2.82032,1.46L116.71875,9.96A13.541,13.541,0,0,1,120.93848,8.04a18.919,18.919,0,0,1,5.06054-.67969Q130.99854,7.36035,133.67871,9.74023Zm-5.31933,14.83985a4.05,4.05,0,0,0,1.75976-2.17969V20.2002h-4.28027q-3.83935,0-3.83985,2.51953a2.244,2.244,0,0,0,.93946,1.90039,4.23335,4.23335,0,0,0,2.58007.70019A5.43184,5.43184,0,0,0,128.35938,24.58008Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M162.43848,7.68066V29.2002h-6.24024V12.7998h-6.7998l-.2002,3.80079a38.93471,38.93471,0,0,1-.7998,7.04A9.68151,9.68151,0,0,1,146.31836,28.04a5.105,5.105,0,0,1-4,1.60059,13.39639,13.39639,0,0,1-3.24023-.48047l.32031-5.12012a8.3639,8.3639,0,0,0,.91992.08008,2.37887,2.37887,0,0,0,2.10059-1.01953A6.20338,6.20338,0,0,0,143.3584,20.5a41.8527,41.8527,0,0,0,.36035-4.17969l.32031-8.63965Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M186.51758,16.46a6.45666,6.45666,0,0,1,2.24023,5.25977,6.66676,6.66676,0,0,1-2.5,5.54,11.05083,11.05083,0,0,1-7.02051,1.98046l-10.7998-.04V7.68066h6.2002v6.87989h5.44043A9.98713,9.98713,0,0,1,186.51758,16.46ZM181.4375,24.04a2.94248,2.94248,0,0,0,.96-2.39941,2.691,2.691,0,0,0-.93945-2.28028,4.694,4.694,0,0,0-2.78028-.75976l-4.04-.04V24.7998h4.04A4.04771,4.04771,0,0,0,181.4375,24.04Z\" style=\"fill: #231f20\"/>\r\n      `, `\r\n        <path d=\"M25.47949,28l-.04-16.75977L17.2002,25.04H14.31934L6.08008,11.55957V28H0V0H5.35938L15.83984,17.40039,26.16016,0h5.35937l.04,28Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M54.08008,8.54q2.6792,2.38037,2.67969,7.17969V28H50.91992V25.32031q-1.76074,3-6.56054,3a10.18559,10.18559,0,0,1-4.29981-.83984,6.41138,6.41138,0,0,1-2.7793-2.32031,6.033,6.033,0,0,1-.96093-3.36036,5.60644,5.60644,0,0,1,2.26074-4.71972q2.25879-1.71973,6.97949-1.71973h4.96a3.98023,3.98023,0,0,0-1.23926-3.14062,5.46905,5.46905,0,0,0-3.7207-1.09961,10.85038,10.85038,0,0,0-3.37988.54,8.93551,8.93551,0,0,0-2.82031,1.46L37.12012,8.75977a13.54109,13.54109,0,0,1,4.21972-1.91993,18.907,18.907,0,0,1,5.05957-.67968Q51.4004,6.16016,54.08008,8.54ZM48.75977,23.37988a4.0499,4.0499,0,0,0,1.75976-2.17968V19h-4.2793q-3.84081,0-3.84082,2.51953a2.24244,2.24244,0,0,0,.94043,1.90039,4.23135,4.23135,0,0,0,2.58008.7002A5.42831,5.42831,0,0,0,48.75977,23.37988Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M80.33887,7.54a9.91745,9.91745,0,0,1,3.86035,3.87988,11.72441,11.72441,0,0,1,1.39941,5.82031,11.71545,11.71545,0,0,1-1.39941,5.81934,9.92,9.92,0,0,1-3.86035,3.88086,10.96654,10.96654,0,0,1-5.46,1.37988,8.30479,8.30479,0,0,1-6.4795-2.60058v10.04H62.15918V6.48047h5.96V8.96a8.27607,8.27607,0,0,1,6.75977-2.7998A10.96654,10.96654,0,0,1,80.33887,7.54Zm-2.59961,14.04a6.03967,6.03967,0,0,0,1.54-4.33985,6.03966,6.03966,0,0,0-1.54-4.33984,5.60079,5.60079,0,0,0-7.87988,0,6.03545,6.03545,0,0,0-1.54,4.33984,6.03546,6.03546,0,0,0,1.54,4.33985,5.60079,5.60079,0,0,0,7.87988,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M107.23926,11.59961H99.959V28H93.75879V11.59961H86.47852V6.48047h20.76074Z\" style=\"fill: #231f20\"/>\r\n      `, `\r\n        <path d=\"M22.12012,22h-13L6.63965,28H0L12.47949,0h6.40039L31.40039,28H24.59961Zm-2.04-4.91992L15.63965,6.36035,11.2002,17.08008Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M56.04,6.48047V28H49.7998V11.59961h-8.96V28H34.63965V6.48047Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M80.17969,7.54A9.91745,9.91745,0,0,1,84.04,11.41992a11.72441,11.72441,0,0,1,1.39941,5.82031A11.71545,11.71545,0,0,1,84.04,23.05957a9.92,9.92,0,0,1-3.86035,3.88086,10.96654,10.96654,0,0,1-5.46,1.37988,8.30479,8.30479,0,0,1-6.4795-2.60058v10.04H62V6.48047h5.96V8.96a8.27607,8.27607,0,0,1,6.75977-2.7998A10.96654,10.96654,0,0,1,80.17969,7.54Zm-2.59961,14.04a6.03967,6.03967,0,0,0,1.54-4.33985,6.03966,6.03966,0,0,0-1.54-4.33984,5.60079,5.60079,0,0,0-7.87988,0,6.03545,6.03545,0,0,0-1.54,4.33984,6.03546,6.03546,0,0,0,1.54,4.33985,5.60079,5.60079,0,0,0,7.87988,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M110.59863,19H94.31934a5.06607,5.06607,0,0,0,2.08007,3.16016,6.88724,6.88724,0,0,0,4.08008,1.16015,8.271,8.271,0,0,0,2.97949-.5,7.22541,7.22541,0,0,0,2.41993-1.58008l3.32031,3.59961q-3.041,3.48048-8.87988,3.48047a14.05227,14.05227,0,0,1-6.44043-1.41992A10.40975,10.40975,0,0,1,89.55859,22.96a10.84972,10.84972,0,0,1-1.51953-5.71973,10.9984,10.9984,0,0,1,1.5-5.70019,10.51,10.51,0,0,1,4.12012-3.96,12.75866,12.75866,0,0,1,11.58008-.06055,9.93537,9.93537,0,0,1,4.01953,3.90039,11.6274,11.6274,0,0,1,1.46,5.90039Q110.71875,17.44043,110.59863,19ZM95.999,12.08008a5.1064,5.1064,0,0,0-1.75976,3.28027h10.59961a5.16562,5.16562,0,0,0-1.75977-3.26074,5.26575,5.26575,0,0,0-3.52051-1.21973A5.37426,5.37426,0,0,0,95.999,12.08008Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M135.959,6.48047V28h-6.24023V11.59961H122.919l-.2002,3.80078a38.93641,38.93641,0,0,1-.7998,7.04,9.68146,9.68146,0,0,1-2.08008,4.39941,5.10492,5.10492,0,0,1-4,1.60059,13.39653,13.39653,0,0,1-3.24024-.48047l.32032-5.12012a8.36351,8.36351,0,0,0,.91992.08008,2.37882,2.37882,0,0,0,2.10058-1.01953,6.20328,6.20328,0,0,0,.93946-2.60059,41.85246,41.85246,0,0,0,.36035-4.17968l.32031-8.63965Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M160.03809,15.25977a6.45663,6.45663,0,0,1,2.24023,5.25976,6.66676,6.66676,0,0,1-2.5,5.54A11.05085,11.05085,0,0,1,152.75781,28.04L141.958,28V6.48047h6.20019v6.87988h5.44043A9.98714,9.98714,0,0,1,160.03809,15.25977ZM154.958,22.83984a2.9425,2.9425,0,0,0,.96-2.39941,2.69094,2.69094,0,0,0-.93945-2.28027,4.69408,4.69408,0,0,0-2.78028-.75977l-4.04-.04v6.23926h4.04A4.04776,4.04776,0,0,0,154.958,22.83984Z\" style=\"fill: #231f20\"/>\r\n      `, `\r\n        <path d=\"M25.47949,30.04l-.04-16.75977L17.2002,27.08008H14.31934L6.08008,13.59961V30.04H0v-28H5.35938L15.83984,19.44043,26.16016,2.04h5.35937l.04,28Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M54.08008,10.58008q2.6792,2.38036,2.67969,7.17969V30.04H50.91992V27.36035q-1.76074,3-6.56054,3a10.18559,10.18559,0,0,1-4.29981-.83984,6.41138,6.41138,0,0,1-2.7793-2.32031,6.033,6.033,0,0,1-.96093-3.36036,5.60644,5.60644,0,0,1,2.26074-4.71972q2.25879-1.71973,6.97949-1.71973h4.96a3.98023,3.98023,0,0,0-1.23926-3.14062,5.46905,5.46905,0,0,0-3.7207-1.09961,10.85038,10.85038,0,0,0-3.37988.54,8.93551,8.93551,0,0,0-2.82031,1.46L37.12012,10.7998a13.54108,13.54108,0,0,1,4.21972-1.91992,18.907,18.907,0,0,1,5.05957-.67968Q51.4004,8.2002,54.08008,10.58008ZM48.75977,25.41992a4.04989,4.04989,0,0,0,1.75976-2.17969V21.04h-4.2793q-3.84081,0-3.84082,2.51953A2.24244,2.24244,0,0,0,43.33984,25.46a4.23135,4.23135,0,0,0,2.58008.7002A5.42831,5.42831,0,0,0,48.75977,25.41992Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M62.19922,8.52051h6.20019v12.7998l10.4795-12.7998h5.71972V30.04H78.39941V17.24023L67.959,30.04H62.19922ZM65.919,0H69.999a3.17315,3.17315,0,0,0,.78028,2.17969A2.86264,2.86264,0,0,0,72.959,2.96a2.99988,2.99988,0,0,0,2.21973-.78027A2.94314,2.94314,0,0,0,75.959,0h4.16016q-.041,6.20069-7.12012,6.2002Q65.959,6.2002,65.919,0Z\" style=\"fill: #231f20\"/>\r\n      `, `\r\n        <path d=\"M0,0H6.43945V18.24023L19.7998,0h6.08008V28H19.47949V9.7998L6.12012,28H0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M58.59961,7.58008a10.45483,10.45483,0,0,1,4.08008,3.93945,11.0878,11.0878,0,0,1,1.47949,5.7207A11.08173,11.08173,0,0,1,62.67969,22.96a10.45055,10.45055,0,0,1-4.08008,3.94043,12.06882,12.06882,0,0,1-5.87988,1.41992,12.54114,12.54114,0,0,1-5.2002-1.06054,10.34276,10.34276,0,0,1-6-7.46h-2.96V28H32.35938V6.48047h6.20019v7.91992h3a10.30241,10.30241,0,0,1,3.91992-6,11.759,11.759,0,0,1,7.24024-2.24023A12.06882,12.06882,0,0,1,58.59961,7.58008Zm-2.09961,14A6.13471,6.13471,0,0,0,58,17.24023a6.12224,6.12224,0,0,0-1.5-4.36035,5.314,5.314,0,0,0-7.60059,0,6.12224,6.12224,0,0,0-1.5,4.36035,6.13471,6.13471,0,0,0,1.5,4.33985,5.26713,5.26713,0,0,0,7.60059,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M68.47949,6.48047h6.2002v8.39941H84.04V6.48047H90.2793V28H84.04V19.96H74.67969V28h-6.2002Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M114.31934,15.25977a6.456,6.456,0,0,1,2.23925,5.25976,6.66406,6.66406,0,0,1-2.5,5.54A11.04783,11.04783,0,0,1,107.03906,28.04L96.23926,28V6.48047h6.20019v6.87988h5.43946A9.992,9.992,0,0,1,114.31934,15.25977Zm-5.08008,7.58007a2.94546,2.94546,0,0,0,.96-2.39941,2.68875,2.68875,0,0,0-.94043-2.28027,4.69289,4.69289,0,0,0-2.7793-.75977l-4.04-.04v6.23926h4.04A4.051,4.051,0,0,0,109.23926,22.83984Z\" style=\"fill: #231f20\"/>\r\n      `, `\r\n        <path d=\"M0,0H6.43945V18.24023L19.7998,0h6.08008V28H19.47949V9.7998L6.12012,28H0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M58.59961,7.58008a10.45483,10.45483,0,0,1,4.08008,3.93945,11.0878,11.0878,0,0,1,1.47949,5.7207A11.08173,11.08173,0,0,1,62.67969,22.96a10.45055,10.45055,0,0,1-4.08008,3.94043,12.06882,12.06882,0,0,1-5.87988,1.41992,12.54114,12.54114,0,0,1-5.2002-1.06054,10.34276,10.34276,0,0,1-6-7.46h-2.96V28H32.35938V6.48047h6.20019v7.91992h3a10.30241,10.30241,0,0,1,3.91992-6,11.759,11.759,0,0,1,7.24024-2.24023A12.06882,12.06882,0,0,1,58.59961,7.58008Zm-2.09961,14A6.13471,6.13471,0,0,0,58,17.24023a6.12224,6.12224,0,0,0-1.5-4.36035,5.314,5.314,0,0,0-7.60059,0,6.12224,6.12224,0,0,0-1.5,4.36035,6.13471,6.13471,0,0,0,1.5,4.33985,5.26713,5.26713,0,0,0,7.60059,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M88.7998,6.48047V28H82.55957V11.59961h-6.7998l-.2002,3.80078a38.9355,38.9355,0,0,1-.7998,7.04,9.68146,9.68146,0,0,1-2.08008,4.39941,5.10492,5.10492,0,0,1-4,1.60059A13.39653,13.39653,0,0,1,65.43945,27.96l.32032-5.12012a8.36351,8.36351,0,0,0,.91992.08008,2.37882,2.37882,0,0,0,2.10058-1.01953,6.20328,6.20328,0,0,0,.93946-2.60059,41.85246,41.85246,0,0,0,.36035-4.17968l.32031-8.63965Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M112.87891,15.25977a6.45663,6.45663,0,0,1,2.24023,5.25976,6.66676,6.66676,0,0,1-2.5,5.54A11.05085,11.05085,0,0,1,105.59863,28.04L94.79883,28V6.48047H100.999v6.87988h5.44043A9.98714,9.98714,0,0,1,112.87891,15.25977Zm-5.08008,7.58007a2.9425,2.9425,0,0,0,.96-2.39941,2.69094,2.69094,0,0,0-.93945-2.28027,4.69405,4.69405,0,0,0-2.78028-.75977l-4.04-.04v6.23926h4.04A4.04776,4.04776,0,0,0,107.79883,22.83984Z\" style=\"fill: #231f20\"/>\r\n      `, `\r\n        <path d=\"M22.12012,22h-13L6.63965,28H0L12.47949,0h6.40039L31.40039,28H24.59961Zm-2.04-4.91992L15.63965,6.36035,11.2002,17.08008Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M54.87988,21.87988a5.26075,5.26075,0,0,1-2.20019,4.52051Q50.47949,28,46.12012,28H34.63965V6.48047h11a11.66723,11.66723,0,0,1,6.32031,1.46A4.61,4.61,0,0,1,54.24023,12.04a4.94362,4.94362,0,0,1-.82031,2.82031,5.38222,5.38222,0,0,1-2.33984,1.89942A5.01282,5.01282,0,0,1,54.87988,21.87988ZM40.36035,15.32031h4.71973q3.27978,0,3.28027-2.32031,0-2.27929-3.28027-2.28027H40.36035ZM49.04,21.40039a2.09765,2.09765,0,0,0-.79981-1.82031A4.34228,4.34228,0,0,0,45.71973,19H40.36035v4.75977h5.23926Q49.03907,23.75977,49.04,21.40039Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M76.75977,11.59961h-11.04V28h-6.2002V6.48047H76.75977Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M101.83887,6.48047,92.11816,29.32031A11.24045,11.24045,0,0,1,88.459,34.55957a8.96613,8.96613,0,0,1-5.26074,1.52051,10.91734,10.91734,0,0,1-3.31933-.52051,7.33056,7.33056,0,0,1-2.68067-1.43945l2.28028-4.44043a5.34441,5.34441,0,0,0,1.66015,1A5.16467,5.16467,0,0,0,82.999,31.04a3.29958,3.29958,0,0,0,2.07911-.62012,5.26962,5.26962,0,0,0,1.44042-2.05957l.08008-.20019L77.27832,6.48047h6.44043l6.04,14.59961L95.83887,6.48047Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M108.29883,26.90039A10.6296,10.6296,0,0,1,104.01855,22.96a10.73932,10.73932,0,0,1-1.54-5.71973,10.74516,10.74516,0,0,1,1.54-5.7207,10.63405,10.63405,0,0,1,4.28028-3.93945,13.23113,13.23113,0,0,1,6.17969-1.41992A11.9826,11.9826,0,0,1,120.419,7.58008a8.42784,8.42784,0,0,1,3.69921,4.05957l-4.83984,2.60058a5.29,5.29,0,0,0-4.83984-2.96,5.47618,5.47618,0,0,0-4.04,1.59961,5.89445,5.89445,0,0,0-1.59961,4.36035,5.889,5.889,0,0,0,1.59961,4.35938,5.47314,5.47314,0,0,0,4.04,1.60059,5.23587,5.23587,0,0,0,4.83984-2.96l4.83984,2.63965a8.59262,8.59262,0,0,1-3.69921,4,11.84569,11.84569,0,0,1-5.94043,1.44043A13.23113,13.23113,0,0,1,108.29883,26.90039Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M145.919,11.59961h-7.28028V28h-6.20019V11.59961H125.1582V6.48047H145.919Z\" style=\"fill: #231f20\"/>\r\n      `, `\r\n        <path d=\"M7.41992,29.82031a13.89212,13.89212,0,0,1-5.44043-5.16015A14.22831,14.22831,0,0,1,0,17.19922a14.21642,14.21642,0,0,1,1.97949-7.459A13.87838,13.87838,0,0,1,7.41992,4.58008a16.15951,16.15951,0,0,1,7.7793-1.86133A16.31583,16.31583,0,0,1,21.7793,4a13.19177,13.19177,0,0,1,4.94043,3.67969l-4.16016,3.83984a8.9479,8.9479,0,0,0-7.04-3.2793,9.34665,9.34665,0,0,0-4.63965,1.13868,8.115,8.115,0,0,0-3.18066,3.18164,9.346,9.346,0,0,0-1.13965,4.63867,9.34826,9.34826,0,0,0,1.13965,4.64062,8.11,8.11,0,0,0,3.18066,3.17969,9.34768,9.34768,0,0,0,4.63965,1.14063,8.90362,8.90362,0,0,0,7.04-3.32032l4.16016,3.83985a12.97743,12.97743,0,0,1-4.96,3.7207,16.49453,16.49453,0,0,1-6.59961,1.2793A16.07477,16.07477,0,0,1,7.41992,29.82031Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M50.51953,22.19922H34.24023a5.06613,5.06613,0,0,0,2.08008,3.16016,6.88724,6.88724,0,0,0,4.08008,1.16015,8.24987,8.24987,0,0,0,2.97949-.5,7.19562,7.19562,0,0,0,2.41992-1.58008l3.32032,3.59961q-3.041,3.48048-8.87989,3.48047a14.03985,14.03985,0,0,1-6.44043-1.41992,10.40119,10.40119,0,0,1-4.32031-3.93945A10.85075,10.85075,0,0,1,27.96,20.43945a10.99739,10.99739,0,0,1,1.5-5.69922,10.51242,10.51242,0,0,1,4.12012-3.96093,12.75866,12.75866,0,0,1,11.58008-.06055,9.94161,9.94161,0,0,1,4.01953,3.90039,11.6274,11.6274,0,0,1,1.46,5.90039Q50.63965,20.63965,50.51953,22.19922ZM35.91992,15.2793a5.1112,5.1112,0,0,0-1.75976,3.28125H44.75977A5.16554,5.16554,0,0,0,43,15.29883a5.265,5.265,0,0,0-3.52051-1.21875A5.37878,5.37878,0,0,0,35.91992,15.2793Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M55.43945,9.67969h6.2002v8.40039H70.999V9.67969h6.24024V31.19922H70.999V23.16016H61.63965v8.03906h-6.2002Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M101.27832,14.79883H93.99805V31.19922H87.79883V14.79883H80.51855V9.67969h20.75977Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M123.51855,9.67969V31.19922H117.959V25.03906H113.3584l-4.08008,6.16016h-6.63965l4.91992-7.03906a7.33974,7.33974,0,0,1-3.41992-2.541,6.7486,6.7486,0,0,1-1.17969-4.01953,6.89571,6.89571,0,0,1,2.73926-5.85938,12.2969,12.2969,0,0,1,7.54-2.06054Zm-13.17968,5.80078a2.63758,2.63758,0,0,0-1.02051,2.31836,2.74253,2.74253,0,0,0,.98047,2.3418,4.937,4.937,0,0,0,2.97949.73828H117.959V14.75977H113.3584A5.226,5.226,0,0,0,110.33887,15.48047Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M147.3584,12.41992a8.80562,8.80562,0,0,1,3.58008,3.53906,10.74886,10.74886,0,0,1,1.25976,5.28125,9.80539,9.80539,0,0,1-5.67969,9.13868,13.75379,13.75379,0,0,1-6.08007,1.30078,11.253,11.253,0,0,1-8.86035-3.61914q-3.21974-3.6211-3.21973-10.6211,0-6.48047,2.82031-10.33984,2.81982-3.85841,8.65918-5.06055L150.07813,0l.83984,5.35938-9.04,1.80078a10.88865,10.88865,0,0,0-5.46,2.40039,7.32054,7.32054,0,0,0-2.09961,4.75976,9.46746,9.46746,0,0,1,3.36035-2.33984,10.96761,10.96761,0,0,1,4.2793-.82031A11.14336,11.14336,0,0,1,147.3584,12.41992ZM144.33789,25.2793a5.56128,5.56128,0,0,0,1.46-3.959,5.2047,5.2047,0,0,0-1.46-3.88086A5.26168,5.26168,0,0,0,140.47852,16a5.38394,5.38394,0,0,0-3.91993,1.43945,5.165,5.165,0,0,0-1.48046,3.88086,5.41734,5.41734,0,0,0,1.5205,3.97852,5.21412,5.21412,0,0,0,3.87989,1.541A5.03468,5.03468,0,0,0,144.33789,25.2793Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M174.57813,10.74023a9.91269,9.91269,0,0,1,3.85937,3.87891,11.71708,11.71708,0,0,1,1.40039,5.82031,11.7067,11.7067,0,0,1-1.40039,5.82032,9.93047,9.93047,0,0,1-3.85937,3.88086,10.96851,10.96851,0,0,1-5.46,1.3789,8.30763,8.30763,0,0,1-6.48046-2.59961V38.959h-6.24024V9.67969h5.96v2.48047a8.277,8.277,0,0,1,6.76074-2.80078A10.96991,10.96991,0,0,1,174.57813,10.74023ZM171.97754,24.7793a6.03807,6.03807,0,0,0,1.54-4.33985,6.04125,6.04125,0,0,0-1.54-4.33984,5.6032,5.6032,0,0,0-7.87988,0,6.04125,6.04125,0,0,0-1.54,4.33984,6.03807,6.03807,0,0,0,1.54,4.33985,5.59841,5.59841,0,0,0,7.87988,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M202.27734,18.459a6.456,6.456,0,0,1,2.23926,5.25977,6.666,6.666,0,0,1-2.5,5.541,11.04782,11.04782,0,0,1-7.01953,1.98046l-10.7998-.041V9.67969h6.20019v6.88086h5.43945A9.98623,9.98623,0,0,1,202.27734,18.459Zm-5.08007,7.58008a2.94342,2.94342,0,0,0,.96-2.39843,2.69073,2.69073,0,0,0-.94043-2.28125,4.69986,4.69986,0,0,0-2.7793-.75977l-4.04-.03906v6.23828h4.04A4.04586,4.04586,0,0,0,197.19727,26.03906Z\" style=\"fill: #231f20\"/>\r\n      `, `\r\n        <path d=\"M7.46,29.7998a13.94729,13.94729,0,0,1-5.48047-5.17968A14.14643,14.14643,0,0,1,0,17.2002,14.14892,14.14892,0,0,1,1.97949,9.78027,13.94736,13.94736,0,0,1,7.46,4.60059a16.335,16.335,0,0,1,7.85938-1.88086,16.22633,16.22633,0,0,1,7.84082,1.88086A14.01115,14.01115,0,0,1,30.63965,17.2002a14.01115,14.01115,0,0,1-7.47949,12.5996,16.22633,16.22633,0,0,1-7.84082,1.88086A16.335,16.335,0,0,1,7.46,29.7998ZM19.7998,25.02051a8.18475,8.18475,0,0,0,3.13965-3.18067,9.33728,9.33728,0,0,0,1.14063-4.63964,9.33729,9.33729,0,0,0-1.14063-4.63965A8.18488,8.18488,0,0,0,19.7998,9.37988a8.89078,8.89078,0,0,0-4.48046-1.13965,8.88463,8.88463,0,0,0-4.4795,1.13965A8.17831,8.17831,0,0,0,7.7002,12.56055,9.33729,9.33729,0,0,0,6.55957,17.2002,9.33728,9.33728,0,0,0,7.7002,21.83984a8.17818,8.17818,0,0,0,3.13964,3.18067,8.88463,8.88463,0,0,0,4.4795,1.13965A8.89078,8.89078,0,0,0,19.7998,25.02051Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M44.63965,23.04H41.39941V31.2002H35.15918V9.68066h6.24023V18.04h3.36036l5.83984-8.35938h6.63965L49.71973,20l8.04,11.2002H50.39941Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M78.71973,14.7998H71.43945V31.2002H65.24023V14.7998H57.96V9.68066H78.71973Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M100.96,9.68066V31.2002H95.39941V25.04H90.7998L86.71973,31.2002H80.08008L85,24.16016a7.33814,7.33814,0,0,1-3.41992-2.54,6.75328,6.75328,0,0,1-1.18067-4.01953,6.897,6.897,0,0,1,2.74024-5.86036,12.29291,12.29291,0,0,1,7.54-2.05957ZM87.7793,15.48047a2.64125,2.64125,0,0,0-1.01953,2.31933,2.74268,2.74268,0,0,0,.97949,2.34083,4.931,4.931,0,0,0,2.98047.73925h4.67968V14.75977H90.7998A5.22946,5.22946,0,0,0,87.7793,15.48047Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M124.79883,12.41992a8.80208,8.80208,0,0,1,3.58008,3.54,10.74274,10.74274,0,0,1,1.26074,5.28027,9.80417,9.80417,0,0,1-5.68067,9.13965,13.76418,13.76418,0,0,1-6.08007,1.30078,11.247,11.247,0,0,1-8.85938-3.62011q-3.22119-3.61964-3.2207-10.62012,0-6.48046,2.82031-10.33984Q111.439,3.24071,117.2793,2.04L127.51953,0l.83985,5.36035-9.04,1.79981a10.89307,10.89307,0,0,0-5.46,2.40039,7.32567,7.32567,0,0,0-2.10059,4.75976,9.48477,9.48477,0,0,1,3.36035-2.33984,10.97595,10.97595,0,0,1,4.28027-.82031A11.14214,11.14214,0,0,1,124.79883,12.41992ZM121.7793,25.28027a5.56953,5.56953,0,0,0,1.46-3.96,5.2062,5.2062,0,0,0-1.46-3.87988A5.25917,5.25917,0,0,0,117.919,16a5.3805,5.3805,0,0,0-3.91993,1.44043,5.16587,5.16587,0,0,0-1.47949,3.87988,5.41894,5.41894,0,0,0,1.51953,3.97949,5.21636,5.21636,0,0,0,3.87989,1.54A5.03814,5.03814,0,0,0,121.7793,25.28027Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M152.01953,10.74023a9.91515,9.91515,0,0,1,3.85938,3.87989,11.71447,11.71447,0,0,1,1.40039,5.82031,11.70551,11.70551,0,0,1-1.40039,5.81934,9.91763,9.91763,0,0,1-3.85938,3.88086,10.96915,10.96915,0,0,1-5.46,1.37988,8.30829,8.30829,0,0,1-6.48047-2.60059V38.96h-6.24023V9.68066h5.96v2.4795a8.27939,8.27939,0,0,1,6.76074-2.79981A10.96915,10.96915,0,0,1,152.01953,10.74023Zm-2.60058,14.04a6.03967,6.03967,0,0,0,1.54-4.33984,6.03967,6.03967,0,0,0-1.54-4.33984,5.60081,5.60081,0,0,0-7.87989,0,6.03967,6.03967,0,0,0-1.54,4.33984,6.03967,6.03967,0,0,0,1.54,4.33984,5.60081,5.60081,0,0,0,7.87989,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M179.71875,18.46a6.456,6.456,0,0,1,2.23926,5.25977,6.66409,6.66409,0,0,1-2.5,5.54,11.04786,11.04786,0,0,1-7.01953,1.98046l-10.79981-.04V9.68066h6.2002v6.87989h5.43945A9.99195,9.99195,0,0,1,179.71875,18.46ZM174.63867,26.04a2.94548,2.94548,0,0,0,.96-2.39941,2.68874,2.68874,0,0,0-.94043-2.28028,4.69281,4.69281,0,0,0-2.77929-.75976l-4.04-.04V26.7998h4.04A4.05089,4.05089,0,0,0,174.63867,26.04Z\" style=\"fill: #231f20\"/>\r\n      `, `\r\n        <path d=\"M25.67969,3.2002v28H19.2002V19.71973H6.47949V31.2002H0v-28H6.47949v11.04H19.2002V3.2002Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M36.17871,30.10059A10.55328,10.55328,0,0,1,31.959,26.16016a10.84972,10.84972,0,0,1-1.51953-5.71973,10.85559,10.85559,0,0,1,1.51953-5.7207,10.55768,10.55768,0,0,1,4.21973-3.93946A12.90777,12.90777,0,0,1,42.2793,9.36035a12.79425,12.79425,0,0,1,6.08008,1.41992,10.59782,10.59782,0,0,1,4.19921,3.93946,10.85615,10.85615,0,0,1,1.52051,5.7207,10.85028,10.85028,0,0,1-1.52051,5.71973,10.59337,10.59337,0,0,1-4.19921,3.94043,12.79425,12.79425,0,0,1-6.08008,1.41992A12.90777,12.90777,0,0,1,36.17871,30.10059Zm10.04-5.32032a6.03963,6.03963,0,0,0,1.54-4.33984,6.03963,6.03963,0,0,0-1.54-4.33984,5.196,5.196,0,0,0-3.93945-1.62012,5.26057,5.26057,0,0,0-3.96,1.62012,5.99276,5.99276,0,0,0-1.56055,4.33984,5.99276,5.99276,0,0,0,1.56055,4.33984,5.26057,5.26057,0,0,0,3.96,1.62012A5.196,5.196,0,0,0,46.21875,24.78027Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M76.79883,9.68066V31.2002H71.23926V25.04H66.63867L62.55859,31.2002H55.919l4.91992-7.04a7.33814,7.33814,0,0,1-3.41992-2.54,6.75276,6.75276,0,0,1-1.17969-4.01953,6.89871,6.89871,0,0,1,2.73926-5.86036,12.29683,12.29683,0,0,1,7.54-2.05957ZM63.61914,15.48047a2.63946,2.63946,0,0,0-1.02051,2.31933,2.74058,2.74058,0,0,0,.98047,2.34083,4.92971,4.92971,0,0,0,2.97949.73925h4.68067V14.75977H66.63867A5.226,5.226,0,0,0,63.61914,15.48047Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M100.63867,12.41992a8.80789,8.80789,0,0,1,3.58008,3.54,10.74237,10.74237,0,0,1,1.25977,5.28027,9.80543,9.80543,0,0,1-5.67969,9.13965,13.76723,13.76723,0,0,1-6.08008,1.30078,11.25044,11.25044,0,0,1-8.86035-3.62011q-3.21973-3.61964-3.21973-10.62012,0-6.48046,2.82031-10.33984Q87.27882,3.24071,93.11816,2.04L103.3584,0l.83984,5.36035-9.04,1.79981a10.89719,10.89719,0,0,0-5.46,2.40039,7.325,7.325,0,0,0-2.09961,4.75976A9.46754,9.46754,0,0,1,90.959,11.98047a10.96764,10.96764,0,0,1,4.2793-.82031A11.14333,11.14333,0,0,1,100.63867,12.41992ZM97.61816,25.28027a5.56524,5.56524,0,0,0,1.46-3.96,5.20237,5.20237,0,0,0-1.46-3.87988A5.25835,5.25835,0,0,0,93.75879,16a5.38049,5.38049,0,0,0-3.91992,1.44043,5.16274,5.16274,0,0,0-1.48047,3.87988,5.41958,5.41958,0,0,0,1.52051,3.97949,5.2133,5.2133,0,0,0,3.87988,1.54A5.0374,5.0374,0,0,0,97.61816,25.28027Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M127.8584,10.74023a9.91506,9.91506,0,0,1,3.85937,3.87989,11.71436,11.71436,0,0,1,1.40039,5.82031,11.70541,11.70541,0,0,1-1.40039,5.81934,9.91754,9.91754,0,0,1-3.85937,3.88086,10.96918,10.96918,0,0,1-5.46,1.37988,8.30829,8.30829,0,0,1-6.48047-2.60059V38.96h-6.24024V9.68066h5.96v2.4795a8.27939,8.27939,0,0,1,6.76074-2.79981A10.96918,10.96918,0,0,1,127.8584,10.74023Zm-2.60059,14.04a6.03963,6.03963,0,0,0,1.54-4.33984,6.03963,6.03963,0,0,0-1.54-4.33984,5.60079,5.60079,0,0,0-7.87988,0,6.03963,6.03963,0,0,0-1.54,4.33984,6.03963,6.03963,0,0,0,1.54,4.33984,5.60079,5.60079,0,0,0,7.87988,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M155.55762,18.46a6.456,6.456,0,0,1,2.23926,5.25977,6.66409,6.66409,0,0,1-2.5,5.54,11.04787,11.04787,0,0,1-7.01954,1.98046l-10.7998-.04V9.68066h6.20019v6.87989h5.43946A9.992,9.992,0,0,1,155.55762,18.46ZM150.47754,26.04a2.94548,2.94548,0,0,0,.96-2.39941,2.68877,2.68877,0,0,0-.94043-2.28028,4.69282,4.69282,0,0,0-2.7793-.75976l-4.04-.04V26.7998h4.04A4.05094,4.05094,0,0,0,150.47754,26.04Z\" style=\"fill: #231f20\"/>\r\n      `, `\r\n        <path d=\"M31.75977,25.91992V37h-6V31.2002H6V37H0L.04,25.91992H1.15918q2.521-.07909,3.56055-3.67969A44.91532,44.91532,0,0,0,6,11.96L6.31934,3.2002h21.5205V25.91992ZM10.87988,20.94043a11.117,11.117,0,0,1-1.96,4.97949H21.43945V8.48047H11.83984l-.12011,4.08008A58.92865,58.92865,0,0,1,10.87988,20.94043Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M56.15918,22.2002H39.87988A5.06611,5.06611,0,0,0,41.96,25.36035,6.88715,6.88715,0,0,0,46.04,26.52051a8.27106,8.27106,0,0,0,2.97949-.5,7.22548,7.22548,0,0,0,2.41992-1.58008L54.75977,28.04q-3.041,3.48046-8.87989,3.48047a14.0523,14.0523,0,0,1-6.44043-1.41992,10.40979,10.40979,0,0,1-4.32031-3.94043,10.84972,10.84972,0,0,1-1.51953-5.71973,10.99841,10.99841,0,0,1,1.5-5.7002,10.51009,10.51009,0,0,1,4.12012-3.96,12.7586,12.7586,0,0,1,11.58007-.06054,9.93533,9.93533,0,0,1,4.01954,3.90039,11.62737,11.62737,0,0,1,1.46,5.90039Q56.2793,20.64063,56.15918,22.2002ZM41.55957,15.28027a5.10651,5.10651,0,0,0-1.75977,3.28028H50.39941a5.16562,5.16562,0,0,0-1.75976-3.26075,5.26574,5.26574,0,0,0-3.52051-1.21972A5.37429,5.37429,0,0,0,41.55957,15.28027Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M70.55957,23.04H67.31934V31.2002H61.0791V9.68066h6.24024V18.04h3.36035l5.83984-8.35938h6.63965L75.63965,20l8.04,11.2002H76.31934Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M102.39941,11.74023q2.67921,2.38038,2.68067,7.17969V31.2002H99.23926V28.52051q-1.76074,3-6.55957,3a10.1825,10.1825,0,0,1-4.29981-.83985,6.41413,6.41413,0,0,1-2.78027-2.32031A6.04006,6.04006,0,0,1,84.63965,25a5.60569,5.60569,0,0,1,2.25976-4.71973q2.26026-1.71972,6.98047-1.71972h4.96a3.98086,3.98086,0,0,0-1.24023-3.14063,5.46634,5.46634,0,0,0-3.71973-1.09961,10.84161,10.84161,0,0,0-3.37988.54,8.92533,8.92533,0,0,0-2.82031,1.46L85.43945,11.96A13.541,13.541,0,0,1,89.65918,10.04a18.919,18.919,0,0,1,5.06055-.67969Q99.71923,9.36035,102.39941,11.74023ZM97.08008,26.58008a4.05,4.05,0,0,0,1.75976-2.17969V22.2002H94.55957q-3.83935,0-3.83984,2.51953a2.244,2.244,0,0,0,.93945,1.90039,4.23338,4.23338,0,0,0,2.58008.70019A5.43183,5.43183,0,0,0,97.08008,26.58008Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M128.35938,12.41992a8.80793,8.80793,0,0,1,3.58007,3.54,10.74226,10.74226,0,0,1,1.25977,5.28027,9.80543,9.80543,0,0,1-5.67969,9.13965,13.76723,13.76723,0,0,1-6.08008,1.30078,11.25047,11.25047,0,0,1-8.86035-3.62011q-3.21972-3.61964-3.21972-10.62012,0-6.48046,2.82031-10.33984,2.81982-3.85988,8.65918-5.06055L131.0791,0l.83985,5.36035-9.04,1.79981a10.89711,10.89711,0,0,0-5.46,2.40039,7.32494,7.32494,0,0,0-2.09961,4.75976,9.46737,9.46737,0,0,1,3.36035-2.33984,10.96756,10.96756,0,0,1,4.27929-.82031A11.14337,11.14337,0,0,1,128.35938,12.41992Zm-3.02051,12.86035a5.56527,5.56527,0,0,0,1.46-3.96,5.2024,5.2024,0,0,0-1.46-3.87988A5.25839,5.25839,0,0,0,121.47949,16a5.38049,5.38049,0,0,0-3.91992,1.44043,5.16278,5.16278,0,0,0-1.48047,3.87988,5.41962,5.41962,0,0,0,1.52051,3.97949,5.2133,5.2133,0,0,0,3.87988,1.54A5.03744,5.03744,0,0,0,125.33887,25.28027Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M155.5791,10.74023a9.91515,9.91515,0,0,1,3.85938,3.87989,11.71447,11.71447,0,0,1,1.40039,5.82031,11.70551,11.70551,0,0,1-1.40039,5.81934,9.91763,9.91763,0,0,1-3.85938,3.88086,10.96915,10.96915,0,0,1-5.46,1.37988,8.30829,8.30829,0,0,1-6.48047-2.60059V38.96h-6.24023V9.68066h5.96v2.4795a8.27939,8.27939,0,0,1,6.76074-2.79981A10.96915,10.96915,0,0,1,155.5791,10.74023Zm-2.60058,14.04a6.03967,6.03967,0,0,0,1.54-4.33984,6.03967,6.03967,0,0,0-1.54-4.33984,5.60081,5.60081,0,0,0-7.87989,0,6.03967,6.03967,0,0,0-1.54,4.33984,6.03967,6.03967,0,0,0,1.54,4.33984,5.60081,5.60081,0,0,0,7.87989,0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M183.27832,18.46a6.456,6.456,0,0,1,2.23926,5.25977,6.66409,6.66409,0,0,1-2.5,5.54,11.04786,11.04786,0,0,1-7.01953,1.98046l-10.79981-.04V9.68066h6.2002v6.87989h5.43945A9.99195,9.99195,0,0,1,183.27832,18.46ZM178.19824,26.04a2.94548,2.94548,0,0,0,.96-2.39941,2.68874,2.68874,0,0,0-.94043-2.28028,4.69281,4.69281,0,0,0-2.77929-.75976l-4.04-.04V26.7998h4.04A4.05089,4.05089,0,0,0,178.19824,26.04Z\" style=\"fill: #231f20\"/>\r\n      `];\r\n\r\nexport default monhsCyrSP;","const weekDaysSP = {\r\n  monday: `  < <path d=\"M8.685059,9.543945l-.013672-5.726562-2.808594,4.717773h-.995117L2.072266,3.94043v5.603516H0V0H1.827148l3.572266,5.930664L8.916992,0h1.813477l.027344,9.543945h-2.072754Z\" style=\"fill: #231f20;\"/>\r\n      <path d=\"M14.282227,9.168945c-.61377-.322266-1.093262-.770508-1.438477-1.342773-.345703-.573242-.518066-1.222656-.518066-1.950195,0-.726562,.172363-1.376953,.518066-1.949219,.345215-.573242,.824707-1.020508,1.438477-1.34375,.613281-.322266,1.306641-.483398,2.079102-.483398s1.463379,.161133,2.072754,.483398c.608887,.323242,1.085938,.770508,1.431641,1.34375,.345215,.572266,.518066,1.222656,.518066,1.949219,0,.727539-.172852,1.376953-.518066,1.950195-.345703,.572266-.822754,1.020508-1.431641,1.342773-.609375,.323242-1.300293,.484375-2.072754,.484375s-1.46582-.161133-2.079102-.484375Zm3.422363-1.813477c.349609-.368164,.524902-.861328,.524902-1.479492s-.175293-1.111328-.524902-1.479492c-.350098-.368164-.797852-.551758-1.343262-.551758s-.995117,.183594-1.349609,.551758-.531738,.861328-.531738,1.479492,.177246,1.111328,.531738,1.479492,.804199,.552734,1.349609,.552734,.993164-.18457,1.343262-.552734Z\" style=\"fill: #231f20;\"/>\r\n      <path d=\"M28.461914,2.916992c.559082,.545898,.838867,1.354492,.838867,2.427734v4.199219h-2.126953v-3.87207c0-.582031-.127441-1.015625-.381836-1.302734-.254883-.286133-.623047-.428711-1.104492-.428711-.536621,0-.963867,.166016-1.281738,.49707-.318359,.332031-.477051,.825195-.477051,1.479492v3.626953h-2.126953V2.208008h2.03125v.859375c.281738-.308594,.631836-.547852,1.049805-.71582s.877441-.251953,1.377441-.251953c.908691,0,1.643066,.272461,2.20166,.817383Z\" style=\"fill: #231f20;\"/>`,\r\n  tuesday: `  \r\n        <path d=\"M3.054199,1.799805H0V0H8.316895V1.799805h-3.054199v7.744141H3.054199V1.799805Z\" style=\"fill: #231f20;\"/>\r\n    \r\n    \r\n        <path d=\"M16.577148,2.208008v7.335938h-2.017578v-.873047c-.282227,.318359-.618652,.561523-1.009277,.729492-.390625,.168945-.813477,.25293-1.268066,.25293-.963379,0-1.727051-.277344-2.290527-.832031s-.845215-1.376953-.845215-2.467773V2.208008h2.126953v3.832031c0,1.181641,.495117,1.772461,1.486328,1.772461,.508789,0,.917969-.166016,1.227051-.498047,.308594-.331055,.463379-.824219,.463379-1.479492V2.208008h2.126953Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M25.699219,6.476562h-5.549316c.099609,.454102,.335938,.813477,.708984,1.077148,.372559,.263672,.835938,.394531,1.390625,.394531,.381836,0,.720215-.056641,1.015625-.169922s.570312-.292969,.825195-.539062l1.131348,1.227539c-.690918,.791016-1.699707,1.186523-3.026855,1.186523-.827148,0-1.559082-.161133-2.195312-.484375-.63623-.322266-1.126953-.770508-1.472168-1.342773-.345703-.573242-.518066-1.222656-.518066-1.950195,0-.717773,.17041-1.365234,.51123-1.942383s.808594-1.027344,1.404297-1.350586c.595215-.322266,1.26123-.483398,1.997559-.483398,.717773,0,1.367676,.154297,1.949707,.462891,.581543,.30957,1.038574,.75293,1.370117,1.330078,.332031,.577148,.498047,1.24707,.498047,2.010742,0,.027344-.013672,.21875-.041016,.573242Zm-4.977051-2.359375c-.327148,.272461-.526855,.645508-.599609,1.118164h3.613281c-.073242-.463867-.272949-.833984-.600098-1.111328s-.727539-.416016-1.199707-.416016c-.481934,0-.88623,.136719-1.213867,.40918Z\" style=\"fill: #231f20;\"/>\r\n     `,\r\n  wednesday: `        \r\n          <path d=\"M15.25732422,.57324219l-3.12207031,9.54394531h-2.37255859L7.66308594,3.65429688l-2.16796875,6.46289062H3.13623047L0,.57324219H2.29101562l2.15429688,6.70800781L6.69482422,.57324219h2.04541016l2.18115234,6.76269531L13.14404297,.57324219h2.11328125Z\" style=\"fill: #231f20;\"/>\r\n      \r\n\r\n          <path d=\"M22.93652344,7.04980469h-5.54931641c.09960938,.45410156,.3359375,.81347656,.70898438,1.07714844,.37255859,.26367188,.8359375,.39453125,1.390625,.39453125,.38183594,0,.72021484-.05664062,1.015625-.16992188s.5703125-.29296875,.82519531-.5390625l1.13134766,1.22753906c-.69091797,.79101562-1.69970703,1.18652344-3.02685547,1.18652344-.82714844,0-1.55908203-.16113281-2.1953125-.484375-.63623047-.32226562-1.12695312-.77050781-1.47216797-1.34277344-.34570312-.57324219-.51806641-1.22265625-.51806641-1.95019531,0-.71777344,.17041016-1.36523438,.51123047-1.94238281s.80859375-1.02734375,1.40429688-1.35058594c.59521484-.32226562,1.26123047-.48339844,1.99755859-.48339844,.71777344,0,1.36767578,.15429688,1.94970703,.46289062,.58154297,.30957031,1.03857422,.75292969,1.37011719,1.33007812,.33203125,.57714844,.49804688,1.24707031,.49804688,2.01074219,0,.02734375-.01367188,.21875-.04101562,.57324219Zm-4.97705078-2.359375c-.32714844,.27246094-.52685547,.64550781-.59960938,1.11816406h3.61328125c-.07324219-.46386719-.27294922-.83398438-.60009766-1.11132812s-.72753906-.41601562-1.19970703-.41601562c-.48193359,0-.88623047,.13671875-1.21386719,.40917969Z\" style=\"fill: #231f20;\"/>\r\n          <path d=\"M31.8671875,0V10.1171875h-2.03173828v-.84570312c-.52734375,.63671875-1.29052734,.95507812-2.29052734,.95507812-.69091797,0-1.31591797-.15429688-1.875-.46386719-.55859375-.30859375-.99755859-.75-1.31542969-1.32226562-.31835938-.57324219-.47753906-1.23632812-.47753906-1.99121094,0-.75390625,.15917969-1.41796875,.47753906-1.99023438,.31787109-.57324219,.75683594-1.01367188,1.31542969-1.32324219,.55908203-.30859375,1.18408203-.46289062,1.875-.46289062,.93603516,0,1.66796875,.29492188,2.1953125,.88574219V0h2.12695312Zm-2.61816406,7.92871094c.35498047-.36816406,.53222656-.86132812,.53222656-1.47949219s-.17724609-1.11132812-.53222656-1.47949219c-.35449219-.36816406-.79980469-.55175781-1.3359375-.55175781-.54541016,0-.99560547,.18359375-1.35009766,.55175781s-.53173828,.86132812-.53173828,1.47949219,.17724609,1.11132812,.53173828,1.47949219,.8046875,.55273438,1.35009766,.55273438c.53613281,0,.98144531-.18457031,1.3359375-.55273438Z\" style=\"fill: #231f20;\"/>\r\n       `,\r\n  thursday: `   <path d=\"M3.054199,2.373047H0V.573242H8.316895v1.799805h-3.054199v7.744141H3.054199V2.373047Z\" style=\"fill: #231f20;\"/>\r\n      <path d=\"M16.013672,3.490234c.559082,.545898,.838867,1.354492,.838867,2.427734v4.199219h-2.126953v-3.87207c0-.582031-.127441-1.015625-.381836-1.302734-.254883-.286133-.623047-.428711-1.104492-.428711-.536621,0-.963867,.166016-1.281738,.49707-.318359,.332031-.477051,.825195-.477051,1.479492v3.626953h-2.126953V0h2.126953V3.544922c.28125-.28125,.622559-.49707,1.022461-.647461,.399902-.149414,.836426-.224609,1.309082-.224609,.908691,0,1.643066,.272461,2.20166,.817383Z\" style=\"fill: #231f20;\"/>\r\n      <path d=\"M26.164551,2.78125v7.335938h-2.017578v-.873047c-.282227,.318359-.618652,.561523-1.009277,.729492-.390625,.168945-.813477,.25293-1.268066,.25293-.963379,0-1.727051-.277344-2.290527-.832031s-.845215-1.376953-.845215-2.467773V2.78125h2.126953v3.832031c0,1.181641,.495117,1.772461,1.486328,1.772461,.508789,0,.917969-.166016,1.227051-.498047,.308594-.331055,.463379-.824219,.463379-1.479492V2.78125h2.126953Z\" style=\"fill: #231f20;\"/>`,\r\n  friday: `  <path d=\"M2.20849609,2.95898437v2.52246094H6.62646484v1.77246094H2.20849609v3.4765625H0V1.18652344H7.21289063v1.77246094H2.20849609Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M11.49023438,3.55859375c.43164062-.18164062,.9296875-.27246094,1.49316406-.27246094v1.96289062c-.23632812-.01757812-.39550781-.02734375-.4765625-.02734375-.609375,0-1.08691406,.17089844-1.43164062,.51171875-.34570312,.34082031-.51855469,.85253906-.51855469,1.53417969v3.46289062h-2.12695312V3.39453125h2.03125v.96875c.25488281-.35449219,.59765625-.62304688,1.02929688-.8046875Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M14.35888672,2.03125c-.24560547-.2265625-.36816406-.50878906-.36816406-.84472656,0-.33691406,.12255859-.61816406,.36816406-.84570312s.56347656-.34082031,.95458984-.34082031c.390625,0,.70898438,.109375,.95410156,.32714844,.24560547,.21777344,.36816406,.49121094,.36816406,.81835938,0,.35449219-.12255859,.64746094-.36816406,.87890625-.24511719,.23242188-.56347656,.34765625-.95410156,.34765625-.39111328,0-.70898438-.11328125-.95458984-.34082031Zm-.10888672,1.36328125h2.12695312v7.3359375h-2.12695312V3.39453125Z\" style=\"fill: #231f20;\"/>`,\r\n  saturday: `  <path d=\"M1.697266,9.564453c-.704102-.204102-1.269531-.469727-1.697266-.796875l.75-1.664062c.40918,.299805,.895508,.541016,1.458984,.722656,.563477,.182617,1.126953,.272461,1.69043,.272461,.62793,0,1.09082-.092773,1.390625-.279297,.300781-.185547,.450195-.433594,.450195-.743164,0-.226562-.088867-.416016-.265625-.56543-.177734-.150391-.404297-.270508-.681641-.361328s-.652344-.191406-1.125-.299805c-.727539-.172852-1.322266-.345703-1.786133-.518555s-.861328-.450195-1.193359-.831055c-.332031-.381836-.49707-.891602-.49707-1.527344,0-.554688,.149414-1.056641,.449219-1.506836,.300781-.450195,.751953-.806641,1.357422-1.070312,.604492-.263672,1.342773-.395508,2.214844-.395508,.609375,0,1.205078,.073242,1.786133,.217773,.582031,.145508,1.09082,.354492,1.527344,.62793l-.681641,1.676758c-.881836-.5-1.763672-.75-2.645508-.75-.618164,0-1.074219,.100586-1.370117,.299805-.294922,.200195-.442383,.463867-.442383,.791016s.169922,.570312,.510742,.729492,.861328,.316406,1.561523,.470703c.726562,.172852,1.322266,.345703,1.786133,.517578,.463867,.172852,.861328,.445312,1.192383,.818359,.332031,.373047,.498047,.876953,.498047,1.513672,0,.544922-.152344,1.042969-.457031,1.493164-.304688,.449219-.760742,.806641-1.370117,1.070312s-1.349609,.395508-2.222656,.395508c-.753906,0-1.483398-.102539-2.188477-.307617Z\" style=\"fill: #231f20;\"/>\r\n      <path d=\"M14.875,3.074219c.609375,.541016,.914062,1.357422,.914062,2.448242v4.185547h-1.991211v-.913086c-.399414,.681641-1.144531,1.022461-2.235352,1.022461-.564453,0-1.052734-.095703-1.46582-.287109-.414062-.19043-.729492-.454102-.948242-.790039-.217773-.336914-.327148-.717773-.327148-1.145508,0-.681641,.256836-1.217773,.770508-1.609375,.513672-.390625,1.306641-.585938,2.379883-.585938h1.69043c0-.463867-.141602-.820312-.422852-1.070312-.282227-.25-.704102-.375-1.267578-.375-.391602,0-.775391,.061523-1.152344,.18457-.37793,.12207-.698242,.288086-.961914,.49707l-.762695-1.486328c.399414-.28125,.878906-.5,1.438477-.654297,.558594-.154297,1.133789-.231445,1.724609-.231445,1.135742,0,2.008789,.270508,2.617188,.810547Zm-1.8125,5.058594c.28125-.167969,.481445-.415039,.599609-.743164v-.749023h-1.458984c-.873047,0-1.308594,.286133-1.308594,.858398,0,.272461,.106445,.489258,.320312,.647461,.212891,.15918,.505859,.239258,.878906,.239258,.363281,0,.686523-.083984,.96875-.25293Z\" style=\"fill: #231f20;\"/>\r\n      <path d=\"M22.442383,9.353516c-.208984,.154297-.46582,.270508-.770508,.347656-.303711,.077148-.625,.116211-.960938,.116211-.87207,0-1.547852-.222656-2.024414-.667969-.477539-.445312-.71582-1.100586-.71582-1.963867v-3.013672h-1.131836v-1.635742h1.131836V.75h2.126953v1.786133h1.827148v1.635742h-1.827148v2.986328c0,.30957,.079102,.547852,.238281,.71582s.383789,.251953,.674805,.251953c.336914,0,.623047-.09082,.859375-.272461l.572266,1.5Z\" style=\"fill: #231f20;\"/>`,\r\n  sunday: `        <path d=\"M1.69726562,9.56445312c-.70410156-.20410156-1.26953125-.46972656-1.69726562-.796875l.75-1.6640625c.40917969,.29980469,.89550781,.54101562,1.45898438,.72265625,.56347656,.18261719,1.12695312,.27246094,1.69042969,.27246094,.62792969,0,1.09082031-.09277344,1.390625-.27929688,.30078125-.18554688,.45019531-.43359375,.45019531-.74316406,0-.2265625-.08886719-.41601562-.265625-.56542969-.17773438-.15039062-.40429688-.27050781-.68164062-.36132812s-.65234375-.19140625-1.125-.29980469c-.72753906-.17285156-1.32226562-.34570312-1.78613281-.51855469s-.86132812-.45019531-1.19335938-.83105469c-.33203125-.38183594-.49707031-.89160156-.49707031-1.52734375,0-.5546875,.14941406-1.05664062,.44921875-1.50683594,.30078125-.45019531,.75195312-.80664062,1.35742188-1.0703125,.60449219-.26367188,1.34277344-.39550781,2.21484375-.39550781,.609375,0,1.20507812,.07324219,1.78613281,.21777344,.58203125,.14550781,1.09082031,.35449219,1.52734375,.62792969l-.68164062,1.67675781c-.88183594-.5-1.76367188-.75-2.64550781-.75-.61816406,0-1.07421875,.10058594-1.37011719,.29980469-.29492188,.20019531-.44238281,.46386719-.44238281,.79101562s.16992188,.5703125,.51074219,.72949219,.86132812,.31640625,1.56152344,.47070312c.7265625,.17285156,1.32226562,.34570312,1.78613281,.51757812,.46386719,.17285156,.86132812,.4453125,1.19238281,.81835938,.33203125,.37304688,.49804688,.87695312,.49804688,1.51367188,0,.54492188-.15234375,1.04296875-.45703125,1.49316406-.3046875,.44921875-.76074219,.80664062-1.37011719,1.0703125s-1.34960938,.39550781-2.22265625,.39550781c-.75390625,0-1.48339844-.10253906-2.18847656-.30761719Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M16.68847656,2.37207031v7.3359375h-2.01757812v-.87304688c-.28222656,.31835938-.61816406,.56152344-1.00878906,.72949219-.390625,.16894531-.81347656,.25292969-1.26855469,.25292969-.96289062,0-1.7265625-.27734375-2.29003906-.83203125s-.84570312-1.37695312-.84570312-2.46777344V2.37207031h2.12695312v3.83203125c0,1.18164062,.49511719,1.77246094,1.48632812,1.77246094,.50878906,0,.91796875-.16601562,1.22753906-.49804688,.30859375-.33105469,.46289062-.82421875,.46289062-1.47949219V2.37207031h2.12695312Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M25.32617188,3.08105469c.55957031,.54589844,.83886719,1.35449219,.83886719,2.42773438v4.19921875h-2.12695312v-3.87207031c0-.58203125-.12695312-1.015625-.38183594-1.30273438-.25488281-.28613281-.62304688-.42871094-1.10449219-.42871094-.53613281,0-.96386719,.16601562-1.28125,.49707031-.31835938,.33203125-.47753906,.82519531-.47753906,1.47949219v3.62695312h-2.12695312V2.37207031h2.03125v.859375c.28222656-.30859375,.63183594-.54785156,1.04980469-.71582031s.87792969-.25195312,1.37792969-.25195312c.90820312,0,1.64257812,.27246094,2.20117188,.81738281Z\" style=\"fill: #231f20;\"/>`,\r\n};\r\n\r\nexport default weekDaysSP;\r\n","const weekDaysCyrSP = {\r\n    monday: `    <path d=\"M8.69922,0V9.544H6.50391V1.7998H2.19531V9.544H0V0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M10.90771,2.208h2.11377V5.07129h3.19043V2.208h2.127V9.544h-2.127V6.80371H13.02148V9.544H10.90771Z\" style=\"fill: #231f20\"/>`,\r\n    tuesday: `  \r\n        <path d=\"M7.94922,5.41309a2.25531,2.25531,0,0,1,.46387,1.44433A2.318,2.318,0,0,1,7.45166,8.835a4.57059,4.57059,0,0,1-2.74756.709H0V0H4.44531A4.50555,4.50555,0,0,1,7.03564.64063a2.088,2.088,0,0,1,.92725,1.82714A2.21392,2.21392,0,0,1,7.6084,3.71484a2.44675,2.44675,0,0,1-.99512.85254A2.57593,2.57593,0,0,1,7.94922,5.41309ZM2.19531,3.9541H4.25439a1.72065,1.72065,0,0,0,1.09082-.29394,1.03988,1.03988,0,0,0,.36817-.86524,1.0379,1.0379,0,0,0-.375-.85937,1.708,1.708,0,0,0-1.084-.29981H2.19531ZM6.17676,6.68066q0-1.18651-1.5542-1.18652H2.19531V7.9082H4.62256Q6.17676,7.9082,6.17676,6.68066Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M16.00732,3.9541H13.52588V9.544H11.4126V3.9541H8.93066V2.208h7.07666Z\" style=\"fill: #231f20\"/>\r\n     `,\r\n    wednesday: `        \r\n             <path d=\"M2.5293,9.2373A4.73505,4.73505,0,0,1,.6748,7.47852,4.84875,4.84875,0,0,1,0,4.93555a4.84873,4.84873,0,0,1,.6748-2.543A4.73508,4.73508,0,0,1,2.5293.63379,5.50855,5.50855,0,0,1,5.18115,0,5.56286,5.56286,0,0,1,7.42432.43652,4.49856,4.49856,0,0,1,9.10791,1.69043L7.68994,3A3.04982,3.04982,0,0,0,5.29053,1.88184a3.18,3.18,0,0,0-1.582.38867,2.76174,2.76174,0,0,0-1.084,1.084,3.18513,3.18513,0,0,0-.38818,1.58106,3.19148,3.19148,0,0,0,.38818,1.582,2.76167,2.76167,0,0,0,1.084,1.084,3.1904,3.1904,0,0,0,1.582.38867A3.03309,3.03309,0,0,0,7.68994,6.8584L9.10791,8.167A4.42259,4.42259,0,0,1,7.41748,9.43555a5.61123,5.61123,0,0,1-2.25.43652A5.47946,5.47946,0,0,1,2.5293,9.2373Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M15.82324,2.7334a3.38486,3.38486,0,0,1,1.31592,1.32324,3.99606,3.99606,0,0,1,.477,1.9834,3.99724,3.99724,0,0,1-.477,1.98437,3.376,3.376,0,0,1-1.31592,1.32227,3.74085,3.74085,0,0,1-1.86133.4707,2.8327,2.8327,0,0,1-2.20849-.88672v3.42286H9.626V2.37207h2.03173v.8457a2.82285,2.82285,0,0,1,2.3042-.9541A3.74015,3.74015,0,0,1,15.82324,2.7334ZM14.937,7.51953A2.06019,2.06019,0,0,0,15.46191,6.04a2.06019,2.06019,0,0,0-.5249-1.47949,1.91037,1.91037,0,0,0-2.686,0A2.05808,2.05808,0,0,0,11.72607,6.04,2.05808,2.05808,0,0,0,12.251,7.51953a1.908,1.908,0,0,0,2.686,0Z\" style=\"fill: #231f20\"/>\r\n       `,\r\n    thursday: `  <path d=\"M8.45361,0V9.544H6.272V6.1084a6.79306,6.79306,0,0,1-2.3042.44922A4.261,4.261,0,0,1,1.02246,5.6377,3.38466,3.38466,0,0,1,0,2.98535V0H2.18164V2.74023a1.94523,1.94523,0,0,0,.5249,1.4795,2.12479,2.12479,0,0,0,1.52.49707A5.00306,5.00306,0,0,0,6.272,4.29492V0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M16.8252,3.9541H14.34375V9.544H12.23047V3.9541H9.74854V2.208H16.8252Z\" style=\"fill: #231f20\"/>`,\r\n    friday: ` <path d=\"M8.69922,0V9.544H6.50391V1.7998H2.19531V9.544H0V0Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M16.94824,3.9541H14.4668V9.544H12.35352V3.9541H9.87207V2.208h7.07617Z\" style=\"fill: #231f20\"/>`,\r\n    saturday: ` <path d=\"M2.5293,10.16406A4.73508,4.73508,0,0,1,.6748,8.40527,4.84418,4.84418,0,0,1,0,5.8623a4.84417,4.84417,0,0,1,.6748-2.543A4.73508,4.73508,0,0,1,2.5293,1.56055,5.50661,5.50661,0,0,1,5.18066.92676a5.56119,5.56119,0,0,1,2.24317.43652A4.49469,4.49469,0,0,1,9.10742,2.61719l-1.418,1.30957A3.04981,3.04981,0,0,0,5.29,2.80859a3.18137,3.18137,0,0,0-1.582.38868,2.768,2.768,0,0,0-1.084,1.084A3.18483,3.18483,0,0,0,2.23633,5.8623a3.19124,3.19124,0,0,0,.38769,1.582,2.76811,2.76811,0,0,0,1.084,1.084A3.19174,3.19174,0,0,0,5.29,8.917,3.03308,3.03308,0,0,0,7.68945,7.78516l1.418,1.30859A4.41507,4.41507,0,0,1,7.417,10.3623a5.61107,5.61107,0,0,1-2.25.43653A5.47767,5.47767,0,0,1,2.5293,10.16406Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M16.26563,4.2334a2.99994,2.99994,0,0,1,1.2207,1.20605A3.66413,3.66413,0,0,1,17.916,7.23926a3.34519,3.34519,0,0,1-1.93653,3.11621,4.69355,4.69355,0,0,1-2.07226.44336,3.835,3.835,0,0,1-3.02051-1.23438A5.289,5.289,0,0,1,9.79,5.94434,5.84881,5.84881,0,0,1,10.751,2.41992,4.63135,4.63135,0,0,1,13.70313.69531L17.19336,0l.28613,1.82715-3.081.61328a3.70556,3.70556,0,0,0-1.86133.81836,2.49261,2.49261,0,0,0-.71582,1.62207A3.22639,3.22639,0,0,1,12.9668,4.083a3.7563,3.7563,0,0,1,1.459-.2793A3.796,3.796,0,0,1,16.26563,4.2334Zm-1.0293,4.38379a1.89741,1.89741,0,0,0,.498-1.35059,1.77306,1.77306,0,0,0-.498-1.32226,1.79334,1.79334,0,0,0-1.31543-.49121,1.83327,1.83327,0,0,0-1.33594.49121,1.75864,1.75864,0,0,0-.50488,1.32226A1.85058,1.85058,0,0,0,12.59863,8.624a1.77828,1.77828,0,0,0,1.32227.52442A1.71741,1.71741,0,0,0,15.23633,8.61719Z\" style=\"fill: #231f20\"/>`,\r\n    sunday: ` <path d=\"M7.94922,5.41309a2.25531,2.25531,0,0,1,.46387,1.44433A2.318,2.318,0,0,1,7.45166,8.835a4.57059,4.57059,0,0,1-2.74756.709H0V0H4.44531A4.50555,4.50555,0,0,1,7.03564.64063a2.088,2.088,0,0,1,.92725,1.82714A2.21392,2.21392,0,0,1,7.6084,3.71484a2.44675,2.44675,0,0,1-.99512.85254A2.57593,2.57593,0,0,1,7.94922,5.41309ZM2.19531,3.9541H4.25439a1.72065,1.72065,0,0,0,1.09082-.29394,1.03988,1.03988,0,0,0,.36817-.86524,1.0379,1.0379,0,0,0-.375-.85937,1.708,1.708,0,0,0-1.084-.29981H2.19531ZM6.17676,6.68066q0-1.18651-1.5542-1.18652H2.19531V7.9082H4.62256Q6.17676,7.9082,6.17676,6.68066Z\" style=\"fill: #231f20\"/>\r\n        <path d=\"M11.37842,9.169a3.61921,3.61921,0,0,1-1.459-1.34278A3.66455,3.66455,0,0,1,9.39453,5.876a3.66113,3.66113,0,0,1,.5249-1.94922,3.62146,3.62146,0,0,1,1.459-1.34375,4.51405,4.51405,0,0,1,2.10644-.4834,4.08807,4.08807,0,0,1,2.02491.4834A2.8751,2.8751,0,0,1,16.771,3.96777l-1.64991.88575a1.80332,1.80332,0,0,0-1.6499-1.00879,1.86634,1.86634,0,0,0-1.377.54492A2.00927,2.00927,0,0,0,11.54883,5.876a2.00773,2.00773,0,0,0,.54541,1.48632,1.86707,1.86707,0,0,0,1.377.5459,1.7857,1.7857,0,0,0,1.6499-1.00976l1.64991.90039a2.92941,2.92941,0,0,1-1.26123,1.36328,4.03929,4.03929,0,0,1-2.02491.49121A4.50271,4.50271,0,0,1,11.37842,9.169Z\" style=\"fill: #231f20\"/>`,\r\n};\r\n\r\nexport default weekDaysCyrSP;\r\n","const yearsSP = {\r\n  2023: ` <path d=\"M17.71875,18.31933594v4.16894531H1.01074219v-3.31640625L9.53857422,11.11816406c.90478516-.86328125,1.51611328-1.60546875,1.83203125-2.22753906,.31542969-.62011719,.47363281-1.23632812,.47363281-1.84765625,0-.88378906-.30029297-1.56347656-.90039062-2.03710938s-1.47949219-.7109375-2.63720703-.7109375c-.96875,0-1.84277344,.18457031-2.62158203,.55273438-.77929688,.36914062-1.43212891,.921875-1.95800781,1.65820312L0,4.10546875C.86279297,2.82128906,2.05273438,1.81640625,3.56884766,1.08984375S6.82226562,0,8.78027344,0c1.64257812,0,3.07958984,.26855469,4.31152344,.80566406,1.23193359,.53613281,2.18945312,1.29492188,2.87402344,2.2734375,.68408203,.97949219,1.02685547,2.13183594,1.02685547,3.45898438,0,1.20019531-.25292969,2.32714844-.75830078,3.37988281s-1.484375,2.25292969-2.9375,3.60058594l-5.08496094,4.80078125h9.50683594Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M24.3515625,21.50878906c-1.43212891-.90429688-2.55322266-2.21582031-3.36376953-3.93164062s-1.21582031-3.76367188-1.21582031-6.14355469c0-2.37890625,.40527344-4.42675781,1.21582031-6.14355469,.81054688-1.71582031,1.93164062-3.02636719,3.36376953-3.93164062,1.43164062-.90527344,3.06396484-1.35839844,4.89550781-1.35839844,1.83203125,0,3.46386719,.453125,4.89599609,1.35839844,1.43164062,.90527344,2.55273438,2.21582031,3.36376953,3.93164062,.81005859,1.71679688,1.21582031,3.76464844,1.21582031,6.14355469,0,2.37988281-.40576172,4.42773438-1.21582031,6.14355469-.81103516,1.71582031-1.93212891,3.02734375-3.36376953,3.93164062-1.43212891,.90625-3.06396484,1.35839844-4.89599609,1.35839844-1.83154297,0-3.46386719-.45214844-4.89550781-1.35839844Zm8.06982422-4.70605469c.76855469-1.15722656,1.15283203-2.94726562,1.15283203-5.36914062,0-2.42089844-.38427734-4.2109375-1.15283203-5.36914062s-1.82666016-1.73730469-3.17431641-1.73730469c-1.32617188,0-2.37402344,.57910156-3.14257812,1.73730469s-1.15283203,2.94824219-1.15283203,5.36914062c0,2.421875,.38427734,4.21191406,1.15283203,5.36914062,.76855469,1.15820312,1.81640625,1.73730469,3.14257812,1.73730469,1.34765625,0,2.40576172-.57910156,3.17431641-1.73730469Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M57.546875,18.31933594v4.16894531h-16.70800781v-3.31640625l8.52783203-8.05371094c.90478516-.86328125,1.51611328-1.60546875,1.83203125-2.22753906,.31542969-.62011719,.47363281-1.23632812,.47363281-1.84765625,0-.88378906-.30029297-1.56347656-.90039062-2.03710938s-1.47949219-.7109375-2.63720703-.7109375c-.96875,0-1.84277344,.18457031-2.62158203,.55273438-.77929688,.36914062-1.43212891,.921875-1.95800781,1.65820312l-3.72705078-2.40039062c.86279297-1.28417969,2.05273438-2.2890625,3.56884766-3.015625s3.25341797-1.08984375,5.21142578-1.08984375c1.64257812,0,3.07958984,.26855469,4.31152344,.80566406,1.23193359,.53613281,2.18945312,1.29492188,2.87402344,2.2734375,.68408203,.97949219,1.02685547,2.13183594,1.02685547,3.45898438,0,1.20019531-.25292969,2.32714844-.75830078,3.37988281s-1.484375,2.25292969-2.9375,3.60058594l-5.08496094,4.80078125h9.50683594Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M74.44482422,11.54394531c1.03125,1.12695312,1.54736328,2.52246094,1.54736328,4.18554688,0,1.28417969-.33691406,2.46875-1.01074219,3.55273438-.67382812,1.08496094-1.70068359,1.953125-3.07958984,2.60546875-1.37890625,.65332031-3.06884766,.97949219-5.06933594,.97949219-1.55810547,0-3.09033203-.20507812-4.59521484-.61621094-1.50585938-.41015625-2.78515625-.99414062-3.83789062-1.75292969l1.99023438-3.91601562c.84179688,.63183594,1.81591797,1.12109375,2.92138672,1.46875s2.23730469,.52050781,3.39550781,.52050781c1.28417969,0,2.29492188-.24707031,3.03222656-.7421875,.73681641-.49414062,1.10546875-1.19433594,1.10546875-2.09960938,0-1.81152344-1.37939453-2.71679688-4.13769531-2.71679688h-2.33740234v-3.37988281l4.54833984-5.14746094h-9.41259766V.37890625h15.4765625V3.6953125l-4.99023438,5.68554688c1.93701172,.31542969,3.42138672,1.03710938,4.45361328,2.16308594Z\" style=\"fill: #231f20;\"/>`,\r\n  2024: `<path d=\"M17.71875,18.31933594v4.16894531H1.01074219v-3.31640625L9.53857422,11.11816406c.90478516-.86328125,1.51611328-1.60546875,1.83203125-2.22753906,.31542969-.62011719,.47363281-1.23632812,.47363281-1.84765625,0-.88378906-.30029297-1.56347656-.90039062-2.03710938s-1.47949219-.7109375-2.63720703-.7109375c-.96875,0-1.84277344,.18457031-2.62158203,.55273438-.77929688,.36914062-1.43212891,.921875-1.95800781,1.65820312L0,4.10546875C.86279297,2.82128906,2.05273438,1.81640625,3.56884766,1.08984375S6.82226562,0,8.78027344,0c1.64257812,0,3.07958984,.26855469,4.31152344,.80566406,1.23193359,.53613281,2.18945312,1.29492188,2.87402344,2.2734375,.68408203,.97949219,1.02685547,2.13183594,1.02685547,3.45898438,0,1.20019531-.25292969,2.32714844-.75830078,3.37988281s-1.484375,2.25292969-2.9375,3.60058594l-5.08496094,4.80078125h9.50683594Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M24.3515625,21.50878906c-1.43212891-.90429688-2.55322266-2.21582031-3.36376953-3.93164062s-1.21582031-3.76367188-1.21582031-6.14355469c0-2.37890625,.40527344-4.42675781,1.21582031-6.14355469,.81054688-1.71582031,1.93164062-3.02636719,3.36376953-3.93164062,1.43164062-.90527344,3.06396484-1.35839844,4.89550781-1.35839844,1.83203125,0,3.46386719,.453125,4.89599609,1.35839844,1.43164062,.90527344,2.55273438,2.21582031,3.36376953,3.93164062,.81005859,1.71679688,1.21582031,3.76464844,1.21582031,6.14355469,0,2.37988281-.40576172,4.42773438-1.21582031,6.14355469-.81103516,1.71582031-1.93212891,3.02734375-3.36376953,3.93164062-1.43212891,.90625-3.06396484,1.35839844-4.89599609,1.35839844-1.83154297,0-3.46386719-.45214844-4.89550781-1.35839844Zm8.06982422-4.70605469c.76855469-1.15722656,1.15283203-2.94726562,1.15283203-5.36914062,0-2.42089844-.38427734-4.2109375-1.15283203-5.36914062s-1.82666016-1.73730469-3.17431641-1.73730469c-1.32617188,0-2.37402344,.57910156-3.14257812,1.73730469s-1.15283203,2.94824219-1.15283203,5.36914062c0,2.421875,.38427734,4.21191406,1.15283203,5.36914062,.76855469,1.15820312,1.81640625,1.73730469,3.14257812,1.73730469,1.34765625,0,2.40576172-.57910156,3.17431641-1.73730469Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M57.546875,18.31933594v4.16894531h-16.70800781v-3.31640625l8.52783203-8.05371094c.90478516-.86328125,1.51611328-1.60546875,1.83203125-2.22753906,.31542969-.62011719,.47363281-1.23632812,.47363281-1.84765625,0-.88378906-.30029297-1.56347656-.90039062-2.03710938s-1.47949219-.7109375-2.63720703-.7109375c-.96875,0-1.84277344,.18457031-2.62158203,.55273438-.77929688,.36914062-1.43212891,.921875-1.95800781,1.65820312l-3.72705078-2.40039062c.86279297-1.28417969,2.05273438-2.2890625,3.56884766-3.015625s3.25341797-1.08984375,5.21142578-1.08984375c1.64257812,0,3.07958984,.26855469,4.31152344,.80566406,1.23193359,.53613281,2.18945312,1.29492188,2.87402344,2.2734375,.68408203,.97949219,1.02685547,2.13183594,1.02685547,3.45898438,0,1.20019531-.25292969,2.32714844-.75830078,3.37988281s-1.484375,2.25292969-2.9375,3.60058594l-5.08496094,4.80078125h9.50683594Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M79.59326172,17.84570312h-3.60058594v4.64257812h-4.99023438v-4.64257812h-11.90771484v-3.44335938L69.51806641,.37890625h5.36914062l-9.66503906,13.296875h5.93798828v-4.13769531h4.83251953v4.13769531h3.60058594v4.16992188Z\" style=\"fill: #231f20;\"/>`,\r\n  2025: ` <path d=\"M17.71875,18.31933594v4.16894531H1.01074219v-3.31640625L9.53857422,11.11816406c.90478516-.86328125,1.51611328-1.60546875,1.83203125-2.22753906,.31542969-.62011719,.47363281-1.23632812,.47363281-1.84765625,0-.88378906-.30029297-1.56347656-.90039062-2.03710938s-1.47949219-.7109375-2.63720703-.7109375c-.96875,0-1.84277344,.18457031-2.62158203,.55273438-.77929688,.36914062-1.43212891,.921875-1.95800781,1.65820312L0,4.10546875C.86279297,2.82128906,2.05273438,1.81640625,3.56884766,1.08984375S6.82226562,0,8.78027344,0c1.64257812,0,3.07958984,.26855469,4.31152344,.80566406,1.23193359,.53613281,2.18945312,1.29492188,2.87402344,2.2734375,.68408203,.97949219,1.02685547,2.13183594,1.02685547,3.45898438,0,1.20019531-.25292969,2.32714844-.75830078,3.37988281s-1.484375,2.25292969-2.9375,3.60058594l-5.08496094,4.80078125h9.50683594Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M24.3515625,21.50878906c-1.43212891-.90429688-2.55322266-2.21582031-3.36376953-3.93164062s-1.21582031-3.76367188-1.21582031-6.14355469c0-2.37890625,.40527344-4.42675781,1.21582031-6.14355469,.81054688-1.71582031,1.93164062-3.02636719,3.36376953-3.93164062,1.43164062-.90527344,3.06396484-1.35839844,4.89550781-1.35839844,1.83203125,0,3.46386719,.453125,4.89599609,1.35839844,1.43164062,.90527344,2.55273438,2.21582031,3.36376953,3.93164062,.81005859,1.71679688,1.21582031,3.76464844,1.21582031,6.14355469,0,2.37988281-.40576172,4.42773438-1.21582031,6.14355469-.81103516,1.71582031-1.93212891,3.02734375-3.36376953,3.93164062-1.43212891,.90625-3.06396484,1.35839844-4.89599609,1.35839844-1.83154297,0-3.46386719-.45214844-4.89550781-1.35839844Zm8.06982422-4.70605469c.76855469-1.15722656,1.15283203-2.94726562,1.15283203-5.36914062,0-2.42089844-.38427734-4.2109375-1.15283203-5.36914062s-1.82666016-1.73730469-3.17431641-1.73730469c-1.32617188,0-2.37402344,.57910156-3.14257812,1.73730469s-1.15283203,2.94824219-1.15283203,5.36914062c0,2.421875,.38427734,4.21191406,1.15283203,5.36914062,.76855469,1.15820312,1.81640625,1.73730469,3.14257812,1.73730469,1.34765625,0,2.40576172-.57910156,3.17431641-1.73730469Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M57.546875,18.31933594v4.16894531h-16.70800781v-3.31640625l8.52783203-8.05371094c.90478516-.86328125,1.51611328-1.60546875,1.83203125-2.22753906,.31542969-.62011719,.47363281-1.23632812,.47363281-1.84765625,0-.88378906-.30029297-1.56347656-.90039062-2.03710938s-1.47949219-.7109375-2.63720703-.7109375c-.96875,0-1.84277344,.18457031-2.62158203,.55273438-.77929688,.36914062-1.43212891,.921875-1.95800781,1.65820312l-3.72705078-2.40039062c.86279297-1.28417969,2.05273438-2.2890625,3.56884766-3.015625s3.25341797-1.08984375,5.21142578-1.08984375c1.64257812,0,3.07958984,.26855469,4.31152344,.80566406,1.23193359,.53613281,2.18945312,1.29492188,2.87402344,2.2734375,.68408203,.97949219,1.02685547,2.13183594,1.02685547,3.45898438,0,1.20019531-.25292969,2.32714844-.75830078,3.37988281s-1.484375,2.25292969-2.9375,3.60058594l-5.08496094,4.80078125h9.50683594Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M74.14453125,10.54882812c1.484375,1.24316406,2.22705078,2.90625,2.22705078,4.99121094,0,1.34765625-.33740234,2.57421875-1.01074219,3.6796875-.67431641,1.10546875-1.70068359,1.98925781-3.07958984,2.65234375-1.37939453,.6640625-3.07958984,.99511719-5.10107422,.99511719-1.55859375,0-3.09033203-.20507812-4.59570312-.61621094-1.50585938-.41015625-2.78466797-.99414062-3.83740234-1.75292969l2.02148438-3.91601562c.84179688,.63183594,1.81054688,1.12109375,2.90576172,1.46875,1.09472656,.34765625,2.22119141,.52050781,3.37939453,.52050781,1.28417969,0,2.29492188-.25195312,3.03222656-.7578125,.73681641-.50488281,1.10546875-1.20996094,1.10546875-2.11621094,0-.94726562-.38427734-1.66308594-1.15283203-2.14746094-.76904297-.484375-2.10058594-.7265625-3.99560547-.7265625h-5.65332031L61.52636719,.37890625h13.48681641V4.48535156h-9.22265625l-.34765625,4.20019531h1.80029297c3.11621094,0,5.41699219,.62109375,6.90136719,1.86328125Z\" style=\"fill: #231f20;\"/>`,\r\n  2026: `    <path d=\"M17.71875,18.31933594v4.16894531H1.01074219v-3.31640625L9.53857422,11.11816406c.90478516-.86328125,1.51611328-1.60546875,1.83203125-2.22753906,.31542969-.62011719,.47363281-1.23632812,.47363281-1.84765625,0-.88378906-.30029297-1.56347656-.90039062-2.03710938s-1.47949219-.7109375-2.63720703-.7109375c-.96875,0-1.84277344,.18457031-2.62158203,.55273438-.77929688,.36914062-1.43212891,.921875-1.95800781,1.65820312L0,4.10546875C.86279297,2.82128906,2.05273438,1.81640625,3.56884766,1.08984375S6.82226562,0,8.78027344,0c1.64257812,0,3.07958984,.26855469,4.31152344,.80566406,1.23193359,.53613281,2.18945312,1.29492188,2.87402344,2.2734375,.68408203,.97949219,1.02685547,2.13183594,1.02685547,3.45898438,0,1.20019531-.25292969,2.32714844-.75830078,3.37988281s-1.484375,2.25292969-2.9375,3.60058594l-5.08496094,4.80078125h9.50683594Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M24.3515625,21.50878906c-1.43212891-.90429688-2.55322266-2.21582031-3.36376953-3.93164062s-1.21582031-3.76367188-1.21582031-6.14355469c0-2.37890625,.40527344-4.42675781,1.21582031-6.14355469,.81054688-1.71582031,1.93164062-3.02636719,3.36376953-3.93164062,1.43164062-.90527344,3.06396484-1.35839844,4.89550781-1.35839844,1.83203125,0,3.46386719,.453125,4.89599609,1.35839844,1.43164062,.90527344,2.55273438,2.21582031,3.36376953,3.93164062,.81005859,1.71679688,1.21582031,3.76464844,1.21582031,6.14355469,0,2.37988281-.40576172,4.42773438-1.21582031,6.14355469-.81103516,1.71582031-1.93212891,3.02734375-3.36376953,3.93164062-1.43212891,.90625-3.06396484,1.35839844-4.89599609,1.35839844-1.83154297,0-3.46386719-.45214844-4.89550781-1.35839844Zm8.06982422-4.70605469c.76855469-1.15722656,1.15283203-2.94726562,1.15283203-5.36914062,0-2.42089844-.38427734-4.2109375-1.15283203-5.36914062s-1.82666016-1.73730469-3.17431641-1.73730469c-1.32617188,0-2.37402344,.57910156-3.14257812,1.73730469s-1.15283203,2.94824219-1.15283203,5.36914062c0,2.421875,.38427734,4.21191406,1.15283203,5.36914062,.76855469,1.15820312,1.81640625,1.73730469,3.14257812,1.73730469,1.34765625,0,2.40576172-.57910156,3.17431641-1.73730469Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M57.546875,18.31933594v4.16894531h-16.70800781v-3.31640625l8.52783203-8.05371094c.90478516-.86328125,1.51611328-1.60546875,1.83203125-2.22753906,.31542969-.62011719,.47363281-1.23632812,.47363281-1.84765625,0-.88378906-.30029297-1.56347656-.90039062-2.03710938s-1.47949219-.7109375-2.63720703-.7109375c-.96875,0-1.84277344,.18457031-2.62158203,.55273438-.77929688,.36914062-1.43212891,.921875-1.95800781,1.65820312l-3.72705078-2.40039062c.86279297-1.28417969,2.05273438-2.2890625,3.56884766-3.015625s3.25341797-1.08984375,5.21142578-1.08984375c1.64257812,0,3.07958984,.26855469,4.31152344,.80566406,1.23193359,.53613281,2.18945312,1.29492188,2.87402344,2.2734375,.68408203,.97949219,1.02685547,2.13183594,1.02685547,3.45898438,0,1.20019531-.25292969,2.32714844-.75830078,3.37988281s-1.484375,2.25292969-2.9375,3.60058594l-5.08496094,4.80078125h9.50683594Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M74.09765625,9.47558594c1.15771484,.56835938,2.07373047,1.37402344,2.74755859,2.41601562s1.01074219,2.24804688,1.01074219,3.61621094c0,1.47460938-.36865234,2.76953125-1.10546875,3.88476562-.73730469,1.1171875-1.74267578,1.97460938-3.01611328,2.57421875-1.27441406,.60058594-2.69042969,.90039062-4.24853516,.90039062-3.09521484,0-5.51660156-.94726562-7.26416016-2.84277344-1.74804688-1.89453125-2.62158203-4.60058594-2.62158203-8.1171875,0-2.50585938,.47363281-4.65332031,1.42138672-6.44335938,.94726562-1.7890625,2.26855469-3.14746094,3.96386719-4.07421875,1.69433594-.92675781,3.65820312-1.38964844,5.890625-1.38964844,1.17871094,0,2.31054688,.13183594,3.39501953,.39453125,1.08447266,.26367188,2.00585938,.63769531,2.76367188,1.12109375l-1.89501953,3.75878906c-1.09521484-.73632812-2.47460938-1.10546875-4.13769531-1.10546875-1.87402344,0-3.35888672,.54785156-4.453125,1.64257812-1.09521484,1.09472656-1.68505859,2.68457031-1.76904297,4.76953125,1.30566406-1.30566406,3.12695312-1.95898438,5.46435547-1.95898438,1.41015625,0,2.69482422,.28515625,3.85351562,.85351562Zm-2.22705078,8.68554688c.68408203-.58886719,1.02636719-1.38964844,1.02636719-2.40039062s-.34228516-1.81640625-1.02636719-2.41601562c-.68457031-.60058594-1.59472656-.90039062-2.73193359-.90039062-1.11621094,0-2.03222656,.31054688-2.74804688,.93164062s-1.07373047,1.41601562-1.07373047,2.38476562,.34716797,1.75878906,1.04248047,2.36914062c.69482422,.61035156,1.64208984,.91601562,2.84228516,.91601562,1.09472656,0,1.984375-.29492188,2.66894531-.88476562Z\" style=\"fill: #231f20;\"/>`,\r\n  2027: `   <path d=\"M17.71875,18.31933594v4.16894531H1.01074219v-3.31640625L9.53857422,11.11816406c.90478516-.86328125,1.51611328-1.60546875,1.83203125-2.22753906,.31542969-.62011719,.47363281-1.23632812,.47363281-1.84765625,0-.88378906-.30029297-1.56347656-.90039062-2.03710938s-1.47949219-.7109375-2.63720703-.7109375c-.96875,0-1.84277344,.18457031-2.62158203,.55273438-.77929688,.36914062-1.43212891,.921875-1.95800781,1.65820312L0,4.10546875C.86279297,2.82128906,2.05273438,1.81640625,3.56884766,1.08984375S6.82226562,0,8.78027344,0c1.64257812,0,3.07958984,.26855469,4.31152344,.80566406,1.23193359,.53613281,2.18945312,1.29492188,2.87402344,2.2734375,.68408203,.97949219,1.02685547,2.13183594,1.02685547,3.45898438,0,1.20019531-.25292969,2.32714844-.75830078,3.37988281s-1.484375,2.25292969-2.9375,3.60058594l-5.08496094,4.80078125h9.50683594Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M24.3515625,21.50878906c-1.43212891-.90429688-2.55322266-2.21582031-3.36376953-3.93164062s-1.21582031-3.76367188-1.21582031-6.14355469c0-2.37890625,.40527344-4.42675781,1.21582031-6.14355469,.81054688-1.71582031,1.93164062-3.02636719,3.36376953-3.93164062,1.43164062-.90527344,3.06396484-1.35839844,4.89550781-1.35839844,1.83203125,0,3.46386719,.453125,4.89599609,1.35839844,1.43164062,.90527344,2.55273438,2.21582031,3.36376953,3.93164062,.81005859,1.71679688,1.21582031,3.76464844,1.21582031,6.14355469,0,2.37988281-.40576172,4.42773438-1.21582031,6.14355469-.81103516,1.71582031-1.93212891,3.02734375-3.36376953,3.93164062-1.43212891,.90625-3.06396484,1.35839844-4.89599609,1.35839844-1.83154297,0-3.46386719-.45214844-4.89550781-1.35839844Zm8.06982422-4.70605469c.76855469-1.15722656,1.15283203-2.94726562,1.15283203-5.36914062,0-2.42089844-.38427734-4.2109375-1.15283203-5.36914062s-1.82666016-1.73730469-3.17431641-1.73730469c-1.32617188,0-2.37402344,.57910156-3.14257812,1.73730469s-1.15283203,2.94824219-1.15283203,5.36914062c0,2.421875,.38427734,4.21191406,1.15283203,5.36914062,.76855469,1.15820312,1.81640625,1.73730469,3.14257812,1.73730469,1.34765625,0,2.40576172-.57910156,3.17431641-1.73730469Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M57.546875,18.31933594v4.16894531h-16.70800781v-3.31640625l8.52783203-8.05371094c.90478516-.86328125,1.51611328-1.60546875,1.83203125-2.22753906,.31542969-.62011719,.47363281-1.23632812,.47363281-1.84765625,0-.88378906-.30029297-1.56347656-.90039062-2.03710938s-1.47949219-.7109375-2.63720703-.7109375c-.96875,0-1.84277344,.18457031-2.62158203,.55273438-.77929688,.36914062-1.43212891,.921875-1.95800781,1.65820312l-3.72705078-2.40039062c.86279297-1.28417969,2.05273438-2.2890625,3.56884766-3.015625s3.25341797-1.08984375,5.21142578-1.08984375c1.64257812,0,3.07958984,.26855469,4.31152344,.80566406,1.23193359,.53613281,2.18945312,1.29492188,2.87402344,2.2734375,.68408203,.97949219,1.02685547,2.13183594,1.02685547,3.45898438,0,1.20019531-.25292969,2.32714844-.75830078,3.37988281s-1.484375,2.25292969-2.9375,3.60058594l-5.08496094,4.80078125h9.50683594Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M76.90869141,.37890625V3.6953125l-8.21240234,18.79296875h-5.55859375l7.92773438-17.94042969h-7.32763672v3.60058594h-4.54833984V.37890625h17.71923828Z\" style=\"fill: #231f20;\"/>`,\r\n  2028: `  <path d=\"M17.71875,18.31933594v4.16894531H1.01074219v-3.31640625L9.5390625,11.11816406c.90429688-.86328125,1.515625-1.60546875,1.83203125-2.22753906,.31542969-.62011719,.47363281-1.23632812,.47363281-1.84765625,0-.88378906-.30078125-1.56347656-.90039062-2.03710938-.60058594-.47363281-1.47949219-.7109375-2.63769531-.7109375-.96875,0-1.84277344,.18457031-2.62109375,.55273438-.77929688,.36914062-1.43261719,.921875-1.95800781,1.65820312L0,4.10546875C.86328125,2.82128906,2.05273438,1.81640625,3.56933594,1.08984375c1.515625-.7265625,3.25292969-1.08984375,5.2109375-1.08984375,1.64257812,0,3.08007812,.26855469,4.31152344,.80566406,1.23242188,.53613281,2.18945312,1.29492188,2.87402344,2.2734375,.68457031,.97949219,1.02734375,2.13183594,1.02734375,3.45898438,0,1.20019531-.25292969,2.32714844-.75878906,3.37988281-.50488281,1.05273438-1.484375,2.25292969-2.9375,3.60058594l-5.08496094,4.80078125h9.50683594Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M24.3515625,21.50878906c-1.43164062-.90429688-2.55273438-2.21582031-3.36328125-3.93164062s-1.21582031-3.76367188-1.21582031-6.14355469c0-2.37890625,.40527344-4.42675781,1.21582031-6.14355469,.81054688-1.71582031,1.93164062-3.02636719,3.36328125-3.93164062s3.06445312-1.35839844,4.89550781-1.35839844c1.83203125,0,3.46386719,.453125,4.89648438,1.35839844,1.43164062,.90527344,2.55273438,2.21582031,3.36328125,3.93164062,.81054688,1.71679688,1.21582031,3.76464844,1.21582031,6.14355469,0,2.37988281-.40527344,4.42773438-1.21582031,6.14355469s-1.93164062,3.02734375-3.36328125,3.93164062c-1.43261719,.90625-3.06445312,1.35839844-4.89648438,1.35839844-1.83105469,0-3.46386719-.45214844-4.89550781-1.35839844Zm8.0703125-4.70605469c.76855469-1.15722656,1.15234375-2.94726562,1.15234375-5.36914062,0-2.42089844-.38378906-4.2109375-1.15234375-5.36914062s-1.82714844-1.73730469-3.17480469-1.73730469c-1.32617188,0-2.37402344,.57910156-3.14257812,1.73730469s-1.15234375,2.94824219-1.15234375,5.36914062c0,2.421875,.38378906,4.21191406,1.15234375,5.36914062,.76855469,1.15820312,1.81640625,1.73730469,3.14257812,1.73730469,1.34765625,0,2.40625-.57910156,3.17480469-1.73730469Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M57.546875,18.31933594v4.16894531h-16.70800781v-3.31640625l8.52832031-8.05371094c.90429688-.86328125,1.515625-1.60546875,1.83203125-2.22753906,.31542969-.62011719,.47363281-1.23632812,.47363281-1.84765625,0-.88378906-.30078125-1.56347656-.90039062-2.03710938-.60058594-.47363281-1.47949219-.7109375-2.63769531-.7109375-.96875,0-1.84277344,.18457031-2.62109375,.55273438-.77929688,.36914062-1.43261719,.921875-1.95800781,1.65820312l-3.72753906-2.40039062c.86328125-1.28417969,2.05273438-2.2890625,3.56933594-3.015625,1.515625-.7265625,3.25292969-1.08984375,5.2109375-1.08984375,1.64257812,0,3.08007812,.26855469,4.31152344,.80566406,1.23242188,.53613281,2.18945312,1.29492188,2.87402344,2.2734375,.68457031,.97949219,1.02734375,2.13183594,1.02734375,3.45898438,0,1.20019531-.25292969,2.32714844-.75878906,3.37988281-.50488281,1.05273438-1.484375,2.25292969-2.9375,3.60058594l-5.08496094,4.80078125h9.50683594Z\" style=\"fill: #231f20;\"/>\r\n        <path d=\"M77.30371094,13.01269531c.578125,.88476562,.86816406,1.90625,.86816406,3.06347656,0,1.36914062-.38964844,2.56445312-1.16894531,3.58496094-.77929688,1.02148438-1.87402344,1.81152344-3.28417969,2.36914062-1.41113281,.55761719-3.04296875,.83691406-4.89550781,.83691406-1.85351562,0-3.48046875-.27929688-4.87988281-.83691406-1.40136719-.55761719-2.48535156-1.34765625-3.25390625-2.36914062-.76855469-1.02050781-1.15234375-2.21582031-1.15234375-3.58496094,0-1.15722656,.2890625-2.17871094,.86816406-3.06347656,.57910156-.88378906,1.40527344-1.59960938,2.47949219-2.14746094-.82128906-.50585938-1.453125-1.14257812-1.89453125-1.91113281-.44238281-.76855469-.6640625-1.64746094-.6640625-2.63769531,0-1.28417969,.35839844-2.40039062,1.07421875-3.34765625s1.71582031-1.67871094,3.00097656-2.1953125c1.28320312-.515625,2.7578125-.7734375,4.421875-.7734375,1.68359375,0,3.17382812,.2578125,4.46875,.7734375,1.29492188,.51660156,2.30078125,1.24804688,3.01660156,2.1953125s1.07324219,2.06347656,1.07324219,3.34765625c0,.99023438-.22070312,1.86914062-.66308594,2.63769531s-1.08398438,1.40527344-1.92675781,1.91113281c1.09472656,.54785156,1.93164062,1.26367188,2.51171875,2.14746094Zm-5.43261719,5.22753906c.74707031-.57910156,1.12109375-1.35253906,1.12109375-2.32128906s-.37402344-1.73730469-1.12109375-2.30566406c-.74804688-.56933594-1.76367188-.85351562-3.04785156-.85351562-1.26367188,0-2.26464844,.28417969-3.00097656,.85351562-.73730469,.56835938-1.10546875,1.33691406-1.10546875,2.30566406,0,.98925781,.36816406,1.76855469,1.10546875,2.33691406,.73632812,.56835938,1.73730469,.85253906,3.00097656,.85253906,1.28417969,0,2.29980469-.2890625,3.04785156-.86816406Zm-5.52734375-13.73925781c-.62207031,.49511719-.93164062,1.17382812-.93164062,2.03710938,0,.84179688,.3046875,1.50585938,.91503906,1.98925781,.61132812,.48535156,1.44238281,.7265625,2.49609375,.7265625,1.05175781,0,1.89453125-.24121094,2.52636719-.7265625,.63183594-.48339844,.94726562-1.14746094,.94726562-1.98925781,0-.86328125-.31542969-1.54199219-.94726562-2.03710938s-1.47460938-.7421875-2.52636719-.7421875c-1.03222656,0-1.859375,.24707031-2.47949219,.7421875Z\" style=\"fill: #231f20;\"/>`,\r\n};\r\n\r\nexport default yearsSP;\r\n","import { Calendar } from \"./Calendar.js\";\r\nimport { glyphsSP } from \"../assets/Montserrat/MontserratGlyphs.js\";\r\n\r\nexport class SinglePageCalendar extends Calendar {\r\n  constructor(\r\n    firstMonthIndex,\r\n    year,\r\n    parentContainer,\r\n    controlsContainer,\r\n    cropControlsContainer,\r\n    lang,\r\n    type\r\n  ) {\r\n    super(\r\n      firstMonthIndex,\r\n      year,\r\n      parentContainer,\r\n      controlsContainer,\r\n      cropControlsContainer,\r\n      lang,\r\n      type\r\n    );\r\n\r\n    // Mockup pre-defined dimensions\r\n    this.dayCellHeight = 44.35;\r\n    this.dayCellWidth = 65.49;\r\n\r\n    this.monthCellHeight = 375;\r\n    this.monthCellWidth = 457.22;\r\n\r\n    this.imagePlaceholderWidth = 1883;\r\n    this.imagePlaceholderHeight = 1550;\r\n    this.imagePlaceholderX = 109;\r\n    this.imagePlaceholderY = 114;\r\n\r\n    this.reduceRate = 1.5;\r\n\r\n    this.createLoader();\r\n    this.initDOMSVG();\r\n    this.initBasicControls();\r\n    this.initBasicControlsEvents();\r\n  }\r\n\r\n  initDOMSVG() {\r\n    this.calendarWrapper = document.createElement(\"div\");\r\n    this.calendarWrapper.classList.add(\"calendar-wrapper\");\r\n\r\n    this.calendarInner = document.createElement(\"div\");\r\n    this.calendarInner.classList.add(\"calendar-inner\");\r\n\r\n    const mockupContainer = document.createElement(\"div\");\r\n    mockupContainer.id = \"mockup-container\";\r\n\r\n    mockupContainer.innerHTML = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2100 2970\" id=\"mockup\">\r\n  \r\n  <rect id=\"background-rect\" width=\"2100\" height=\"2970\" style=\"fill: #fff\"/>\r\n\r\n  <g id=\"image-group\">\r\n\r\n    <rect id=\"image-placeholder\" x=\"109\" y=\"114\" width=\"1883\" height=\"1550\" style=\"fill: #e8e8e8\"/>\r\n\r\n  </g>\r\n\r\n</svg>\r\n    `;\r\n\r\n    let x = 95;\r\n    let y = 1700;\r\n\r\n    // Global loop\r\n    for (let i = 0; i < 12; i++) {\r\n      // Create month container\r\n      const monthContainer = document.createElementNS(\r\n        \"http://www.w3.org/2000/svg\",\r\n        \"svg\"\r\n      );\r\n      monthContainer.id = `month-container-${i}`;\r\n\r\n      // if new row...\r\n      if (i === 4 || i === 8) {\r\n        // Increment y-movement\r\n        y += this.monthCellHeight + 23;\r\n        x = 100;\r\n      }\r\n\r\n      monthContainer.setAttribute(\"x\", x);\r\n      monthContainer.setAttribute(\"y\", y);\r\n\r\n      monthContainer.setAttribute(\"width\", this.monthCellWidth);\r\n      monthContainer.setAttribute(\"height\", this.monthCellHeight);\r\n\r\n      monthContainer.dataset.month = this.monthCounter;\r\n      monthContainer.dataset.year = this.year;\r\n\r\n      // Increment x-movement\r\n      x += this.monthCellWidth + 23;\r\n\r\n      // Populate current month\r\n\r\n      if (this.lang === \"ru\") {\r\n        monthContainer.innerHTML = `\r\n      <g id=\"month-title\">\r\n          <g transform=\"translate(24 12)\">\r\n          ${glyphsSP.monthsRu[this.monthCounter]}\r\n          </g>\r\n        </g>\r\n\r\n        <g id=\"year-title\">\r\n          <g transform=\"translate(360 18)\">\r\n          ${glyphsSP.years[this.year]}\r\n          </g>\r\n        </g>\r\n\r\n        <g id=\"week-days-titles\">\r\n          <g transform=\"translate(21 67.5) scale(1.5)\">\r\n          ${glyphsSP.weekDaysRu.monday}\r\n          </g>\r\n          <g transform=\"translate(87.8 67.5) scale(1.5)\">\r\n          ${glyphsSP.weekDaysRu.tuesday}\r\n          </g>\r\n          <g transform=\"translate(149 67.5) scale(1.5)\">\r\n          ${glyphsSP.weekDaysRu.wednesday}\r\n          </g>\r\n          <g transform=\"translate(217 67.5) scale(1.5)\">\r\n          ${glyphsSP.weekDaysRu.thursday}\r\n          </g>\r\n          <g transform=\"translate(283 67.5) scale(1.5)\">\r\n          ${glyphsSP.weekDaysRu.friday}\r\n          </g>\r\n          <g transform=\"translate(346 67.5) scale(1.5)\">\r\n          ${glyphsSP.weekDaysRu.saturday}\r\n          </g>\r\n          <g transform=\"translate(411 67.5) scale(1.5)\">\r\n           ${glyphsSP.weekDaysRu.sunday}\r\n          </g>\r\n        </g>\r\n\r\n          <g id=\"days-grid\"></g>\r\n        `;\r\n      } else if (this.lang === 'en') {\r\n        monthContainer.innerHTML = `\r\n      <g id=\"month-title\">\r\n          <g transform=\"translate(24 12)\">\r\n          ${glyphsSP.monthsEn[this.monthCounter]}\r\n          </g>\r\n        </g>\r\n\r\n        <g id=\"year-title\">\r\n          <g transform=\"translate(360 18)\">\r\n          ${glyphsSP.years[this.year]}\r\n          </g>\r\n        </g>\r\n\r\n        <g id=\"week-days-titles\">\r\n          <g transform=\"translate(18 67.5)\">\r\n          ${glyphsSP.weekDaysEn.monday}\r\n          </g>\r\n          <g transform=\"translate(85.5 67.5)\">\r\n          ${glyphsSP.weekDaysEn.tuesday}\r\n          </g>\r\n          <g transform=\"translate(146.13 67.5)\">\r\n          ${glyphsSP.weekDaysEn.wednesday}\r\n          </g>\r\n          <g transform=\"translate(214.95 67.5)\">\r\n          ${glyphsSP.weekDaysEn.thursday}\r\n          </g>\r\n          <g transform=\"translate(284.96 67.5)\">\r\n          ${glyphsSP.weekDaysEn.friday}\r\n          </g>\r\n          <g transform=\"translate(351.06 67.5)\">\r\n          ${glyphsSP.weekDaysEn.saturday}\r\n          </g>\r\n          <g transform=\"translate(414 67.5)\">\r\n           ${glyphsSP.weekDaysEn.sunday}\r\n          </g>\r\n        </g>\r\n\r\n          <g id=\"days-grid\"></g>\r\n        `;\r\n      }\r\n\r\n      if (i === 11) {\r\n        this.lastMonth = this.monthCounter;\r\n        this.endYear = this.year;\r\n      }\r\n\r\n      this.monthCounter++;\r\n\r\n      if (this.monthCounter > 11) {\r\n        this.monthCounter = 0;\r\n        this.year++;\r\n      }\r\n\r\n      const currentMonthGrid = monthContainer.querySelector(\"#days-grid\");\r\n\r\n      this.createMonthGrid(\r\n        currentMonthGrid,\r\n        this.getFirstDay(this.monthCounter - 1, this.year) - 1,\r\n        this.daysInMonth(this.monthCounter, this.year),\r\n        this.daysInMonth(this.monthCounter - 1, this.year) - 1,\r\n        0,\r\n        86.42,\r\n        glyphsSP,\r\n        'fill: none;stroke: none; stroke-width: 0; stroke-miterlimit: 0;'\r\n      );\r\n\r\n      // Append to main SVG\r\n      mockupContainer.querySelector(\"svg\").appendChild(monthContainer);\r\n    }\r\n\r\n    // Insert to DOM\r\n    this.calendarInner.append(mockupContainer);\r\n    this.calendarWrapper.append(this.calendarInner);\r\n    this.parentContainer.append(this.calendarWrapper);\r\n  }\r\n\r\n  retrieveImages(imagesArr) {\r\n    const imageFile = imagesArr[0].image;\r\n\r\n    fetch(imageFile)\r\n      .then(res => {\r\n        const imgURL = res.url;\r\n        const imageGroup = document.querySelector('#image-group');\r\n\r\n        const imageEl = document.createElementNS(\r\n          \"http://www.w3.org/2000/svg\",\r\n          \"image\"\r\n        );\r\n\r\n        imageEl.setAttribute(\"height\", this.imagePlaceholderHeight);\r\n        imageEl.setAttribute(\"width\", this.imagePlaceholderWidth);\r\n        imageEl.setAttribute(\"x\", this.imagePlaceholderX);\r\n        imageEl.setAttribute(\"y\", this.imagePlaceholderY);\r\n        imageEl.setAttributeNS(\r\n          \"http://www.w3.org/1999/xlink\",\r\n          \"href\",\r\n          imgURL\r\n        );\r\n\r\n        imageGroup.innerHTML = \"\";\r\n        imageGroup.appendChild(imageEl);\r\n      });\r\n  }\r\n}","import { Calendar } from \"./Calendar.js\";\r\nimport { glyphsMP } from \"../assets/Montserrat/MontserratGlyphs.js\";\r\n\r\nexport class MultiPageCalendar extends Calendar {\r\n  constructor(\r\n    firstMonthIndex,\r\n    year,\r\n    parentContainer,\r\n    controlsContainer,\r\n    cropControlsContainer,\r\n    lang,\r\n    type\r\n  ) {\r\n    super(\r\n      firstMonthIndex,\r\n      year,\r\n      parentContainer,\r\n      controlsContainer,\r\n      cropControlsContainer,\r\n      lang,\r\n      type\r\n    );\r\n\r\n    // Mockup pre-defined dimensions\r\n    this.dayCellHeight = 15;\r\n    this.dayCellWidth = 25;\r\n\r\n    this.imagePlaceholderWidth = 188.3;\r\n    this.imagePlaceholderHeight = 155;\r\n    this.imagePlaceholderX = 10.9;\r\n    this.imagePlaceholderY = 11.4;\r\n\r\n    this.reduceRate = 15;\r\n\r\n    // this.currentMonth = 0;\r\n\r\n    this.createLoader();\r\n\r\n    this.initDOMSVG();\r\n    this.initBasicControls();\r\n    this.initMultiPageControls();\r\n    this.initBasicControlsEvents();\r\n    this.initMultiPageControlsEvents();\r\n\r\n    this.pagesArray = [...this.calendarInner.querySelectorAll(\"svg\")];\r\n  }\r\n\r\n  initDOMSVG() {\r\n    this.calendarWrapper = document.createElement(\"div\");\r\n    this.calendarWrapper.classList.add(\"calendar-wrapper\");\r\n\r\n    this.calendarInner = document.createElement(\"div\");\r\n    this.calendarInner.classList.add(\"calendar-inner\");\r\n\r\n    this.setVisibleMonth();\r\n\r\n    // Create months templates\r\n    for (let i = 0; i < 12; i++) {\r\n      const monthContainer = document.createElement(\"div\");\r\n\r\n      monthContainer.classList.add(\"month-container\");\r\n      monthContainer.id = `month-${i}-container`;\r\n\r\n      // Basic month mockup\r\n      monthContainer.innerHTML = `\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 210 297\" id=\"mockup-${i}\">\r\n\r\n        <rect\r\n          id=\"background-rect-${i}\"\r\n          width=\"210\"\r\n          height=\"297\"\r\n          style=\"fill: #fff\"/>\r\n   \r\n        <g id=\"days-grid-${i}\"></g>\r\n        \r\n        <g id=\"text-group-${i}\">\r\n\r\n          <g\r\n            id=\"month-title-${i}\"\r\n            transform=\"translate(30 172.5) scale(0.5)\">\r\n          </g>\r\n\r\n          <g\r\n            id=\"year-title-${i}\"\r\n            transform=\"translate(150 174.4)\">\r\n          </g>\r\n\r\n          <g id=\"days-titles-${i}\">\r\n          </g>\r\n\r\n        </g>\r\n\r\n        <g id=\"image-group\">\r\n\r\n        <rect id=\"image-placeholder-${i}\"\r\n          x=\"10.9\"\r\n          y=\"11.4\"\r\n          width=\"188.3\"\r\n          height=\"155\"\r\n          style=\"fill: #e8e8e8\"/>\r\n        </g>\r\n\r\n      </svg>\r\n      `;\r\n\r\n      const daysTitles = monthContainer.querySelector(`#days-titles-${i}`);\r\n\r\n      if (this.lang === \"ru\") {\r\n        daysTitles.innerHTML = `\r\n      <g\r\n    transform= \"translate(18.5 190) scale(0.45)\">\r\n      ${glyphsMP.weekDaysRu.monday}\r\n            </g >\r\n\r\n            <g\r\n              transform=\"translate(48 190) scale(0.45)\">\r\n              ${glyphsMP.weekDaysRu.tuesday}\r\n            </g>\r\n\r\n            <g\r\n              transform=\"translate(74 190) scale(0.45)\">\r\n              ${glyphsMP.weekDaysRu.wednesday}\r\n            </g>\r\n\r\n            <g\r\n              transform=\"translate(97.2 190) scale(0.45)\">\r\n              ${glyphsMP.weekDaysRu.thursday}\r\n            </g>\r\n\r\n            <g\r\n              transform=\"translate(122 190) scale(0.45)\">\r\n              ${glyphsMP.weekDaysRu.friday}\r\n            </g>\r\n\r\n            <g\r\n              transform=\"translate(148 190) scale(0.45)\">\r\n              ${glyphsMP.weekDaysRu.saturday}\r\n            </g>\r\n\r\n            <g\r\n              transform=\"translate(169 190) scale(0.45)\">\r\n              ${glyphsMP.weekDaysRu.sunday}\r\n            </g>\r\n    `;\r\n      } else if (this.lang === \"en\") {\r\n        daysTitles.innerHTML = `\r\n      <g\r\n    transform=\"translate(22.72 190) scale(0.5)\" >\r\n      ${glyphsMP.weekDaysEn.monday}\r\n            </g >\r\n\r\n            <g\r\n              transform=\"translate(47.72 190) scale(0.5)\">\r\n              ${glyphsMP.weekDaysEn.tuesday}\r\n            </g>\r\n\r\n            <g\r\n              transform=\"translate(69 190) scale(0.5)\">\r\n              ${glyphsMP.weekDaysEn.wednesday}\r\n            </g>\r\n\r\n            <g\r\n              transform=\"translate(96.72 190) scale(0.5)\">\r\n              ${glyphsMP.weekDaysEn.thursday}\r\n            </g>\r\n\r\n            <g\r\n              transform=\"translate(124.72 190) scale(0.5)\">\r\n              ${glyphsMP.weekDaysEn.friday}\r\n            </g>\r\n\r\n            <g\r\n              transform=\"translate(147 190) scale(0.5)\">\r\n              ${glyphsMP.weekDaysEn.saturday}\r\n            </g>\r\n\r\n            <g\r\n              transform=\"translate(173 190) scale(0.5)\">\r\n              ${glyphsMP.weekDaysEn.sunday}\r\n            </g>\r\n    `;\r\n      }\r\n\r\n      const monthEl = monthContainer.querySelector(`#month-title-${i}`);\r\n      const yearEl = monthContainer.querySelector(`#year-title-${i}`);\r\n\r\n      if (this.lang === 'ru') {\r\n        monthEl.innerHTML = glyphsMP.monthsRu[this.monthCounter];\r\n      } else if (this.lang === 'en') {\r\n        monthEl.innerHTML = glyphsMP.monthsEn[this.monthCounter];\r\n      }\r\n\r\n      yearEl.innerHTML = glyphsMP.years[this.year];\r\n\r\n      // Insert year & month data on container\r\n      monthContainer.dataset.year = this.year;\r\n      monthContainer.dataset.month = this.monthCounter;\r\n\r\n      if (i === 11) {\r\n        this.lastMonth = this.monthCounter;\r\n        this.endYear = this.year;\r\n      }\r\n\r\n      this.monthCounter++;\r\n\r\n      if (this.monthCounter > 11) {\r\n        this.monthCounter = 0;\r\n        this.year++;\r\n      }\r\n\r\n      this.calendarInner.append(monthContainer);\r\n\r\n      const currentMonthGrid = monthContainer.querySelector(`#days-grid-${i}`);\r\n\r\n      this.createMonthGrid(\r\n        currentMonthGrid,\r\n        this.getFirstDay(this.monthCounter - 1, this.year) - 1,\r\n        this.daysInMonth(this.monthCounter, this.year),\r\n        this.daysInMonth(this.monthCounter - 1, this.year),\r\n        17,\r\n        195.8,\r\n        glyphsMP,\r\n        'fill: none; stroke:#999999; stroke-miterlimit: 10; stroke-width: .5px;'\r\n      );\r\n\r\n\r\n    }\r\n\r\n    this.calendarWrapper.append(this.calendarInner);\r\n    this.parentContainer.append(this.calendarWrapper);\r\n  }\r\n\r\n  initMultiPageControls() {\r\n    this.prevBtn = document.createElement('button');\r\n    this.prevBtn.id = 'prev-month';\r\n    this.prevBtn.innerHTML = `<img src='./assets/icons/prev.svg'/>`;\r\n\r\n    this.nextBtn = document.createElement('button');\r\n    this.nextBtn.id = 'next-month';\r\n    this.nextBtn.innerHTML = `<img src='./assets/icons/next.svg'/>`;\r\n\r\n    this.allPDFDownloadBtn = document.createElement('button');\r\n    this.allPDFDownloadBtn.id = 'pdf-download-all';\r\n    this.allPDFDownloadBtn.innerHTML = `<img src='./assets/icons/pdf-multi.svg'/>`;\r\n\r\n\r\n    this.multipleImagesInput = document.createElement('input');\r\n    this.multipleImagesInput.setAttribute('type', 'file');\r\n    this.multipleImagesInput.setAttribute('multiple', 'multiple');\r\n    this.multipleImagesInput.setAttribute('accept', 'image/jpeg, image/png, image/jpg');\r\n    this.multipleImagesInput.id = 'upload-multiple-input';\r\n    this.multipleImagesInput.hidden = true;\r\n    // this.multipleImagesInput.onclick = function(){\r\n    //  this.value = null;\r\n    // }\r\n\r\n\r\n    this.uploadMultipleImgsBtn = document.createElement('label');\r\n    this.uploadMultipleImgsBtn.setAttribute('for', 'upload-multiple-input')\r\n    this.uploadMultipleImgsBtn.id = 'upload-multiple';\r\n    this.uploadMultipleImgsBtn.innerHTML = `<img src='./assets/icons/upload-multi.svg'/>`;\r\n\r\n    `    <input\r\n      type=\"file\"\r\n      id=\"upload-input\"\r\n      accept=\"image/jpeg, image/png, image/jpg\"\r\n      hidden\r\n      onclick=\"this.value=null;\"/>\r\n          \r\n      <label for=\"upload-input\" id=\"upload-btn\" class=\"upload-btn\">\r\n        <img src='./assets/icons/upload.svg'/>\r\n      </label>`\r\n\r\n\r\n    this.controlsContainer.insertAdjacentElement('afterbegin', this.allPDFDownloadBtn);\r\n    this.controlsContainer.insertAdjacentElement('afterbegin', this.prevBtn);\r\n\r\n    this.controlsContainer.insertAdjacentElement('beforeend', this.multipleImagesInput);\r\n    this.controlsContainer.insertAdjacentElement('beforeend', this.uploadMultipleImgsBtn);\r\n    this.controlsContainer.insertAdjacentElement('beforeend', this.nextBtn);\r\n  }\r\n\r\n  initMultiPageControlsEvents() {\r\n    this.nextBtn.addEventListener(\"click\", () => {\r\n      if (this.cropper) {\r\n        this.removeCropper();\r\n      }\r\n\r\n      this.currentMonth++;\r\n\r\n      if (this.currentMonth > 11) {\r\n        this.currentMonth = 0;\r\n      }\r\n\r\n      this.setVisibleMonth();\r\n    });\r\n\r\n    this.prevBtn.addEventListener(\"click\", () => {\r\n      if (this.cropper) {\r\n        this.removeCropper();\r\n      }\r\n\r\n      this.currentMonth--;\r\n      if (this.currentMonth < 0) {\r\n        this.currentMonth = 11;\r\n      }\r\n\r\n      this.setVisibleMonth();\r\n    });\r\n\r\n    this.multipleImagesInput.addEventListener('change', (e) => {\r\n      if (this.cropper) {\r\n        this.removeCropper();\r\n      }\r\n      this.uploadMultipleImages(e);\r\n    })\r\n    this.allPDFDownloadBtn.addEventListener(\"click\", () => {\r\n      if (this.cropper) {\r\n        this.removeCropper();\r\n      }\r\n\r\n      this.downloadPDF(\"all\");\r\n    });\r\n  }\r\n\r\n  setVisibleMonth() {\r\n    this.calendarInner.style.left = `-${this.currentMonth * 100}%`;\r\n  }\r\n\r\n  uploadMultipleImages(e) {\r\n    if (!e.target.files[0]) return;\r\n\r\n    let files = [...e.target.files];\r\n\r\n    let loadedFilesCounter = 0;\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (e) => {\r\n\r\n        const imageGroup = this.calendarInner.querySelector(`#month-${i}-container #image-group`);\r\n        const imageEl = document.createElementNS(\r\n          \"http://www.w3.org/2000/svg\",\r\n          \"image\"\r\n        );\r\n\r\n        imageEl.setAttribute(\"height\", this.imagePlaceholderHeight);\r\n        imageEl.setAttribute(\"width\", this.imagePlaceholderWidth);\r\n        imageEl.setAttribute(\"x\", this.imagePlaceholderX);\r\n        imageEl.setAttribute(\"y\", this.imagePlaceholderY);\r\n\r\n        // Image optimization\r\n        const reduced = this.reduceImageSize(\r\n          e.target.result,\r\n          this.imagePlaceholderWidth * this.reduceRate,\r\n          this.imagePlaceholderHeight * this.reduceRate\r\n        );\r\n\r\n\r\n        reduced.then(reducedImage => {\r\n          const resultImage = reducedImage ? reducedImage : e.target.result;\r\n\r\n          this.saveToIDB(resultImage, i);\r\n\r\n          imageEl.setAttributeNS(\r\n            \"http://www.w3.org/1999/xlink\",\r\n            \"href\",\r\n            resultImage\r\n          );\r\n          imageGroup.innerHTML = \"\";\r\n          imageGroup.appendChild(imageEl);\r\n          loadedFilesCounter++;\r\n        }).then(() => {\r\n          if (loadedFilesCounter === files.length ||\r\n            loadedFilesCounter === 11) {\r\n            this.loading('hide');\r\n          }\r\n        })\r\n      };\r\n\r\n      reader.readAsDataURL(files[i]);\r\n      this.loading('show');\r\n\r\n      if (i === 11) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  retrieveImages(imagesArr) {\r\n    this.loading('show');\r\n    let loadingCounter = 0;\r\n\r\n    imagesArr.forEach(imageItem => {\r\n      const currentMonthContainer = imageItem.id;\r\n\r\n      fetch(imageItem.image)\r\n        .then(res => {\r\n          const imgURL = res.url;\r\n\r\n          const imageGroup = document.querySelector(\r\n            `#month-${currentMonthContainer}-container #image-group`);\r\n\r\n          const imageEl = document.createElementNS(\r\n            \"http://www.w3.org/2000/svg\",\r\n            \"image\"\r\n          );\r\n\r\n          imageEl.setAttribute(\"height\", this.imagePlaceholderHeight);\r\n          imageEl.setAttribute(\"width\", this.imagePlaceholderWidth);\r\n          imageEl.setAttribute(\"x\", this.imagePlaceholderX);\r\n          imageEl.setAttribute(\"y\", this.imagePlaceholderY);\r\n          imageEl.setAttributeNS(\r\n            \"http://www.w3.org/1999/xlink\",\r\n            \"href\",\r\n            imgURL\r\n          );\r\n\r\n          imageGroup.innerHTML = \"\";\r\n          imageGroup.appendChild(imageEl);\r\n          loadingCounter++;\r\n\r\n          if (loadingCounter === imagesArr.length) {\r\n            this.loading('hide');\r\n          }\r\n        });\r\n    });\r\n  }\r\n}","import { SinglePageCalendar } from \"./SinglePageCalendar.js\";\r\nimport { MultiPageCalendar } from \"./MultiPageCalendar.js\";\r\n\r\nconst newProjectBtn = document.querySelector('#new-project');\r\nconst newProjectContainer = document.querySelector('.new-project-container');\r\n\r\nconst newCalendarInputsContainer = document.querySelector('.new-calendar-controls');\r\n\r\nconst getButton = document.querySelector(\"#get-button\");\r\n\r\nconst monthInput = document.querySelector(\"#month-input\");\r\nconst yearInput = document.querySelector(\"#year-input\");\r\nconst multiModeBtn = document.querySelector('#multi-page');\r\nconst langInput = document.querySelector('#lang-input');\r\n\r\nconst calendarContainer = document.querySelector(\".calendar-container\");\r\nconst controlsContainer = document.querySelector(\".controls-container\");\r\nconst cropControlsContainer = document.querySelector(\r\n  \".crop-controls-container\"\r\n);\r\n\r\nnewProjectBtn.addEventListener('click', () => {\r\n  newProjectContainer.style.top = '-60px';\r\n});\r\n\r\nnewCalendarInputsContainer.addEventListener('mouseleave', () => {\r\n  setTimeout(() => {\r\n    newProjectContainer.style.top = '0px';\r\n  }, 5000)\r\n})\r\n\r\nlet currentCalendar;\r\n\r\ngetButton.addEventListener(\"click\", () => {\r\n\r\n  // Gather data from inputs\r\n  const startYear = +yearInput.value;\r\n  const firstMonthIndex = +monthInput.value;\r\n  const lang = langInput.value;\r\n  const mode = multiModeBtn.checked ? \"multi-page\" : \"single-page\";\r\n\r\n  const newCalendarData = { startYear, firstMonthIndex, lang, mode };\r\n\r\n  // Purge all current content\r\n  calendarContainer.innerHTML = \"\";\r\n\r\n  // If old project in cropper mode - remove cropper\r\n  if (document.querySelector(\".cropper-outer-container\")) {\r\n    document.querySelector(\".cropper-outer-container\").remove();\r\n  }\r\n\r\n  // Generate new calendar\r\n  newCalendar(newCalendarData);\r\n\r\n  // Set new calendar in IDB\r\n  newProjectIDB(newCalendarData);\r\n\r\n  // Hide new calendar inputs\r\n  newProjectContainer.style.top = '0px';\r\n});\r\n\r\nfunction loadProject() {\r\n  // Open IDB\r\n  const indexedDB =\r\n    window.indexedDB ||\r\n    window.mozIndexedDB ||\r\n    window.webkitIndexedDB ||\r\n    window.msIndexedDB ||\r\n    window.shimIndexedDB;\r\n\r\n  const request = indexedDB.open(\"Photo Calendar Project\", 1);\r\n\r\n  // Initially set DB\r\n  request.onupgradeneeded = function () {\r\n    const db = request.result;\r\n\r\n    // Set data object\r\n    const dataStore = db.createObjectStore(\"current_project_data\", {\r\n      keyPath: \"id\",\r\n    });\r\n\r\n    dataStore.createIndex(\"firstMonthIndex\", [\"firstMonthIndex\"], {\r\n      unique: false,\r\n    });\r\n    dataStore.createIndex(\"startYear\", [\"startYear\"], { unique: false });\r\n    dataStore.createIndex(\"lang\", [\"lang\"], { unique: false });\r\n    dataStore.createIndex(\"mode\", [\"mode\"], { unique: false });\r\n\r\n    // Set images object\r\n    const imagesStore = db.createObjectStore(\"current_project_images\", {\r\n      keyPath: \"id\",\r\n      autoIncrement: true,\r\n    });\r\n\r\n    imagesStore.createIndex(\"images\", [\"images\"], {\r\n      unique: false,\r\n    });\r\n  };\r\n\r\n  request.onsuccess = function () {\r\n    // Check if there any data in DB\r\n    const db = request.result;\r\n\r\n    // Init transaction on all stored objects\r\n    const transaction = db.transaction(\r\n      db.objectStoreNames,\r\n      \"readwrite\");\r\n\r\n    const dataStore = transaction.objectStore(\"current_project_data\");\r\n    const imagesStore = transaction.objectStore(\"current_project_images\");\r\n\r\n    // Get data object\r\n    const query = dataStore.get(0);\r\n\r\n    query.onsuccess = function () {\r\n      // If data...\r\n      if (query.result) {\r\n        newCalendar(query.result);\r\n        // If images...\r\n        const imagesQuery = imagesStore.getAll();\r\n        imagesQuery.onsuccess = function () {\r\n          if (imagesQuery.result.length !== 0) {\r\n            // Retrieve images array via current calendar method\r\n            currentCalendar.retrieveImages(imagesQuery.result);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    transaction.oncomplete = function () {\r\n      db.close();\r\n    };\r\n  }\r\n}\r\n\r\n// Set new project in IDB\r\nfunction newProjectIDB({ startYear, firstMonthIndex, lang, mode }) {\r\n  // Open IDB\r\n  const indexedDB =\r\n    window.indexedDB ||\r\n    window.mozIndexedDB ||\r\n    window.webkitIndexedDB ||\r\n    window.msIndexedDB ||\r\n    window.shimIndexedDB;\r\n\r\n  const request = indexedDB.open(\"Photo Calendar Project\", 1);\r\n\r\n  request.onsuccess = function () {\r\n    const db = request.result;\r\n\r\n    const transaction = db.transaction(\r\n      db.objectStoreNames,\r\n      \"readwrite\");\r\n\r\n    const dataStore = transaction.objectStore(\"current_project_data\");\r\n    const imagesStore = transaction.objectStore(\"current_project_images\");\r\n\r\n    // Add new data to db\r\n    dataStore.put({\r\n      id: 0,\r\n      startYear,\r\n      firstMonthIndex,\r\n      lang: lang,\r\n      mode: mode,\r\n    });\r\n\r\n    // Remove old images\r\n    imagesStore.clear();\r\n\r\n    transaction.oncomplete = function () {\r\n      db.close();\r\n    };\r\n  };\r\n}\r\n\r\n// Init calendar\r\nfunction newCalendar({ startYear, firstMonthIndex, lang, mode }) {\r\n  if (mode === 'multi-page') {\r\n    currentCalendar = new MultiPageCalendar(\r\n      firstMonthIndex,\r\n      startYear,\r\n      calendarContainer,\r\n      controlsContainer,\r\n      cropControlsContainer,\r\n      lang,\r\n      mode\r\n    );\r\n  } else {\r\n    currentCalendar = new SinglePageCalendar(\r\n      firstMonthIndex,\r\n      startYear,\r\n      calendarContainer,\r\n      controlsContainer,\r\n      cropControlsContainer,\r\n      lang,\r\n      mode\r\n    );\r\n  };\r\n};\r\n\r\n// Init - if some data in IDB - retrieve project. If not - set up IDB schema for future projects\r\nloadProject();"],"names":["$580b9926dc0eed57$exports","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","value","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","from","o","minLen","n","toString","call","slice","name","test","len","arr2","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","MIN_CONTAINER_WIDTH","MIN_CONTAINER_HEIGHT","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","TEMPLATE","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","maxRatio","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","ratio","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","scale","drawImage","map","param","floor","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","render","this","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","limited","limitCanvas","oldLeft","oldTop","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","ratioX","ratioY","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","x","y","check","side","move","p","methods","reset","initialImageData","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","read","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","factory","$29268708ddc5a33f$export$e1aef45b828286de","firstMonthIndex","year","parentContainer","controlsContainer","cropControlsContainer","lang","outputDimensions","A5","A4","A3","currentSize","currentMonth","monthCounter","firstMonth","startYear","lastMonth","endYear","initBasicControls","formatSelectInput","formats","format","optionEl","textContent","selected","append","currentPDFDownloadBtn","jpgDownloadBtn","uploadImgBtn","cropBtn","uploadImgInput","initBasicControlsEvents","removeCropper","downloadPDF","downloadCurrentJPG","currentImageElement","getCurrentMockup","loading","initCropper","e","uploadImg","files","imageFile","reader","FileReader","imageGroup","imageEl","createElementNS","imagePlaceholderHeight","imagePlaceholderWidth","imagePlaceholderX","imagePlaceholderY","reduceImageSize","result","reduceRate","then","reducedImage","resultImage","setAttributeNS","saveToIDB","readAsDataURL","async","base64Str","Promise","resolve","Image","svg","svgData","XMLSerializer","serializeToString","ctx","properAttributes","fileName","getFileName","a","download","href","click","amount","pagesArray","doc","PDFDocument","size","stream","pipe","blobStream","info","page","SVGtoPDF","addPage","on","toBlobURL","my_evt","MouseEvent","span","firstMonthYear","firstMonthName","toLocaleString","month","lastMonthYear","currentMonthContainer","fetch","res","blob","cropperOuter","updateCropperPosition","imageElement","URL","createObjectURL","$parcel$interopDefault","initCropperControls","applyCropBtn","applyCrop","initialZoomRatio","onresize","zoomRatio","toFixed","position","willReadFrequently","resultURL","display","cancelCropBtn","calendarInner","createMonthGrid","monthGrid","startIndex","totalDays","prevMonthDaysNumber","glyphsSet","cellStyles","currentDayIndex","prevMonthDaysCount","createDayCell","dayCellWidth","dayCellHeight","cellsTextFields","digits","secondaryDigits","cellNumber","dayGroup","daysInMonth","getDate","getFirstDay","index","getDay","createLoader","loadingScreen","insertAdjacentElement","pointerEvents","id","request","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","shimIndexedDB","onsuccess","db","transaction","objectStore","put","oncomplete","close","$718ec0d384d167d8$export$8174ac195545f917","monthsRu","monthsEn","years","weekDaysRu","monday","tuesday","wednesday","thursday","friday","saturday","sunday","weekDaysEn","$718ec0d384d167d8$export$f50f8b3527ae237b","$df3d790c2c369aa5$export$835a2bed4a32fd1f","super","monthCellHeight","monthCellWidth","initDOMSVG","calendarWrapper","mockupContainer","monthContainer","currentMonthGrid","retrieveImages","imagesArr","imgURL","$042b4a0bba0e0f0d$export$9f159a9bf95d56c2","initMultiPageControls","initMultiPageControlsEvents","setVisibleMonth","daysTitles","monthEl","yearEl","prevBtn","nextBtn","allPDFDownloadBtn","multipleImagesInput","hidden","uploadMultipleImgsBtn","uploadMultipleImages","loadedFilesCounter","loadingCounter","imageItem","$1ee2b6306238ec66$var$newProjectBtn","$1ee2b6306238ec66$var$newProjectContainer","$1ee2b6306238ec66$var$newCalendarInputsContainer","$1ee2b6306238ec66$var$getButton","$1ee2b6306238ec66$var$monthInput","$1ee2b6306238ec66$var$yearInput","$1ee2b6306238ec66$var$multiModeBtn","$1ee2b6306238ec66$var$langInput","$1ee2b6306238ec66$var$calendarContainer","$1ee2b6306238ec66$var$controlsContainer","$1ee2b6306238ec66$var$cropControlsContainer","$1ee2b6306238ec66$var$currentCalendar","$1ee2b6306238ec66$var$newCalendar","newCalendarData","checked","objectStoreNames","dataStore","imagesStore","$1ee2b6306238ec66$var$newProjectIDB","onupgradeneeded","createObjectStore","keyPath","createIndex","unique","autoIncrement","query","imagesQuery","getAll","$1ee2b6306238ec66$var$loadProject"],"version":3,"file":"index.dcd2d08d.js.map"}